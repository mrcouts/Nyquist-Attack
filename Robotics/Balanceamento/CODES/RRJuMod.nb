(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 9.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    517468,      11595]
NotebookOptionsPosition[    508736,      11314]
NotebookOutlinePosition[    509069,      11329]
CellTagsIndexPosition[    509026,      11326]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{"ClearAll", ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Zeros", "[", 
    RowBox[{"i_", ",", "j_"}], "]"}], ":=", " ", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"0", ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "j"}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Eye", "[", "n_", "]"}], ":=", " ", 
   RowBox[{"IdentityMatrix", "[", "n", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Sat", "[", 
    RowBox[{"x_", ",", "\[Phi]_"}], "]"}], ":=", " ", 
   RowBox[{"Piecewise", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", " ", 
        RowBox[{
         RowBox[{"x", "/", "\[Phi]"}], "\[LessEqual]", "  ", 
         RowBox[{"-", "1"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"x", "/", "\[Phi]"}], ",", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"x", "/", "\[Phi]"}], " ", ">", " ", 
          RowBox[{"-", "1"}]}], " ", "&&", " ", 
         RowBox[{
          RowBox[{"x", "/", "\[Phi]"}], " ", "<", " ", "1"}]}]}], "}"}], ",", 
      
      RowBox[{"{", 
       RowBox[{"1", ",", " ", 
        RowBox[{
         RowBox[{"x", "/", "\[Phi]"}], "\[GreaterEqual]", "  ", "1"}]}], 
       "}"}]}], "}"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.608036844946958*^9, 3.608036856981612*^9}, {
  3.617707385127326*^9, 3.617707385476482*^9}, {3.617887304086273*^9, 
  3.617887305066886*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"n", "=", "2"}], ";"}]], "Input",
 CellChangeTimes->{{3.608036859146826*^9, 3.608036943127625*^9}, {
  3.6082140327555943`*^9, 3.608214032951375*^9}, {3.6084762366280403`*^9, 
  3.608476237334518*^9}, {3.608481034470477*^9, 3.608481034589143*^9}, {
  3.610893110503602*^9, 3.610893127874308*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   SubscriptBox["N\[CapitalOmega]", "d"], "=", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["N\[CapitalOmega]", "e"], "=", 
   RowBox[{"Complement", "[", 
    RowBox[{
     RowBox[{"Range", "[", "n", "]"}], ",", 
     SubscriptBox["N\[CapitalOmega]", "d"]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["NV", "d"], "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["NV", "e"], "=", 
   RowBox[{"Complement", "[", 
    RowBox[{
     RowBox[{"Range", "[", 
      RowBox[{"2", "n"}], "]"}], ",", 
     SubscriptBox["NV", "d"]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6102893789163723`*^9, 3.610289459096487*^9}, {
  3.610295492854413*^9, 3.610295498446271*^9}, {3.610892937879599*^9, 
  3.610893017249422*^9}, {3.610893059354644*^9, 3.610893087456341*^9}, {
  3.611671578019615*^9, 3.611671591694124*^9}, {3.611671668635127*^9, 
  3.611671669846788*^9}, {3.616623828445128*^9, 3.616623831156795*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   SubscriptBox["\[ScriptQ]", "d"], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["\[Theta]", "1"], "[", "t", "]"}], ",", 
     RowBox[{
      SubscriptBox["\[Theta]", "2"], "[", "t", "]"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["\[ScriptQ]", "e"], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["x", "1"], "[", "t", "]"}], ",", 
     RowBox[{
      SubscriptBox["y", "1"], "[", "t", "]"}], ",", 
     RowBox[{
      SubscriptBox["x", "2"], "[", "t", "]"}], ",", 
     RowBox[{
      SubscriptBox["y", "2"], "[", "t", "]"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"q", "=", 
   RowBox[{"Join", "[", 
    RowBox[{
     SubscriptBox["\[ScriptQ]", "d"], ",", 
     SubscriptBox["\[ScriptQ]", "e"]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6080369663420143`*^9, 3.6080371961219378`*^9}, {
  3.608214040299872*^9, 3.608214055006925*^9}, {3.608476263452804*^9, 
  3.608476263474492*^9}, {3.610295113136169*^9, 3.610295114646459*^9}, {
  3.611671508467417*^9, 3.611671512338017*^9}, {3.611671548105338*^9, 
  3.6116715490037613`*^9}, {3.6166237999336243`*^9, 3.616623803365755*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[CapitalOmega]p", " ", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["\[Omega]", "z1"], "[", "t", "]"}], ",", 
     RowBox[{
      SubscriptBox["\[Omega]", "z2"], "[", "t", "]"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Vp", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["v", "x1"], "[", "t", "]"}], ",", 
     RowBox[{
      SubscriptBox["v", "y1"], "[", "t", "]"}], ",", 
     RowBox[{
      SubscriptBox["v", "x2"], "[", "t", "]"}], ",", 
     RowBox[{
      SubscriptBox["v", "y2"], "[", "t", "]"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["\[ScriptP]", "d"], "=", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"\[CapitalOmega]p", "\[LeftDoubleBracket]", 
      SubscriptBox["N\[CapitalOmega]", "d"], "\[RightDoubleBracket]"}], ",", 
     RowBox[{"Vp", "\[LeftDoubleBracket]", 
      SubscriptBox["NV", "d"], "\[RightDoubleBracket]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["\[ScriptP]", "e"], "=", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"\[CapitalOmega]p", "\[LeftDoubleBracket]", 
      SubscriptBox["N\[CapitalOmega]", "e"], "\[RightDoubleBracket]"}], ",", 
     RowBox[{"Vp", "\[LeftDoubleBracket]", 
      SubscriptBox["NV", "e"], "\[RightDoubleBracket]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p", "=", 
   RowBox[{"Join", "[", 
    RowBox[{
     SubscriptBox["\[ScriptP]", "d"], ",", 
     SubscriptBox["\[ScriptP]", "e"]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.608037201072307*^9, 3.6080373621847353`*^9}, {
  3.608037442310533*^9, 3.608037467753127*^9}, {3.608214065226624*^9, 
  3.608214075572178*^9}, {3.608476192394545*^9, 3.6084761991032*^9}, {
  3.608480991483616*^9, 3.608481026549947*^9}, {3.610292251913373*^9, 
  3.610292283458988*^9}, {3.610292316046692*^9, 3.610292324375845*^9}, {
  3.610295104240077*^9, 3.6102951058303328`*^9}, {3.610296378354712*^9, 
  3.6102964080520077`*^9}, {3.6108932024084377`*^9, 3.610893210781946*^9}, {
  3.610893244297991*^9, 3.610893415824218*^9}, {3.6116716154357653`*^9, 
  3.6116716164370747`*^9}, {3.611671650116263*^9, 3.6116716508780527`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p", "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.616624414963469*^9, 3.6166244202068367`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {
       RowBox[{
        SubscriptBox["\[Omega]", "z1"], "[", "t", "]"}]},
      {
       RowBox[{
        SubscriptBox["\[Omega]", "z2"], "[", "t", "]"}]},
      {
       RowBox[{
        SubscriptBox["v", "x1"], "[", "t", "]"}]},
      {
       RowBox[{
        SubscriptBox["v", "y1"], "[", "t", "]"}]},
      {
       RowBox[{
        SubscriptBox["v", "x2"], "[", "t", "]"}]},
      {
       RowBox[{
        SubscriptBox["v", "y2"], "[", "t", "]"}]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGDQAOLZ1tOfaH565dj1IlpJF0i7ZFvbgWhXgRN+IPr1teRd
IJpL5upNNyBtcWK/kjeQ/t+2zRhE13kX+oDoaR1qJSA6v/9g1lUgLXapyOM1
kL5x7EtE4edXjmWvZ94A0V93R/0E0S+UPDc3AGmR5x+uNgPpVdv7Il8D6Qfh
j9LeAGmOH6/z/gLpGbFHd4Doz7tVdlh9eeW4rvH9fhD9YHHMGxAtEBjl6gWk
mf335pYDaZGNZa+qgHTjEmOZWiC93FbVAURz+FpEgOgLuxIKQDTXqajYSUBa
SF3kLYhOyFz5A0Svm9swYS6Q7lv7dfI8IK3wP4t/PpAuX1evA6KD6l1PLgDS
+UzhsYuANAClsLuK
  "]]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"m", "=", 
   RowBox[{
    RowBox[{"Dimensions", "[", 
     SubscriptBox["\[ScriptP]", "e"], "]"}], "\[LeftDoubleBracket]", "1", 
    "\[RightDoubleBracket]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.610893419470701*^9, 3.610893482324003*^9}, 
   3.611671651518269*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   SubscriptBox["A", "1"], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{
         SubscriptBox["\[Theta]", "1"], "[", "t", "]"}], "]"}], ",", 
       RowBox[{"-", 
        RowBox[{"Sin", "[", 
         RowBox[{
          SubscriptBox["\[Theta]", "1"], "[", "t", "]"}], "]"}]}], ",", "0"}],
       "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{
         SubscriptBox["\[Theta]", "1"], "[", "t", "]"}], "]"}], ",", 
       RowBox[{"Cos", "[", 
        RowBox[{
         SubscriptBox["\[Theta]", "1"], "[", "t", "]"}], "]"}], ",", "0"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["A", "2"], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{
         SubscriptBox["\[Theta]", "2"], "[", "t", "]"}], "]"}], ",", 
       RowBox[{"-", 
        RowBox[{"Sin", "[", 
         RowBox[{
          SubscriptBox["\[Theta]", "2"], "[", "t", "]"}], "]"}]}], ",", 
       SubscriptBox["l", "1"]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{
         SubscriptBox["\[Theta]", "2"], "[", "t", "]"}], "]"}], ",", 
       RowBox[{"Cos", "[", 
        RowBox[{
         SubscriptBox["\[Theta]", "2"], "[", "t", "]"}], "]"}], ",", "0"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["col", "1"], "=", 
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["l", "g1"], ",", "0", ",", "1"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["col", "2"], "=", 
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["l", "g2"], ",", "0", ",", "1"}], "}"}]}], ";"}]}], "Input",\

 CellChangeTimes->{{3.608037570096177*^9, 3.608037586329762*^9}, {
  3.608214085995879*^9, 3.608214097819659*^9}, {3.60821455255732*^9, 
  3.608214566072626*^9}, {3.60847645201556*^9, 3.60847647696345*^9}, {
  3.6084798896850767`*^9, 3.608479891722691*^9}, {3.6084820022606497`*^9, 
  3.608482002770339*^9}, {3.6102950941326942`*^9, 3.610295095629085*^9}, {
  3.6166238476094027`*^9, 3.616623860468316*^9}, {3.616623908534533*^9, 
  3.616623912249846*^9}, {3.6166312767149563`*^9, 3.61663127933186*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   SubscriptBox["H", "1"], "=", 
   SubscriptBox["A", "1"]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SubscriptBox["H", 
        RowBox[{"#", "+", "1"}]], "=", 
       RowBox[{"FullSimplify", "@", 
        RowBox[{"Dot", "[", 
         RowBox[{
          SubscriptBox["H", "#"], ",", 
          SubscriptBox["A", 
           RowBox[{"#", "+", "1"}]]}], "]"}]}]}], ";"}], ")"}], "&"}], "/@", 
   RowBox[{"Range", "[", 
    RowBox[{"n", "-", "1"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6082141509238443`*^9, 3.608214154047278*^9}, {
   3.608214197066567*^9, 3.608214286678364*^9}, {3.608214320852495*^9, 
   3.6082143724614553`*^9}, {3.6082144821684837`*^9, 3.608214503633315*^9}, {
   3.608218395859557*^9, 3.608218448749428*^9}, {3.608218486623403*^9, 
   3.6082186073931913`*^9}, 3.60821867275842*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SubscriptBox["R", "#"], "=", 
       RowBox[{
        SubscriptBox["H", "#"], "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{"1", ";;", "2"}], ",", 
          RowBox[{"1", ";;", "2"}]}], "]"}], "]"}]}], ";"}], ")"}], "&"}], "/@", 
   RowBox[{"Range", "[", "n", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.608218637725973*^9, 3.608218658107072*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SubscriptBox["S", "#"], "=", 
       RowBox[{"FullSimplify", "@", 
        RowBox[{"Dot", "[", 
         RowBox[{
          RowBox[{
           SubscriptBox["R", "#"], "\[Transpose]"}], ",", 
          RowBox[{"D", "[", 
           RowBox[{
            SubscriptBox["R", "#"], ",", "t"}], "]"}]}], "]"}]}]}], ";"}], 
     ")"}], "&"}], "/@", 
   RowBox[{"Range", "[", "n", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.608218700004016*^9, 3.608218775608314*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SubscriptBox["\[Omega]", "#"], "=", 
       RowBox[{
        SubscriptBox["S", "#"], "\[LeftDoubleBracket]", 
        RowBox[{"2", ",", "1"}], "\[RightDoubleBracket]"}]}], ";"}], ")"}], 
    "&"}], "/@", 
   RowBox[{"Range", "[", "n", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.608218811159046*^9, 3.608218861847369*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SubscriptBox["X", "#"], "=", 
       RowBox[{"FullSimplify", "@", 
        RowBox[{"Dot", "[", 
         RowBox[{
          SubscriptBox["H", "#"], ",", 
          SubscriptBox["col", "#"]}], "]"}]}]}], ";"}], ")"}], "&"}], "/@", 
   RowBox[{"Range", "[", "n", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SubscriptBox["dX", "#"], "=", 
       RowBox[{"FullSimplify", "@", 
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{
           SubscriptBox["X", "#"], "\[LeftDoubleBracket]", 
           RowBox[{"1", ";;", "2"}], "\[RightDoubleBracket]"}], ",", "t"}], 
         "]"}]}]}], ";"}], ")"}], "&"}], "/@", 
   RowBox[{"Range", "[", "n", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.608218884628714*^9, 3.608218930738017*^9}, {
  3.6082189644140177`*^9, 3.608219002676816*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SubscriptBox["v", "#"], "=", 
       RowBox[{"FullSimplify", "@", 
        RowBox[{"Dot", "[", 
         RowBox[{
          RowBox[{
           SubscriptBox["R", "#"], "\[Transpose]"}], ",", 
          SubscriptBox["dX", "#"]}], "]"}]}]}], ";"}], ")"}], "&"}], "/@", 
   RowBox[{"Range", "[", "n", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SubscriptBox["\[GothicV]", "#"], "=", 
        RowBox[{"FullSimplify", "@", 
         RowBox[{"Dot", "[", 
          RowBox[{
           RowBox[{
            SubscriptBox["R", "#"], "\[Transpose]"}], ",", 
           RowBox[{
            SubscriptBox["\[PartialD]", "t"], 
            RowBox[{
             SubscriptBox["\[ScriptQ]", "e"], "\[LeftDoubleBracket]", 
             RowBox[{
              RowBox[{
               RowBox[{"2", " ", "#"}], " ", "-", "1"}], ";;", 
              RowBox[{"2", " ", "#"}]}], "\[RightDoubleBracket]"}]}]}], 
          "]"}]}]}], ";"}], ")"}], "&"}], "/@", 
    RowBox[{"Range", "[", "n", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"V", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{
      SubscriptBox["v", "#"], "&"}], "/@", 
     RowBox[{"Range", "[", "n", "]"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"\[GothicCapitalV]", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{
      SubscriptBox["\[GothicV]", "#"], "&"}], "/@", 
     RowBox[{"Range", "[", "n", "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[CapitalOmega]", "=", 
    RowBox[{"Flatten", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        SubscriptBox["\[Omega]", "#"], "}"}], "&"}], "/@", 
      RowBox[{"Range", "[", "n", "]"}]}], "]"}]}], ";"}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["\[ScriptCapitalP]", "d"], "=", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"\[CapitalOmega]", "\[LeftDoubleBracket]", 
      SubscriptBox["N\[CapitalOmega]", "d"], "\[RightDoubleBracket]"}], ",", 
     RowBox[{"V", "\[LeftDoubleBracket]", 
      SubscriptBox["NV", "d"], "\[RightDoubleBracket]"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   SubscriptBox["\[ScriptCapitalP]", "e"], "=", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"\[CapitalOmega]", "\[LeftDoubleBracket]", 
      SubscriptBox["N\[CapitalOmega]", "e"], "\[RightDoubleBracket]"}], ",", 
     RowBox[{"V", "\[LeftDoubleBracket]", 
      SubscriptBox["NV", "e"], "\[RightDoubleBracket]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"P", " ", "=", " ", 
   RowBox[{"Join", "[", 
    RowBox[{
     SubscriptBox["\[ScriptCapitalP]", "d"], ",", 
     SubscriptBox["\[ScriptCapitalP]", "e"]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RR", " ", "=", " ", 
    RowBox[{
     RowBox[{"D", "[", 
      RowBox[{"\[GothicCapitalV]", ",", 
       RowBox[{"{", 
        RowBox[{
         SubscriptBox["\[PartialD]", "t"], 
         SubscriptBox["\[ScriptQ]", "e"]}], "}"}]}], "]"}], 
     "\[Transpose]"}]}], ";"}], " "}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.608219220551525*^9, 3.608219366276618*^9}, {
   3.608219756212718*^9, 3.608219766637817*^9}, {3.608477052850871*^9, 
   3.608477232066106*^9}, {3.608477304258831*^9, 3.608477358798814*^9}, {
   3.608479146932085*^9, 3.608479160977291*^9}, {3.608480167611373*^9, 
   3.60848022411336*^9}, {3.608481102808516*^9, 3.6084811403162518`*^9}, {
   3.6084812740298*^9, 3.608481278985837*^9}, {3.608481387616247*^9, 
   3.608481390138015*^9}, {3.6084814207600927`*^9, 3.6084814458842583`*^9}, {
   3.608481572576613*^9, 3.608481589306802*^9}, {3.608482147167123*^9, 
   3.608482160451096*^9}, {3.6102894721066017`*^9, 3.610289543651848*^9}, {
   3.610291771855687*^9, 3.61029183137818*^9}, {3.6102919124773006`*^9, 
   3.6102919260233088`*^9}, {3.610292149451213*^9, 3.610292204207065*^9}, {
   3.610292716561118*^9, 3.610292747216783*^9}, {3.610292828512987*^9, 
   3.6102928413853807`*^9}, {3.610292919330153*^9, 3.610292927203106*^9}, {
   3.6102953225049543`*^9, 3.6102953314911013`*^9}, {3.6108935292364483`*^9, 
   3.610893535696022*^9}, {3.610893584991293*^9, 3.6108936395474167`*^9}, {
   3.6116715500169373`*^9, 3.6116715515556087`*^9}, 3.611671618486143*^9, 
   3.61167165237534*^9, {3.611671805557212*^9, 3.611671832434353*^9}, {
   3.614079835572687*^9, 3.614079849314601*^9}, {3.614080744270316*^9, 
   3.614080751296029*^9}, 3.616631055138433*^9, {3.616683716671583*^9, 
   3.616683757108727*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"P", "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.616683768095025*^9, 3.6166837704986353`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {
       RowBox[{
        SuperscriptBox[
         SubscriptBox["\[Theta]", "1"], "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]},
      {
       RowBox[{
        RowBox[{
         SuperscriptBox[
          SubscriptBox["\[Theta]", "1"], "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}], "+", 
        RowBox[{
         SuperscriptBox[
          SubscriptBox["\[Theta]", "2"], "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}]}]},
      {"0"},
      {
       RowBox[{
        SubscriptBox["l", "g1"], " ", 
        RowBox[{
         SuperscriptBox[
          SubscriptBox["\[Theta]", "1"], "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}]}]},
      {
       RowBox[{
        RowBox[{"Sin", "[", 
         RowBox[{
          SubscriptBox["\[Theta]", "2"], "[", "t", "]"}], "]"}], " ", 
        SubscriptBox["l", "1"], " ", 
        RowBox[{
         SuperscriptBox[
          SubscriptBox["\[Theta]", "1"], "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}]}]},
      {
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{
              SubscriptBox["\[Theta]", "2"], "[", "t", "]"}], "]"}], " ", 
            SubscriptBox["l", "1"]}], "+", 
           SubscriptBox["l", "g2"]}], ")"}], " ", 
         RowBox[{
          SuperscriptBox[
           SubscriptBox["\[Theta]", "1"], "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{
         SubscriptBox["l", "g2"], " ", 
         RowBox[{
          SuperscriptBox[
           SubscriptBox["\[Theta]", "2"], "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}]}]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.616683770800757*^9, 3.616692502488834*^9, 
  3.616692638201086*^9, 3.6166928360420303`*^9, 3.616693153718731*^9, 
  3.6169757033633127`*^9, 3.617020485135901*^9, 3.617295048390259*^9, 
  3.6172960693498583`*^9, 3.617296331359651*^9, 3.617326490987403*^9, 
  3.6173329120016403`*^9, 3.617544909197851*^9, 3.6175470640106688`*^9, 
  3.617581946847035*^9, 3.6175825359805202`*^9, 3.6177074580305567`*^9, 
  3.617707520460146*^9, 3.617707875914823*^9, 3.6177393074756317`*^9, 
  3.617831790662985*^9, 3.617838932234131*^9, 3.617843426256798*^9, 
  3.6178437137369204`*^9, 3.617843906355432*^9, 3.617844099742546*^9, 
  3.617886955467249*^9, 3.617888105166708*^9, 3.617888197833158*^9, 
  3.617909892526175*^9, 3.617911968189749*^9, 3.61791295586441*^9, 
  3.617913188558092*^9, 3.617916490829919*^9, 3.6179197245060253`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Psi]", "=", 
   RowBox[{"D", "[", 
    RowBox[{
     SubscriptBox["\[ScriptCapitalP]", "d"], ",", 
     RowBox[{"{", 
      RowBox[{
       SubscriptBox["\[PartialD]", "t"], 
       SubscriptBox["\[ScriptQ]", "d"]}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.608219592004097*^9, 3.608219619459115*^9}, {
   3.6082198325497828`*^9, 3.608219841346121*^9}, {3.608475594515079*^9, 
   3.608475622592308*^9}, {3.608481721204821*^9, 3.6084817628093224`*^9}, {
   3.608481883910481*^9, 3.608481886847611*^9}, {3.608482118451055*^9, 
   3.6084821207400417`*^9}, {3.610295254219779*^9, 3.610295255577509*^9}, 
   3.611671515239852*^9, 3.611671619567898*^9, {3.614079903574761*^9, 
   3.6140799073439627`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[CapitalUpsilon]", "=", 
   RowBox[{"D", "[", 
    RowBox[{
     SubscriptBox["\[ScriptCapitalP]", "e"], ",", 
     RowBox[{"{", 
      RowBox[{
       SubscriptBox["\[PartialD]", "t"], 
       SubscriptBox["\[ScriptQ]", "d"]}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.608219642096354*^9, 3.608219667706547*^9}, {
   3.608219847358253*^9, 3.608219970587118*^9}, {3.610295204236376*^9, 
   3.610295210570298*^9}, {3.610295265362287*^9, 3.610295267252186*^9}, 
   3.611671517976849*^9, 3.61167165309055*^9, {3.614079911911849*^9, 
   3.6140799166540203`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[GothicCapitalC]", "=", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"Eye", "[", "n", "]"}], ",", 
     RowBox[{"FullSimplify", "@", 
      RowBox[{"Dot", "[", 
       RowBox[{"\[CapitalUpsilon]", ",", 
        RowBox[{"Inverse", "[", "\[Psi]", "]"}]}], "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dQ", " ", "=", " ", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"Dot", "[", 
      RowBox[{
       RowBox[{"Inverse", "[", "\[Psi]", "]"}], ",", 
       SubscriptBox["\[ScriptP]", "d"]}], "]"}], ",", 
     RowBox[{"Dot", "[", 
      RowBox[{"RR", ",", "Vp"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[CapitalGamma]", " ", "=", " ", 
   RowBox[{"D", "[", 
    RowBox[{"dQ", ",", 
     RowBox[{"{", "p", "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"K", "=", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"FullSimplify", "@", 
      RowBox[{"Dot", "[", 
       RowBox[{"\[CapitalUpsilon]", ",", 
        RowBox[{"Inverse", "[", "\[Psi]", "]"}]}], "]"}]}], ",", 
     RowBox[{"-", 
      RowBox[{"Eye", "[", "m", "]"}]}], ",", "2"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dK", "=", 
   RowBox[{"Dot", "[", 
    RowBox[{
     RowBox[{"Dot", "[", 
      RowBox[{
       RowBox[{"D", "[", 
        RowBox[{"K", ",", 
         RowBox[{"{", "q", "}"}]}], "]"}], ",", "\[CapitalGamma]"}], "]"}], 
     ",", "p"}], "]"}]}], ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.608219690853635*^9, 3.608219690865531*^9}, 
   3.608219998842782*^9, 3.611671966951016*^9, 3.6116721195881147`*^9, {
   3.611672196585485*^9, 3.611672224108396*^9}, {3.6140799355411453`*^9, 
   3.614079939709423*^9}, {3.6140800729444017`*^9, 3.614080077468917*^9}, {
   3.6177075795642967`*^9, 3.617707590726365*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[GothicCapitalS]", " ", "=", 
   RowBox[{
    FractionBox["1", "2"], 
    RowBox[{
     SubsuperscriptBox["\[Sum]", 
      RowBox[{"i", "=", "1"}], "n"], 
     RowBox[{"(", " ", 
      RowBox[{
       RowBox[{
        SubscriptBox["\[ScriptM]", "i"], 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["\[PartialD]", "t"], 
             RowBox[{"Vp", "\[LeftDoubleBracket]", 
              RowBox[{
               RowBox[{"2", "i"}], "-", "1"}], "\[RightDoubleBracket]"}]}], 
            ")"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["\[PartialD]", "t"], 
             RowBox[{"Vp", "\[LeftDoubleBracket]", 
              RowBox[{"2", "i"}], "\[RightDoubleBracket]"}]}], ")"}], "2"]}], 
         ")"}]}], " ", "+", " ", 
       RowBox[{
        SubscriptBox["Jz", "i"], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["\[PartialD]", "t"], 
           RowBox[{
           "\[CapitalOmega]p", "\[LeftDoubleBracket]", "i", 
            "\[RightDoubleBracket]"}]}], ")"}], "2"]}]}], ")"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Ep", " ", "=", " ", 
   RowBox[{
    SubsuperscriptBox["\[Sum]", 
     RowBox[{"i", "=", "1"}], "n"], 
    RowBox[{"(", " ", 
     RowBox[{
      SubscriptBox["\[ScriptM]", "i"], "g", " ", 
      RowBox[{
       SubscriptBox["\[ScriptQ]", "e"], "\[LeftDoubleBracket]", 
       RowBox[{"2", "i"}], "\[RightDoubleBracket]"}]}], ")"}]}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.610296058894853*^9, 3.61029618932199*^9}, {
   3.6102962266167707`*^9, 3.6102963017882433`*^9}, {3.610296347558782*^9, 
   3.610296363802034*^9}, {3.610296420978656*^9, 3.6102964513427763`*^9}, {
   3.6108962340272284`*^9, 3.610896268903372*^9}, 3.610896314089415*^9, {
   3.6108967456760798`*^9, 3.610896757710575*^9}, {3.610896911168256*^9, 
   3.610896918189794*^9}, {3.6108971437738247`*^9, 3.610897146784088*^9}, {
   3.610897200601296*^9, 3.610897240151005*^9}, 3.611672093915782*^9, {
   3.6116722448645887`*^9, 3.611672246795476*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"G", "=", " ", 
   RowBox[{"FullSimplify", "@", 
    RowBox[{"Dot", "[", 
     RowBox[{
      RowBox[{"\[CapitalGamma]", "\[Transpose]"}], ",", 
      RowBox[{
       SubscriptBox["\[PartialD]", 
        RowBox[{"{", "q", "}"}]], "Ep"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f", "=", 
   RowBox[{
    SubscriptBox["\[PartialD]", 
     RowBox[{"{", 
      RowBox[{
       SubscriptBox["\[PartialD]", "t"], "p"}], "}"}]], 
    "\[GothicCapitalS]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"M", "=", 
   RowBox[{
    SubscriptBox["\[PartialD]", 
     RowBox[{"{", 
      RowBox[{
       SubscriptBox["\[PartialD]", "t"], "p"}], "}"}]], "f"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[ScriptCapitalV]", " ", "=", " ", 
    RowBox[{"Simplify", "[", 
     RowBox[{"f", "-", 
      RowBox[{"Dot", "[", 
       RowBox[{"M", ",", 
        RowBox[{
         SubscriptBox["\[PartialD]", "t"], "p"}]}], "]"}]}], "]"}]}], ";"}], 
  " "}]}], "Input",
 CellChangeTimes->{{3.6108964734860277`*^9, 3.6108966307874813`*^9}, 
   3.611671986988996*^9, 3.611672070471334*^9, {3.611672262668796*^9, 
   3.6116722788879843`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Sin2s", "=", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{
         SubscriptBox["\[Theta]", "1"], "[", "t", "]"}], "]"}], "\[Rule]", 
       " ", 
       SubscriptBox["s", "1"]}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{
         SubscriptBox["\[Theta]", "1"], "[", "t", "]"}], "]"}], " ", 
       "\[Rule]", " ", 
       SubscriptBox["c", "1"]}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{
         SubscriptBox["\[Theta]", "2"], "[", "t", "]"}], "]"}], "\[Rule]", 
       " ", 
       SubscriptBox["s", "2"]}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{
         SubscriptBox["\[Theta]", "2"], "[", "t", "]"}], "]"}], " ", 
       "\[Rule]", " ", 
       SubscriptBox["c", "2"]}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{
         RowBox[{
          SubscriptBox["\[Theta]", "1"], "[", "t", "]"}], "+", 
         RowBox[{
          SubscriptBox["\[Theta]", "2"], "[", "t", "]"}]}], "]"}], "\[Rule]", 
       " ", 
       SubscriptBox["s", "12"]}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{
         RowBox[{
          SubscriptBox["\[Theta]", "1"], "[", "t", "]"}], "+", 
         RowBox[{
          SubscriptBox["\[Theta]", "2"], "[", "t", "]"}]}], "]"}], "\[Rule]", 
       " ", 
       SubscriptBox["c", "12"]}]}], "\[IndentingNewLine]", "}"}]}], ";"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.610896954260461*^9, 3.610897048599462*^9}, 
   3.610897115235736*^9, {3.6108971577097073`*^9, 3.610897163333993*^9}, {
   3.611671996439155*^9, 3.611671998021902*^9}, 3.611672260328393*^9, {
   3.611672321229347*^9, 3.611672505853058*^9}, {3.616623922634582*^9, 
   3.616623938028466*^9}, 3.6166240100918922`*^9, {3.616631372456608*^9, 
   3.616631409994666*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Psi]", "/.", "Sin2s"}], "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.611672533805237*^9, 3.611672557827972*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "0"},
     {"1", "1"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.611672559890706*^9, 3.6166237303994617`*^9, {3.6166239421169033`*^9, 
   3.61662395515585*^9}, {3.6166240003482227`*^9, 3.616624038557643*^9}, 
   3.616631059528459*^9, 3.616631283050907*^9, 3.616631415340576*^9, 
   3.616632276236764*^9, 3.6166837282728653`*^9, 3.616692502729549*^9, 
   3.616692638416308*^9, 3.616692836169425*^9, 3.616693153873947*^9, 
   3.616975703542733*^9, 3.617020485390525*^9, 3.617295048868176*^9, 
   3.617296069484318*^9, 3.617296331497156*^9, 3.61732649138566*^9, 
   3.617332912155656*^9, 3.617544909586577*^9, 3.617547064390973*^9, 
   3.617581947680883*^9, 3.617582536284731*^9, 3.61770745830228*^9, 
   3.6177075206592207`*^9, 3.61770787615451*^9, 3.6177393078668118`*^9, 
   3.6178317910602093`*^9, 3.6178389323675137`*^9, 3.617843426432337*^9, 
   3.617843713934536*^9, 3.617843906612591*^9, 3.617844100153808*^9, 
   3.617886955860173*^9, 3.617888105377214*^9, 3.6178881979926443`*^9, 
   3.617909892632304*^9, 3.617911968350972*^9, 3.617912955997171*^9, 
   3.6179131887062483`*^9, 3.617916491246785*^9, 3.617919724866806*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"\[GothicCapitalC]", "/.", "Sin2s"}], "//", "MatrixForm"}]], "Input",\

 CellChangeTimes->{{3.6116725647243757`*^9, 3.611672591096843*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "0"},
     {"0", "1"},
     {"0", "0"},
     {
      SubscriptBox["l", "g1"], "0"},
     {
      RowBox[{
       SubscriptBox["l", "1"], " ", 
       SubscriptBox["s", "2"]}], "0"},
     {
      RowBox[{
       SubscriptBox["c", "2"], " ", 
       SubscriptBox["l", "1"]}], 
      SubscriptBox["l", "g2"]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.61167259259624*^9, 3.616623730483366*^9, {3.616623942183835*^9, 
   3.616623955236393*^9}, {3.616624000612064*^9, 3.616624038565734*^9}, 
   3.616631059589343*^9, 3.616631283147153*^9, 3.616631415404654*^9, 
   3.616632276282069*^9, 3.616683728342944*^9, 3.616692502783856*^9, 
   3.6166926384701233`*^9, 3.616692836222498*^9, 3.6166931539230022`*^9, 
   3.616975703583851*^9, 3.6170204854745207`*^9, 3.617295048922901*^9, 
   3.617296069538578*^9, 3.617296331543518*^9, 3.6173264914201527`*^9, 
   3.617332912168648*^9, 3.6175449096101103`*^9, 3.617547064424115*^9, 
   3.6175819477435503`*^9, 3.617582536341111*^9, 3.617707458341867*^9, 
   3.617707520695979*^9, 3.617707876192686*^9, 3.617739307870905*^9, 
   3.617831791064196*^9, 3.617838932410906*^9, 3.617843426516671*^9, 
   3.617843714015195*^9, 3.617843906703506*^9, 3.617844100195634*^9, 
   3.617886955901331*^9, 3.6178881054320927`*^9, 3.617888198052985*^9, 
   3.617909892664956*^9, 3.617911968389442*^9, 3.617912956001417*^9, 
   3.6179131887527037`*^9, 3.617916491286354*^9, 3.617919724935144*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"K", "/.", "Sin2s"}], "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.611672610385396*^9, 3.611672612551193*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0", 
      RowBox[{"-", "1"}], "0", "0", "0"},
     {
      SubscriptBox["l", "g1"], "0", "0", 
      RowBox[{"-", "1"}], "0", "0"},
     {
      RowBox[{
       SubscriptBox["l", "1"], " ", 
       SubscriptBox["s", "2"]}], "0", "0", "0", 
      RowBox[{"-", "1"}], "0"},
     {
      RowBox[{
       SubscriptBox["c", "2"], " ", 
       SubscriptBox["l", "1"]}], 
      SubscriptBox["l", "g2"], "0", "0", "0", 
      RowBox[{"-", "1"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.611672615215434*^9, 3.616623730646343*^9, {3.616623942288515*^9, 
   3.616623955298726*^9}, {3.616624000703382*^9, 3.616624038623172*^9}, 
   3.61663105965344*^9, 3.616631283233561*^9, 3.616631415411812*^9, 
   3.616632276323186*^9, 3.616683728415763*^9, 3.616692502832436*^9, 
   3.616692638521888*^9, 3.616692836288911*^9, 3.616693153973126*^9, 
   3.616975703627223*^9, 3.617020485505815*^9, 3.617295048971388*^9, 
   3.617296069636752*^9, 3.6172963315936604`*^9, 3.6173264914607353`*^9, 
   3.617332912192521*^9, 3.617544909630796*^9, 3.6175470644806957`*^9, 
   3.617581947805779*^9, 3.617582536398703*^9, 3.617707458377651*^9, 
   3.6177075207344303`*^9, 3.617707876233053*^9, 3.6177393079046793`*^9, 
   3.61783179109448*^9, 3.617838932468494*^9, 3.617843426606555*^9, 
   3.617843714021469*^9, 3.617843906784741*^9, 3.617844100236953*^9, 
   3.6178869559424458`*^9, 3.617888105485181*^9, 3.6178881981234703`*^9, 
   3.617909892698964*^9, 3.6179119684297667`*^9, 3.617912956049996*^9, 
   3.6179131888018007`*^9, 3.617916491333173*^9, 3.617919725331587*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"M", "/.", "Sin2s"}], "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{3.616624085789534*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      SubscriptBox["Jz", "1"], "0", "0", "0", "0", "0"},
     {"0", 
      SubscriptBox["Jz", "2"], "0", "0", "0", "0"},
     {"0", "0", 
      SubscriptBox["\[ScriptM]", "1"], "0", "0", "0"},
     {"0", "0", "0", 
      SubscriptBox["\[ScriptM]", "1"], "0", "0"},
     {"0", "0", "0", "0", 
      SubscriptBox["\[ScriptM]", "2"], "0"},
     {"0", "0", "0", "0", "0", 
      SubscriptBox["\[ScriptM]", "2"]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGDQAOKty4/s0vz0yvEgX7mSLpBO88yyA9Exj9/5gejlC7p3
gejNXby33ID0Nak7St5Aui70kjGIVrnQ5QOitWY4lIDo5yFfsq4CabnjGz1e
A+l/IYqRhZ+B+hi23QDR/x6X/ATRKw7mb24A0hFz2K41A+k337ZEvgbSR6bw
p78B0kUvqvP/AmnZcP6dIHqute8Oqy+vHJ9MlTwAov9c6ngDovUl6ly9gPTe
4Ce55UC6wX3CqyogrdATLFMLpGeVOjmA6PT30REgOuxmRwGItptXHzsJSCvt
MnwLor1PHf0Bop3ypk+YC6TnvOWbMg9IX2Rr5p8PpFc6zNYB0aoiuScXAOlv
EodiFwFpAGuWu5k=
  "]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"\[ScriptCapitalV]", "/.", "Sin2s"}], "//", "MatrixForm"}]], "Input",\

 CellChangeTimes->{{3.616624094134349*^9, 3.61662409697397*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {"0"},
      {"0"},
      {"0"},
      {"0"},
      {"0"},
      {"0"}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGDQAOK8BP09mp9eOYY8qlHSBdLpH3LsQLTW7A9+IHrX255d
IFp8Lv8tNyD96vtdJW8gPSHnijGInvG1ywdEL/N0KgHR65d8zboKpHPENnu8
BtKnDqpEFn5+5TjZbfsNEL0ouOwniI65XbC5AUj38LFfawbSTnu2Rr4G0rtX
CKS/AdIyATX5f4H0UX7BnSB6Vo3vDqsvQP3LpQ+A6Dj2rjcg+ntTvasXkK5Q
fp5bDqQDRSa9qgLSE3TCZGqBdMobZwcQLaoTEwGibQu7CkC0zJuG2ElAOlbM
5C2IFnp1/AeIXtoyY8JcIJ2nJjBlHpCe2t/CPx9Is62crwOi183MO7kASJcF
HYtdBKQBfT+33w==
  "]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"G", "/.", "Sin2s"}], "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{3.6166245288112383`*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {"0"},
      {"0"},
      {
       RowBox[{"g", " ", 
        SubscriptBox["s", "1"], " ", 
        SubscriptBox["\[ScriptM]", "1"]}]},
      {
       RowBox[{"g", " ", 
        SubscriptBox["c", "1"], " ", 
        SubscriptBox["\[ScriptM]", "1"]}]},
      {
       RowBox[{"g", " ", 
        SubscriptBox["s", "12"], " ", 
        SubscriptBox["\[ScriptM]", "2"]}]},
      {
       RowBox[{"g", " ", 
        SubscriptBox["c", "12"], " ", 
        SubscriptBox["\[ScriptM]", "2"]}]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.6166245292022533`*^9, 3.6166310599710093`*^9, 3.6166312834864073`*^9, 
   3.616631415561419*^9, 3.6166322764113417`*^9, 3.616683728558844*^9, 
   3.6166925029413223`*^9, 3.6166926387959642`*^9, 3.616692836379642*^9, 
   3.61669315416103*^9, 3.616975703713769*^9, 3.617020485643568*^9, 
   3.617295049154336*^9, 3.617296069732935*^9, 3.617296331765167*^9, 
   3.617326491569179*^9, 3.617332912234267*^9, 3.6175449097090387`*^9, 
   3.617547064555317*^9, 3.6175819479421997`*^9, 3.6175825365853786`*^9, 
   3.6177074584516573`*^9, 3.617707520927758*^9, 3.617707876493224*^9, 
   3.617739308080166*^9, 3.617831791276428*^9, {3.617832190666582*^9, 
   3.617832200638782*^9}, 3.617838932607787*^9, 3.617843426696447*^9, 
   3.617843714161131*^9, 3.617843906958002*^9, 3.617844100366756*^9, 
   3.6178869560720243`*^9, 3.617888105686808*^9, 3.617888198304552*^9, 
   3.6179098927991343`*^9, 3.6179119685404587`*^9, 3.617912956192338*^9, 
   3.617913189041698*^9, 3.6179164914597597`*^9, 3.617919726247916*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"SDATA", " ", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      SubscriptBox["l", "1"], "\[Rule]", " ", "1.0"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["l", "2"], " ", "\[Rule]", " ", "1.0"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["l", "g1"], " ", "\[Rule]", " ", "0.5"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["l", "g2"], " ", "\[Rule]", " ", "0.5"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["\[ScriptM]", "1"], " ", "\[Rule]", " ", "10.0"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["\[ScriptM]", "2"], " ", "\[Rule]", " ", "10.0"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["Jz", "1"], " ", "\[Rule]", " ", 
      RowBox[{
       SubscriptBox["\[ScriptM]", "1"], 
       RowBox[{
        SuperscriptBox[
         SubscriptBox["l", "1"], "2"], "/", "12"}]}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["Jz", "2"], " ", "\[Rule]", " ", 
      RowBox[{
       SubscriptBox["\[ScriptM]", "2"], 
       RowBox[{
        SuperscriptBox[
         SubscriptBox["l", "2"], "2"], "/", "12"}]}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"g", "\[Rule]", " ", "9.8"}]}], "\[IndentingNewLine]", "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.610901702709077*^9, 3.61090198368356*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"tf", " ", "=", "4"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[CapitalDelta]t", " ", "=", " ", "0.01"}], ";"}]}], "Input",
 CellChangeTimes->{{3.6108978839684353`*^9, 3.6108978894446707`*^9}, {
   3.6108979264017887`*^9, 3.610897965650382*^9}, {3.6109009727265177`*^9, 
   3.6109010912843323`*^9}, 3.610901719507338*^9, {3.611672154470873*^9, 
   3.611672154653006*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    SubscriptBox["q", "dp"], "[", "t_", "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"2", " ", "\[Pi]", " ", "t"}], ",", " ", 
     RowBox[{"2", " ", "\[Pi]", " ", "t"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RQ", "[", "t_", "]"}], ":=", " ", 
   RowBox[{"Inner", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"#1", " ", "\[Rule]", " ", "#2"}], " ", "&"}], ",", 
     SubscriptBox["\[ScriptQ]", "d"], ",", 
     RowBox[{
      SubscriptBox["q", "dp"], "[", "t", "]"}], ",", "List"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Psi]n", "[", "t_", "]"}], ":=", 
   RowBox[{
    RowBox[{"\[Psi]", "//.", "SDATA"}], "/.", 
    RowBox[{"RQ", "[", "t", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Cn", "[", "t_", "]"}], ":=", 
   RowBox[{
    RowBox[{"\[GothicCapitalC]", "//.", "SDATA"}], "/.", 
    RowBox[{"RQ", "[", "t", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Mn", "[", "t_", "]"}], ":=", 
   RowBox[{
    RowBox[{"M", "//.", "SDATA"}], "/.", 
    RowBox[{"RQ", "[", "t", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Gn", "[", "t_", "]"}], ":=", 
   RowBox[{
    RowBox[{"G", "//.", "SDATA"}], "/.", 
    RowBox[{"RQ", "[", "t", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    SubscriptBox["p", "dp"], "[", "t_", "]"}], ":=", " ", 
   RowBox[{"Dot", "[", 
    RowBox[{
     RowBox[{"\[Psi]n", "[", "t", "]"}], ",", 
     RowBox[{
      RowBox[{
       SubscriptBox["q", "dp"], "'"}], "[", "t", "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    SubscriptBox["p", "pp"], "[", "t_", "]"}], ":=", " ", 
   RowBox[{"Dot", "[", 
    RowBox[{
     RowBox[{"Cn", "[", "t", "]"}], ",", 
     RowBox[{
      SubscriptBox["p", "dp"], "[", "t", "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RP", "[", "t_", "]"}], ":=", " ", 
   RowBox[{"Inner", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"#1", " ", "\[Rule]", " ", "#2"}], "&"}], ",", " ", "p", ",", 
     " ", 
     RowBox[{
      SubscriptBox["p", "pp"], "[", "t", "]"}], ",", "List"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Vn", "[", "t_", "]"}], ":=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"\[ScriptCapitalV]", "//.", "SDATA"}], "/.", 
     RowBox[{"RQ", "[", "t", "]"}]}], "/.", 
    RowBox[{"RP", "[", "t", "]"}]}]}], ";"}], "\[IndentingNewLine]"}], "Input",\

 CellChangeTimes->{{3.610899974166535*^9, 3.610900015688428*^9}, {
   3.610900096889658*^9, 3.6109001388270206`*^9}, {3.610900171744834*^9, 
   3.610900467098797*^9}, {3.610900504439035*^9, 3.610900520608651*^9}, {
   3.610900583673126*^9, 3.61090073527608*^9}, {3.610900783022785*^9, 
   3.610900892137097*^9}, {3.610901144473366*^9, 3.6109011807296743`*^9}, {
   3.610902037551055*^9, 3.610902041105693*^9}, 3.611671525798315*^9, 
   3.616624035446879*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Fqn", "[", "t_", "]"}], ":=", " ", 
   RowBox[{"Dot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Psi]n", "[", "t", "]"}], "\[Transpose]"}], ",", 
     RowBox[{"Dot", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Cn", "[", "t", "]"}], "\[Transpose]"}], ",", 
       RowBox[{
        RowBox[{"Dot", "[", 
         RowBox[{
          RowBox[{"Mn", "[", "t", "]"}], ",", " ", 
          RowBox[{
           RowBox[{
            SubscriptBox["p", "pp"], "'"}], "[", "t", "]"}]}], "]"}], "+", 
        RowBox[{"Vn", "[", "t", "]"}], "+", 
        RowBox[{"Gn", "[", "t", "]"}]}]}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Fqn2", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Fqn", "[", 
      RowBox[{"\[CapitalDelta]t", 
       RowBox[{"(", 
        RowBox[{"#", "-", "1"}], ")"}]}], "]"}], "&"}], "/@", 
    RowBox[{"Range", "[", 
     RowBox[{
      RowBox[{"IntegerPart", "[", 
       RowBox[{"tf", "/", "\[CapitalDelta]t"}], "]"}], "+", "1"}], "]"}]}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.610901189109395*^9, 3.61090121291081*^9}, {
  3.610901249092793*^9, 3.610901359519442*^9}, {3.610901411054624*^9, 
  3.6109015585368977`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{"Fqn2", "\[LeftDoubleBracket]", 
   RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], "]"}]], "Input",
 CellChangeTimes->{{3.610902065539422*^9, 3.610902107401387*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.011111111111111112`],
      AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{0., 401.}, {-273.3642939313385, 250.747360214411}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.610902110315896*^9, 3.611672021712717*^9, 3.61167249118307*^9, 
   3.616623730977173*^9, {3.616623942608049*^9, 3.616623955516814*^9}, {
   3.616624001066334*^9, 3.616624038872857*^9}, 3.616631060804803*^9, 
   3.616631283891079*^9, 3.616631415908475*^9, 3.61663227698878*^9, 
   3.6166837295282288`*^9, 3.6166925031490707`*^9, 3.616692639002756*^9, 
   3.616692836585259*^9, 3.616693154391162*^9, 3.6169757046141977`*^9, 
   3.617020486645814*^9, 3.617295049452156*^9, 3.617296070051538*^9, 
   3.617296331974781*^9, 3.617326491920986*^9, 3.617332912472147*^9, 
   3.617544909999927*^9, 3.617547064933818*^9, 3.617581949155871*^9, 
   3.617582537312142*^9, 3.617707459019422*^9, 3.617707521406782*^9, 
   3.6177078777047157`*^9, 3.6177393083499727`*^9, 3.617831791598329*^9, 
   3.6178389328959303`*^9, 3.617843426929172*^9, 3.617843714460825*^9, 
   3.617843907211158*^9, 3.6178441006059113`*^9, 3.61788695634404*^9, 
   3.617888105900415*^9, 3.617888198524108*^9, 3.617909893099908*^9, 
   3.6179119688124332`*^9, 3.61791295649225*^9, 3.6179131892986307`*^9, 
   3.617916491715617*^9, 3.617919727622192*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{"Fqn2", "\[LeftDoubleBracket]", 
   RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}], "]"}]], "Input",
 CellChangeTimes->{{3.610902135336397*^9, 3.610902135957656*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.011111111111111112`],
      AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJxdmHuMVOUZxkcu0T8ERkpaUrZmMEgBaTPFZV1A4AGWZbnPLuyNvZ2dy87s
zu3MmSumSQ+I2rQrrpYQpGpPtrYYa2WCUBpM02OitBXEWWqAbkFOt61gJTik
1rQWpBTOJO9z9p/Ju1++c77ve5/3+X3vmelPNoXGuVyuZ+9yuf7/e+evvPz2
j94A+x947CuBL91VK+34HpxOztWe+HWNHbtxZeerK/bOmmnH0+D92oXHbz4/
3bwTT8dHh9t/PqljoR1XYXmgaen47Svt2IO7F74U+Ht4nR0/gOPj3zt2cGGj
Hc9CPjR849KiZjuejcj6XRMLte12PAeXvqhrHTe3y47noaZ07uCuHYodz8fF
/UP3T+zx2/G3kZxXunliTtCOvShv1L775mjIjr+DPbvrRv+shu14AQ7sHf98
5FLEjh/G/HnVX55fPGDH1SgdG7t4Mxy144Xo9N6/42o0Zsc1mPMvvWV2XdyO
H8GHo8uffvpqJa7F+4Plhx/rT9jxImjVuY+PvlGJF6Pl7Leu//BkJV7iGH/U
MX+p4/nLHO9f7lgfeP068BDtbwVelvvXVzjOZyWfn74SCTrfVXz++iospvzU
4ROZP70OA5Tf1Zx/fTVOkD7qMUnqR6/HWtLXGlyR+tPXoJb02cD6vaV7k/S9
Fhmpf30tbty89fe9Sn2sw0jtuCUTd2yyx9eh+N8jb52+t8keX49Hrx2Zfn14
qz2+HsfmtE84fVerPb4Bu9/+1fV/zGm3xzdgz5N7/7Nveoc9vhFnDo7ce3Gk
0x7fiKu73leCLd32+CZMe2v4XPCVHnt8Ezobm05uDin2+Ga81rTxrzMtO9Y3
o37z65/E63vtcR9KM94cm7HfjuFDTfODDQ9dsGPdhzUPjB06cJ//Tmz68I7y
duzFRXbsaoS7ZVz95FY7RiN2XjxU+ihqx3oj2tyxBZ9tr8xvxOEJu4+O7qzM
b8KTa9O+Sd+vzG/CtMXvVh3/QWV+E24opVmuwcr8JnT/papDq8SuLXfqoxJj
C4/rWxzzt/DzXVsd79/K69O3ooXWv5X352p27L8Zv5Pnozejgc6vmc/X1YIR
Ov8WrJH50VvwS5k/swVdlN9WTJX5RyvKUh96K0akfsxWPEv6asOg1B/a8Bup
T70NS6R+zTYcIX2345TUP9px9+15dn3o7RiU9WO24wzV1zZUPS7qD9vQIOtT
34Zzsn7NbdhA9X1rH7L+0YFT0h/0DhSkf5gd0MhfOtl/0Ill0p/0ToxJ/zI7
Hf7Whc+k/6ELz0h/1LtgSP80uzCP/LUbJ6X/opv9We/GbOnfZrfD33twSvo/
epgPeg/zw3SMuxTmh0fBBfl8KMwPRUEXrU/BB3L9hoJvyv2ZCobl/m/pmPnR
i3/K8/P0ok+eL3rxJ3n+Si+qKT+9uCzzZ/QiIfNr9mKXzL/Vi3PEDz9qpH48
fqyS+oIfriNCf4ofZdKnH22SH4Yfl6W+TT/fnyw/Pid+BPBbWT+eAIZlfSGA
ZbL+lACOUn0G8JSsXyOAQVnfZgCjsv6tAK4RP4LMD08QHdJfEMRB6T9K0OFP
QfYvI8j+ZgaZH1YQx4kfIUyR/ukJYYf0V4SYH0rI4c8h9m8jxP5uhtj/rZCD
H33MD08fj6OP5yt9mEp86nO8vw9H5PrMPl6/1cf7c4WZH54w8xVh5ocSRjXx
Ocz8NsLMdzPM/LfCDn5EMIXyH8HnUh+IYEzqR4ngOakvPYIh0l8EptSnGUGD
1K8VwWvEj36cIf33Y/Lt59r1gX50y/pR+vENVdSX3o+TVH/9uEfWp9mPdZIf
Vj9mET8GcLZa1v8A/iD9AQNolv6hDKBb+os+gFHynwEslf5kDuCP0r+sAcSJ
H1FcIf+L4sfSHxHFi9I/lSj3H3qU7+9GFH7pz2aU+WFFMUb8iDn8P8Z8QIz5
ocSQIr7EMCLnGzHmkxljflgxtFH/EccZuX5PHAvk/hDn/kOJY5j4Gmf+GnFk
5fmacZyn849jNfUfCea/J8H3AyQQpvwn8CHdLxJ8/zASWC/1ZSawl/SXgHe6
7D+SmCXvP54kzkl+IIkDpP8kPpX80JO4JOvHSOInsr7MJPcfVhKHqf9QsUfW
r1vFPlnfHhWmrH+vik/JH1Tmh09lfigqfiH9R1VRR/xQcUr615CKR6S/GSrq
pf8VVb5fmyruk/5ZUvl+bqnsv2XV0X+k8JT0b3eK+eFJ4br0f2/KwYcU88OX
Qo8cV1LMD9XxfD3F/BhK8fqMFNrl+osp3p+ZYn6UUsxXK8XnV06hlvoPjfnh
1rBa5sejcf/h1dBN9wMNX6f8a/i31Iei4fdSP6qGnxI/NOhSf0MailKfhoYa
qd+ixv21qeG81H9Jw7Tbz7Xrw9KwQNZPWcN8yQ9XGhMkP9xpXJ4m6tOThlfe
/7xpbKP7YRqTZf370nhH+oOShir9Q02jg/iRxgfSf4bSmC/9yUijJP2rmMZ2
8rc0Lkj/K6WxX/qjlebvV+W04/tOBu9J/3Vn2J89GTwo/dubwd+oP8jghPR/
X4b5oWSYH2rGwY8M82coA0s+38hgrnx/MYNe4lsGZ+X6SxnMlPuzMijS/jN4
mfqPLD6W5+fO4gl5vp4s88ObRa3MD7K4JvPnyyIv86tkMUj5z2KM+JHFcXn/
GMriR1JfRhavSH4Us9j3VXm/ycIl+VHK4l3JDyuLKOk/i8vUf+QwZZGoH3cO
L8j68uSwQdafNwdD1idyeE7Wry+HvbK+lRzOUv3n+PuVnuPvF0M55oeRw6vS
f4o55oeZY36Uctx/WDmH/+WYH64888OdZ3/15NEq/debZ39Gnvnhy7O/K3mH
/+cd36fyzI+hPPPDcMwvOp5v5pkfpTz3H1ae+VHOO/qPAqbS/gt8Pp4C92/e
AvMDBe7/fAXuP5QCXif+F9Aj86sXUEX5L+ALqQ+jgBNSP8UCfkb9bQG7pP5K
Bbwh9WkVsEjqt1zAIeo/tmNM8sO9HTNur6sB/wM+/ZIu
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{0., 401.}, {-246.39208802178717`, 148.39208802178717`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.610902138146963*^9, 3.6116720217328577`*^9, 3.611672491214878*^9, 
   3.616623731209045*^9, {3.616623942626947*^9, 3.6166239555402737`*^9}, {
   3.6166240010994263`*^9, 3.616624038906929*^9}, 3.616631060987542*^9, 
   3.616631283922978*^9, 3.616631415936688*^9, 3.6166322770695467`*^9, 
   3.616683729556925*^9, 3.6166925032074614`*^9, 3.616692639060845*^9, 
   3.616692836642811*^9, 3.616693154443318*^9, 3.616975704729313*^9, 
   3.6170204869825373`*^9, 3.6172950496756973`*^9, 3.617296070113037*^9, 
   3.6172963320390377`*^9, 3.617326492150072*^9, 3.617332912541739*^9, 
   3.617544910076879*^9, 3.617547065389889*^9, 3.617581949335452*^9, 
   3.617582537401497*^9, 3.617707459089623*^9, 3.617707521487727*^9, 
   3.6177078777908154`*^9, 3.617739308584145*^9, 3.617831791816337*^9, 
   3.617838932914657*^9, 3.617843427020978*^9, 3.61784371457946*^9, 
   3.617843907316321*^9, 3.617844100633513*^9, 3.6178869563606653`*^9, 
   3.6178881059870987`*^9, 3.6178881985994043`*^9, 3.617909893112978*^9, 
   3.617911968865306*^9, 3.6179129565457478`*^9, 3.617913189377118*^9, 
   3.617916491739925*^9, 3.617919728509387*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Acoplando", " ", "2", " ", "RRs"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"\[DoubleStruckN]", " ", "=", " ", "2"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[DoubleStruckQ]", "\[NumberSign]"], "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        SubscriptBox["x", "pp"], "[", "t", "]"}], ",", 
       RowBox[{
        SubscriptBox["y", "pp"], "[", "t", "]"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[DoubleStruckQ]", "1"], "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        SubscriptBox["\[Theta]", "11"], "[", "t", "]"}], ",", 
       RowBox[{
        SubscriptBox["\[Theta]", "12"], "[", "t", "]"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[DoubleStruckQ]", "2"], "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        SubscriptBox["\[Theta]", "21"], "[", "t", "]"}], ",", 
       RowBox[{
        SubscriptBox["\[Theta]", "22"], "[", "t", "]"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[DoubleStruckQ]", "o"], "=", 
     RowBox[{"Join", "[", 
      RowBox[{
       SubscriptBox["\[DoubleStruckQ]", "1"], ",", 
       SubscriptBox["\[DoubleStruckQ]", "2"]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[DoubleStruckQ]\[DoubleStruckQ]", " ", "=", " ", 
     RowBox[{"Join", "[", 
      RowBox[{
       SubscriptBox["\[DoubleStruckQ]", "\[NumberSign]"], ",", 
       SubscriptBox["\[DoubleStruckQ]", "o"]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[DoubleStruckN]\[DoubleStruckQ]", " ", "=", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"Dimensions", "@", "\[DoubleStruckQ]\[DoubleStruckQ]"}], ")"}],
       "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[DoubleStruckP]", "\[NumberSign]"], "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        SubscriptBox["dx", "pp"], "[", "t", "]"}], ",", 
       RowBox[{
        SubscriptBox["dy", "pp"], "[", "t", "]"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[DoubleStruckP]", "1"], "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        SubscriptBox["\[Omega]", "11"], "[", "t", "]"}], ",", 
       RowBox[{
        SubscriptBox["\[Omega]", "12"], "[", "t", "]"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[DoubleStruckP]", "2"], "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        SubscriptBox["\[Omega]", "21"], "[", "t", "]"}], ",", 
       RowBox[{
        SubscriptBox["\[Omega]", "22"], "[", "t", "]"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[DoubleStruckP]", "o"], "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        SubscriptBox["\[Omega]", "11"], "[", "t", "]"}], ",", 
       RowBox[{
        SubscriptBox["\[Omega]", "12"], "[", "t", "]"}], ",", 
       RowBox[{
        SubscriptBox["\[Omega]", "21"], "[", "t", "]"}], ",", 
       RowBox[{
        SubscriptBox["\[Omega]", "22"], "[", "t", "]"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[DoubleStruckP]\[DoubleStruckP]", " ", "=", " ", 
     RowBox[{"Join", "[", 
      RowBox[{
       SubscriptBox["\[DoubleStruckP]", "\[NumberSign]"], ",", 
       SubscriptBox["\[DoubleStruckP]", "o"]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[DoubleStruckCapitalP]0", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        SubscriptBox["dx", "pp"], "[", "t", "]"}], ",", 
       RowBox[{
        SubscriptBox["dy", "pp"], "[", "t", "]"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[DoubleStruckCapitalP]1", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        SubscriptBox["\[Omega]", "11"], "[", "t", "]"}], ",", 
       RowBox[{
        SubscriptBox["\[Omega]", "12"], "[", "t", "]"}], ",", 
       RowBox[{
        SubscriptBox["v", "x11"], "[", "t", "]"}], ",", 
       RowBox[{
        SubscriptBox["v", "y11"], "[", "t", "]"}], ",", 
       RowBox[{
        SubscriptBox["v", "x12"], "[", "t", "]"}], ",", 
       RowBox[{
        SubscriptBox["v", "y12"], "[", "t", "]"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[DoubleStruckCapitalP]2", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        SubscriptBox["\[Omega]", "21"], "[", "t", "]"}], ",", 
       RowBox[{
        SubscriptBox["\[Omega]", "22"], "[", "t", "]"}], ",", 
       RowBox[{
        SubscriptBox["v", "x21"], "[", "t", "]"}], ",", 
       RowBox[{
        SubscriptBox["v", "y21"], "[", "t", "]"}], ",", 
       RowBox[{
        SubscriptBox["v", "x22"], "[", "t", "]"}], ",", 
       RowBox[{
        SubscriptBox["v", "y22"], "[", "t", "]"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[DoubleStruckCapitalP]", " ", "=", 
     RowBox[{"Join", "[", 
      RowBox[{
      "\[DoubleStruckCapitalP]0", ",", "\[DoubleStruckCapitalP]1", ",", 
       "\[DoubleStruckCapitalP]2"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[DoubleStruckM]", " ", "=", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"Dimensions", "@", "\[DoubleStruckCapitalP]"}], ")"}], 
       "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "-", 
      "\[DoubleStruckN]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Phi]", " ", "=", " ", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         SubscriptBox["x", "pp"], "[", "t", "]"}], "-", 
        RowBox[{"(", " ", 
         RowBox[{
          RowBox[{"-", 
           FractionBox["d", "2"]}], "+", " ", 
          RowBox[{
           SubscriptBox["l", "1"], 
           RowBox[{"Cos", "[", 
            RowBox[{
             SubscriptBox["\[Theta]", "11"], "[", "t", "]"}], "]"}]}], "+", 
          RowBox[{
           SubscriptBox["l", "2"], 
           RowBox[{"Cos", "[", 
            RowBox[{
             RowBox[{
              SubscriptBox["\[Theta]", "11"], "[", "t", "]"}], "+", 
             RowBox[{
              SubscriptBox["\[Theta]", "12"], "[", "t", "]"}]}], "]"}]}]}], 
         ")"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         SubscriptBox["y", "pp"], "[", "t", "]"}], "-", 
        RowBox[{"(", " ", 
         RowBox[{
          RowBox[{
           SubscriptBox["l", "1"], 
           RowBox[{"Sin", "[", 
            RowBox[{
             SubscriptBox["\[Theta]", "11"], "[", "t", "]"}], "]"}]}], "+", 
          RowBox[{
           SubscriptBox["l", "2"], 
           RowBox[{"Sin", "[", 
            RowBox[{
             RowBox[{
              SubscriptBox["\[Theta]", "11"], "[", "t", "]"}], "+", 
             RowBox[{
              SubscriptBox["\[Theta]", "12"], "[", "t", "]"}]}], "]"}]}]}], 
         ")"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         SubscriptBox["x", "pp"], "[", "t", "]"}], "-", 
        RowBox[{"(", " ", 
         RowBox[{
          FractionBox["d", "2"], "+", " ", 
          RowBox[{
           SubscriptBox["l", "1"], 
           RowBox[{"Cos", "[", 
            RowBox[{
             SubscriptBox["\[Theta]", "21"], "[", "t", "]"}], "]"}]}], "+", 
          RowBox[{
           SubscriptBox["l", "2"], 
           RowBox[{"Cos", "[", 
            RowBox[{
             RowBox[{
              SubscriptBox["\[Theta]", "21"], "[", "t", "]"}], "+", 
             RowBox[{
              SubscriptBox["\[Theta]", "22"], "[", "t", "]"}]}], "]"}]}]}], 
         ")"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         SubscriptBox["y", "pp"], "[", "t", "]"}], "-", 
        RowBox[{"(", " ", 
         RowBox[{
          RowBox[{
           SubscriptBox["l", "1"], 
           RowBox[{"Sin", "[", 
            RowBox[{
             SubscriptBox["\[Theta]", "21"], "[", "t", "]"}], "]"}]}], "+", 
          RowBox[{
           SubscriptBox["l", "2"], 
           RowBox[{"Sin", "[", 
            RowBox[{
             RowBox[{
              SubscriptBox["\[Theta]", "21"], "[", "t", "]"}], "+", 
             RowBox[{
              SubscriptBox["\[Theta]", "22"], "[", "t", "]"}]}], "]"}]}]}], 
         ")"}]}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[CapitalLambda]", " ", "=", " ", 
     RowBox[{"FullSimplify", "[", 
      RowBox[{
       RowBox[{"Dot", "[", 
        RowBox[{
         RowBox[{
          SubscriptBox["\[PartialD]", 
           RowBox[{"{", 
            SubscriptBox["\[DoubleStruckQ]", "\[NumberSign]"], "}"}]], 
          "\[Phi]"}], ",", 
         SubscriptBox["\[DoubleStruckP]", "\[NumberSign]"]}], "]"}], "+", 
       RowBox[{"Dot", "[", 
        RowBox[{
         RowBox[{"Dot", "[", 
          RowBox[{
           RowBox[{
            SubscriptBox["\[PartialD]", 
             RowBox[{"{", 
              SubscriptBox["\[DoubleStruckQ]", "1"], "}"}]], "\[Phi]"}], ",", 
           
           RowBox[{"Inverse", "[", "\[Psi]", "]"}]}], "]"}], ",", 
         SubscriptBox["\[DoubleStruckP]", "1"]}], "]"}], "+", 
       RowBox[{"Dot", "[", 
        RowBox[{
         RowBox[{"Dot", "[", 
          RowBox[{
           RowBox[{
            SubscriptBox["\[PartialD]", 
             RowBox[{"{", 
              SubscriptBox["\[DoubleStruckQ]", "2"], "}"}]], "\[Phi]"}], ",", 
           
           RowBox[{"Inverse", "[", "\[Psi]", "]"}]}], "]"}], ",", 
         SubscriptBox["\[DoubleStruckP]", "2"]}], "]"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[DoubleStruckCapitalK]", "\[NumberSign]"], "=", " ", 
     RowBox[{"FullSimplify", "[", 
      RowBox[{
       SubscriptBox["\[PartialD]", 
        RowBox[{"{", 
         SubscriptBox["\[DoubleStruckP]", "\[NumberSign]"], "}"}]], 
       "\[CapitalLambda]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[DoubleStruckCapitalK]", "o"], "=", " ", 
     RowBox[{"FullSimplify", "[", 
      RowBox[{
       SubscriptBox["\[PartialD]", 
        RowBox[{"{", 
         SubscriptBox["\[DoubleStruckP]", "o"], "}"}]], "\[CapitalLambda]"}], 
      "]"}]}], ";", 
    RowBox[{
     SubscriptBox["\[DoubleStruckCapitalK]", "\[NumberSign]"], "//", 
     "MatrixForm"}]}]}]}]], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQBmIQ3WVz8r3bp1eObDYmFu5A2p/Nyh5Ef7FPdATR9o+m
uIHoCEm5MBD9Y6ZwHIhmvc+UAqJ/3lg6A0Q7sAnPAtEp/Z/ng2ilvoQFIHqj
k7OON5B+90PMAERPsHrkAaKnH+fyAdEuUhsLQfT9izOLQfS5pN6zhZ9fOVro
VV8D0T03Cr+B6Bdzu76D6C7WD7pFQHpW+WxTEJ3eU+r4GkhPyBZ0AdFNDx+G
gOhVK69HgOiZDEv1rL+8crScOcUeRD+bV6pUAaT3Lb6hA6LvWL8wAdFWS2XM
QLSpeoMtiJ4ilGEHogN9T7mAaB6lJR4gGgAnG6dB
  "]],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "0"},
     {"0", "1"},
     {"1", "0"},
     {"0", "1"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.617296332682625*^9, {3.617296741860302*^9, 3.617296747175745*^9}, {
   3.617296788114419*^9, 3.617296814664137*^9}, 3.617326492915968*^9, 
   3.617332913241193*^9, 3.617544911684194*^9, 3.617547066347555*^9, 
   3.617581951396673*^9, 3.617582539741667*^9, 3.617707460193471*^9, 
   3.617707522574565*^9, 3.617707879521532*^9, 3.617708543715006*^9, 
   3.6177393093698063`*^9, 3.6178317925304747`*^9, {3.617833275816066*^9, 
   3.617833324540991*^9}, {3.6178333870784807`*^9, 3.617833393902356*^9}, 
   3.617833461314658*^9, 3.617833542908052*^9, 3.617838933196394*^9, 
   3.617843427321076*^9, 3.61784371497989*^9, 3.617843907681822*^9, 
   3.617844100900682*^9, 3.617886956644518*^9, 3.617888106322091*^9, 
   3.617888198932925*^9, 3.617909893704307*^9, 3.617911969118697*^9, 
   3.617912956801251*^9, 3.617913189722732*^9, 3.617916492004857*^9, 
   3.6179197293087997`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubscriptBox["\[DoubleStruckCapitalK]", "o"], "//", "MatrixForm"}]], "Input",\

 CellChangeTimes->{{3.616692492952917*^9, 3.61669249321605*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{
         SubscriptBox["\[Theta]", "11"], "[", "t", "]"}], "]"}], " ", 
       SubscriptBox["l", "1"]}], 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{
         RowBox[{
          SubscriptBox["\[Theta]", "11"], "[", "t", "]"}], "+", 
         RowBox[{
          SubscriptBox["\[Theta]", "12"], "[", "t", "]"}]}], "]"}], " ", 
       SubscriptBox["l", "2"]}], "0", "0"},
     {
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Cos", "[", 
         RowBox[{
          SubscriptBox["\[Theta]", "11"], "[", "t", "]"}], "]"}]}], " ", 
       SubscriptBox["l", "1"]}], 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Cos", "[", 
         RowBox[{
          RowBox[{
           SubscriptBox["\[Theta]", "11"], "[", "t", "]"}], "+", 
          RowBox[{
           SubscriptBox["\[Theta]", "12"], "[", "t", "]"}]}], "]"}]}], " ", 
       SubscriptBox["l", "2"]}], "0", "0"},
     {"0", "0", 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{
         SubscriptBox["\[Theta]", "21"], "[", "t", "]"}], "]"}], " ", 
       SubscriptBox["l", "1"]}], 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{
         RowBox[{
          SubscriptBox["\[Theta]", "21"], "[", "t", "]"}], "+", 
         RowBox[{
          SubscriptBox["\[Theta]", "22"], "[", "t", "]"}]}], "]"}], " ", 
       SubscriptBox["l", "2"]}]},
     {"0", "0", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Cos", "[", 
         RowBox[{
          SubscriptBox["\[Theta]", "21"], "[", "t", "]"}], "]"}]}], " ", 
       SubscriptBox["l", "1"]}], 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Cos", "[", 
         RowBox[{
          RowBox[{
           SubscriptBox["\[Theta]", "21"], "[", "t", "]"}], "+", 
          RowBox[{
           SubscriptBox["\[Theta]", "22"], "[", "t", "]"}]}], "]"}]}], " ", 
       SubscriptBox["l", "2"]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.6166924938306923`*^9, 3.616692503690737*^9}, 
   3.616692640038251*^9, 3.616692837430088*^9, 3.616693155127871*^9, 
   3.616975705846663*^9, 3.6170204881067343`*^9, 3.617295050401556*^9, 
   3.617296070729519*^9, 3.6172963326904593`*^9, 3.617326492923484*^9, 
   3.6173329132451563`*^9, 3.6175449117509737`*^9, 3.617547066472681*^9, 
   3.617581951494371*^9, 3.6175825398118*^9, 3.617707460252036*^9, 
   3.6177075226325197`*^9, 3.6177078800085297`*^9, 3.617739309376861*^9, 
   3.617831792538024*^9, 3.617838933203205*^9, 3.61784342732835*^9, 
   3.617843715065975*^9, 3.6178439078831177`*^9, 3.617844100913629*^9, 
   3.617886956653*^9, 3.617888106330091*^9, 3.617888198940611*^9, 
   3.617909893714287*^9, 3.6179119691701937`*^9, 3.617912956808785*^9, 
   3.617913189787291*^9, 3.6179164920620832`*^9, 3.617919729319566*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"\[DoubleStruckCapitalC]", " ", "=", 
   RowBox[{"FullSimplify", "@", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"Eye", "[", "2", "]"}], ",", 
      RowBox[{"Dot", "[", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"Inverse", "[", 
          SubscriptBox["\[DoubleStruckCapitalK]", "o"], "]"}]}], ",", 
        SubscriptBox["\[DoubleStruckCapitalK]", "\[NumberSign]"]}], "]"}]}], 
     "]"}]}]}], ";", 
  RowBox[{"\[DoubleStruckCapitalC]", "//", "MatrixForm"}]}]], "Input",
 CellChangeTimes->{{3.6166848482928247`*^9, 3.616684943239594*^9}, {
  3.6170206984040213`*^9, 3.6170207164353456`*^9}, {3.6177076339097853`*^9, 
  3.617707634145071*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "0"},
     {"0", "1"},
     {
      FractionBox[
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{
          RowBox[{
           SubscriptBox["\[Theta]", "11"], "[", "t", "]"}], "+", 
          RowBox[{
           SubscriptBox["\[Theta]", "12"], "[", "t", "]"}]}], "]"}], " ", 
        RowBox[{"Csc", "[", 
         RowBox[{
          SubscriptBox["\[Theta]", "12"], "[", "t", "]"}], "]"}]}], 
       SubscriptBox["l", "1"]], 
      FractionBox[
       RowBox[{
        RowBox[{"Csc", "[", 
         RowBox[{
          SubscriptBox["\[Theta]", "12"], "[", "t", "]"}], "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{
          RowBox[{
           SubscriptBox["\[Theta]", "11"], "[", "t", "]"}], "+", 
          RowBox[{
           SubscriptBox["\[Theta]", "12"], "[", "t", "]"}]}], "]"}]}], 
       SubscriptBox["l", "1"]]},
     {
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{
           SubscriptBox["\[Theta]", "11"], "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Csc", "[", 
          RowBox[{
           SubscriptBox["\[Theta]", "12"], "[", "t", "]"}], "]"}]}], 
        SubscriptBox["l", "2"]]}], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         RowBox[{"Csc", "[", 
          RowBox[{
           SubscriptBox["\[Theta]", "12"], "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{
           SubscriptBox["\[Theta]", "11"], "[", "t", "]"}], "]"}]}], 
        SubscriptBox["l", "2"]]}]},
     {
      FractionBox[
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{
          RowBox[{
           SubscriptBox["\[Theta]", "21"], "[", "t", "]"}], "+", 
          RowBox[{
           SubscriptBox["\[Theta]", "22"], "[", "t", "]"}]}], "]"}], " ", 
        RowBox[{"Csc", "[", 
         RowBox[{
          SubscriptBox["\[Theta]", "22"], "[", "t", "]"}], "]"}]}], 
       SubscriptBox["l", "1"]], 
      FractionBox[
       RowBox[{
        RowBox[{"Csc", "[", 
         RowBox[{
          SubscriptBox["\[Theta]", "22"], "[", "t", "]"}], "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{
          RowBox[{
           SubscriptBox["\[Theta]", "21"], "[", "t", "]"}], "+", 
          RowBox[{
           SubscriptBox["\[Theta]", "22"], "[", "t", "]"}]}], "]"}]}], 
       SubscriptBox["l", "1"]]},
     {
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{
           SubscriptBox["\[Theta]", "21"], "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Csc", "[", 
          RowBox[{
           SubscriptBox["\[Theta]", "22"], "[", "t", "]"}], "]"}]}], 
        SubscriptBox["l", "2"]]}], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         RowBox[{"Csc", "[", 
          RowBox[{
           SubscriptBox["\[Theta]", "22"], "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{
           SubscriptBox["\[Theta]", "21"], "[", "t", "]"}], "]"}]}], 
        SubscriptBox["l", "2"]]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGBQA+J3PrpF7p9eOeq+tpsLog9JsSp7A+kXGQImIDrm7BYf
EK2Um10CotMOu2RfBdIMywU8XwNpm2fLU0F0Q0RIZOHnV44/n924AaKPhs79
CaLbty7Z3ACkfyvpX2sG0k6nmKJeA+m9GhHpb4B00CP2gr9AWv/+xJ0gWrF5
0g6rL68cT/yOOwCiD1qEngPRzzyF3oLov4qbXb2AdF+HRF45kOaJWPuqCkin
VBTL1ALpeLVCBxDdwd8cAaL16pYUgOjKPXNiJwHpuweD3oLoBO1nP0D0jOV7
JswF0nwlOlPmAel1igv55wPp7Mb9OiDa63DHyQVA+s0E27hFQBoA/OSwkg==

  "]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FullSimplify", "@", 
    RowBox[{"NullSpace", "[", 
     RowBox[{"Join", "[", 
      RowBox[{
       SubscriptBox["\[DoubleStruckCapitalK]", "\[NumberSign]"], ",", 
       SubscriptBox["\[DoubleStruckCapitalK]", "o"], ",", "2"}], "]"}], 
     "]"}]}], "\[Transpose]"}], "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.616684956148469*^9, 3.616685072083305*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Sin", "[", 
         RowBox[{
          RowBox[{
           SubscriptBox["\[Theta]", "21"], "[", "t", "]"}], "+", 
          RowBox[{
           SubscriptBox["\[Theta]", "22"], "[", "t", "]"}]}], "]"}]}], " ", 
       SubscriptBox["l", "2"]}], 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Sin", "[", 
         RowBox[{
          SubscriptBox["\[Theta]", "21"], "[", "t", "]"}], "]"}]}], " ", 
       SubscriptBox["l", "1"]}]},
     {
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{
         RowBox[{
          SubscriptBox["\[Theta]", "21"], "[", "t", "]"}], "+", 
         RowBox[{
          SubscriptBox["\[Theta]", "22"], "[", "t", "]"}]}], "]"}], " ", 
       SubscriptBox["l", "2"]}], 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{
         SubscriptBox["\[Theta]", "21"], "[", "t", "]"}], "]"}], " ", 
       SubscriptBox["l", "1"]}]},
     {
      FractionBox[
       RowBox[{
        RowBox[{"Csc", "[", 
         RowBox[{
          SubscriptBox["\[Theta]", "12"], "[", "t", "]"}], "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{
          RowBox[{
           SubscriptBox["\[Theta]", "11"], "[", "t", "]"}], "+", 
          RowBox[{
           SubscriptBox["\[Theta]", "12"], "[", "t", "]"}], "-", 
          RowBox[{
           SubscriptBox["\[Theta]", "21"], "[", "t", "]"}], "-", 
          RowBox[{
           SubscriptBox["\[Theta]", "22"], "[", "t", "]"}]}], "]"}], " ", 
        SubscriptBox["l", "2"]}], 
       SubscriptBox["l", "1"]], 
      RowBox[{
       RowBox[{"Csc", "[", 
        RowBox[{
         SubscriptBox["\[Theta]", "12"], "[", "t", "]"}], "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{
         RowBox[{
          SubscriptBox["\[Theta]", "11"], "[", "t", "]"}], "+", 
         RowBox[{
          SubscriptBox["\[Theta]", "12"], "[", "t", "]"}], "-", 
         RowBox[{
          SubscriptBox["\[Theta]", "21"], "[", "t", "]"}]}], "]"}]}]},
     {
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Csc", "[", 
         RowBox[{
          SubscriptBox["\[Theta]", "12"], "[", "t", "]"}], "]"}]}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{
         RowBox[{
          SubscriptBox["\[Theta]", "11"], "[", "t", "]"}], "-", 
         RowBox[{
          SubscriptBox["\[Theta]", "21"], "[", "t", "]"}], "-", 
         RowBox[{
          SubscriptBox["\[Theta]", "22"], "[", "t", "]"}]}], "]"}]}], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         RowBox[{"Csc", "[", 
          RowBox[{
           SubscriptBox["\[Theta]", "12"], "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{
           RowBox[{
            SubscriptBox["\[Theta]", "11"], "[", "t", "]"}], "-", 
           RowBox[{
            SubscriptBox["\[Theta]", "21"], "[", "t", "]"}]}], "]"}], " ", 
         SubscriptBox["l", "1"]}], 
        SubscriptBox["l", "2"]]}]},
     {"0", "1"},
     {"1", "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.6166850244809713`*^9, 3.6166850734172287`*^9}, 
   3.616685294590275*^9, 3.616692504771196*^9, 3.616692641005187*^9, 
   3.616692837910083*^9, 3.6166931556019506`*^9, 3.616975706448637*^9, 
   3.617020488942131*^9, 3.617295050958033*^9, 3.6172960708351*^9, 
   3.6172963331724253`*^9, 3.617326493462245*^9, 3.617332913716723*^9, 
   3.617544912357204*^9, 3.617547067031753*^9, 3.6175819529814177`*^9, 
   3.617582541371915*^9, 3.6177074609355307`*^9, 3.6177075233359127`*^9, 
   3.6177078811088533`*^9, 3.617739309920163*^9, 3.6178317930804873`*^9, 
   3.617838933644383*^9, 3.617843427907305*^9, 3.617843715845747*^9, 
   3.6178439083347273`*^9, 3.617844101545199*^9, 3.617886957343856*^9, 
   3.617888106851069*^9, 3.617888199463335*^9, 3.617909894081656*^9, 
   3.617911969590109*^9, 3.617912957265757*^9, 3.6179131903012857`*^9, 
   3.617916492615821*^9, 3.617919730812395*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{
   RowBox[{"SUBS1", " ", "=", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        SubscriptBox["\[Theta]", "1"], "[", "t", "]"}], "\[Rule]", " ", 
       RowBox[{
        SubscriptBox["\[Theta]", "11"], "[", "t", "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        SubscriptBox["\[Theta]", "2"], "[", "t", "]"}], "\[Rule]", " ", 
       RowBox[{
        SubscriptBox["\[Theta]", "12"], "[", "t", "]"}]}]}], "}"}]}], 
   ";"}]}]], "Input",
 CellChangeTimes->{
  3.6169763764601316`*^9, {3.617020519350731*^9, 3.617020589988426*^9}, {
   3.617027145380582*^9, 3.617027147610708*^9}, {3.617296060771297*^9, 
   3.617296061949*^9}}],

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{
   RowBox[{"SUBS2", " ", "=", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        SubscriptBox["\[Theta]", "1"], "[", "t", "]"}], "\[Rule]", " ", 
       RowBox[{
        SubscriptBox["\[Theta]", "21"], "[", "t", "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        SubscriptBox["\[Theta]", "2"], "[", "t", "]"}], "\[Rule]", " ", 
       RowBox[{
        SubscriptBox["\[Theta]", "22"], "[", "t", "]"}]}]}], "}"}]}], 
   ";"}]}]], "Input",
 CellChangeTimes->{{3.617020658195052*^9, 3.617020662763451*^9}, {
  3.6170271493477783`*^9, 3.617027150915131*^9}, {3.617296063227934*^9, 
  3.617296064132929*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"\[GothicCapitalC]1", " ", "=", " ", 
   RowBox[{"\[GothicCapitalC]", "/.", "SUBS1"}]}], ";", 
  RowBox[{"\[GothicCapitalC]1", "//", "MatrixForm"}]}]], "Input",
 CellChangeTimes->{{3.617020593700061*^9, 3.6170206313763103`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "0"},
     {"0", "1"},
     {"0", "0"},
     {
      SubscriptBox["l", "g1"], "0"},
     {
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{
         SubscriptBox["\[Theta]", "12"], "[", "t", "]"}], "]"}], " ", 
       SubscriptBox["l", "1"]}], "0"},
     {
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{
         SubscriptBox["\[Theta]", "12"], "[", "t", "]"}], "]"}], " ", 
       SubscriptBox["l", "1"]}], 
      SubscriptBox["l", "g2"]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.617020631685357*^9, 3.6170273569503183`*^9, 
  3.617295057699052*^9, 3.6172960770586157`*^9, 3.6172963394317837`*^9, 
  3.617326501153324*^9, 3.617332920141473*^9, 3.617544921166966*^9, 
  3.617547075965016*^9, 3.617581977538669*^9, 3.617582567490823*^9, 
  3.617707473342256*^9, 3.617707523396174*^9, 3.617707881537486*^9, 
  3.617739309984864*^9, 3.617831793167885*^9, 3.6178389339636106`*^9, 
  3.61784342801062*^9, 3.61784371618991*^9, 3.6178439086478148`*^9, 
  3.617844101620805*^9, 3.617886957447822*^9, 3.6178881069407663`*^9, 
  3.617888199547015*^9, 3.6179098941270638`*^9, 3.617911969671349*^9, 
  3.6179129574009323`*^9, 3.617913190371625*^9, 3.6179164926513863`*^9, 
  3.617919731965458*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"\[GothicCapitalC]2", " ", "=", " ", 
   RowBox[{"\[GothicCapitalC]", "/.", "SUBS2"}]}], ";", 
  RowBox[{"\[GothicCapitalC]2", "//", "MatrixForm"}]}]], "Input",
 CellChangeTimes->{{3.6170206466580257`*^9, 3.617020653070877*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "0"},
     {"0", "1"},
     {"0", "0"},
     {
      SubscriptBox["l", "g1"], "0"},
     {
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{
         SubscriptBox["\[Theta]", "22"], "[", "t", "]"}], "]"}], " ", 
       SubscriptBox["l", "1"]}], "0"},
     {
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{
         SubscriptBox["\[Theta]", "22"], "[", "t", "]"}], "]"}], " ", 
       SubscriptBox["l", "1"]}], 
      SubscriptBox["l", "g2"]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.61702066798392*^9, 3.617027159151844*^9, 
  3.6172950577112303`*^9, 3.6172960770922327`*^9, 3.6172963394965067`*^9, 
  3.6173265012032137`*^9, 3.6173329202005377`*^9, 3.617544921207191*^9, 
  3.617547076020363*^9, 3.617581977595776*^9, 3.6175825675597467`*^9, 
  3.617707473379257*^9, 3.617707523435598*^9, 3.617707881693412*^9, 
  3.617739310049168*^9, 3.6178317931978397`*^9, 3.6178389340036707`*^9, 
  3.617843428106344*^9, 3.6178437163145857`*^9, 3.617843908823435*^9, 
  3.617844101683017*^9, 3.617886957509655*^9, 3.61788810701539*^9, 
  3.6178881996197577`*^9, 3.617909894136195*^9, 3.617911969716692*^9, 
  3.6179129574499607`*^9, 3.61791319043182*^9, 3.617916492683888*^9, 
  3.617919731980915*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Join", "[", 
   RowBox[{
    RowBox[{"Eye", "[", "2", "]"}], ",", 
    RowBox[{"Zeros", "[", 
     RowBox[{"4", ",", "2"}], "]"}]}], "]"}], "  ", "//", 
  "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.617709080248188*^9, 3.6177090930615797`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "0"},
     {"0", "1"},
     {"0", "0"},
     {"0", "0"},
     {"0", "0"},
     {"0", "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.6177090813680964`*^9, 3.617709093387651*^9}, 
   3.617739310151228*^9, 3.617831793231696*^9, 3.617838934053129*^9, 
   3.617843428204815*^9, 3.617843716463295*^9, 3.617843908928566*^9, 
   3.6178441017557793`*^9, 3.6178869575992126`*^9, 3.6178881070894003`*^9, 
   3.61788819969384*^9, 3.617909894144937*^9, 3.617911969769807*^9, 
   3.6179129575001717`*^9, 3.617913190498742*^9, 3.6179164927154837`*^9, 
   3.617919732173307*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"\[DoubleStruckCapitalC]\[DoubleStruckCapitalC]", " ", "=", 
   RowBox[{
    RowBox[{"FullSimplify", "@", 
     RowBox[{"Dot", "[", 
      RowBox[{
       RowBox[{"\[DoubleStruckCapitalC]", "\[Transpose]"}], ",", 
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"Eye", "[", "2", "]"}], ",", 
           RowBox[{"Zeros", "[", 
            RowBox[{"4", ",", "2"}], "]"}]}], "]"}], ",", 
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"Zeros", "[", 
            RowBox[{"2", ",", "6"}], "]"}], ",", 
           RowBox[{"\[GothicCapitalC]1", "\[Transpose]"}], ",", " ", 
           RowBox[{"Zeros", "[", 
            RowBox[{"2", ",", "6"}], "]"}]}], "]"}], ",", 
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"Zeros", "[", 
            RowBox[{"4", ",", "6"}], "]"}], ",", 
           RowBox[{"\[GothicCapitalC]2", "\[Transpose]"}]}], "]"}], ",", 
         "2"}], "]"}]}], "]"}]}], "\[Transpose]"}]}], ";", 
  RowBox[{
  "\[DoubleStruckCapitalC]\[DoubleStruckCapitalC]", "//", 
   "MatrixForm"}]}]], "Input",
 CellChangeTimes->{{3.617021035442778*^9, 3.617021121041809*^9}, {
   3.617021159582942*^9, 3.617021172212291*^9}, {3.617026925684494*^9, 
   3.61702703013387*^9}, {3.617296482575715*^9, 3.617296514450396*^9}, {
   3.617707440410347*^9, 3.617707451123273*^9}, 3.617739736172657*^9, 
   3.617739894548338*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "0"},
     {"0", "1"},
     {
      FractionBox[
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{
          RowBox[{
           SubscriptBox["\[Theta]", "11"], "[", "t", "]"}], "+", 
          RowBox[{
           SubscriptBox["\[Theta]", "12"], "[", "t", "]"}]}], "]"}], " ", 
        RowBox[{"Csc", "[", 
         RowBox[{
          SubscriptBox["\[Theta]", "12"], "[", "t", "]"}], "]"}]}], 
       SubscriptBox["l", "1"]], 
      FractionBox[
       RowBox[{
        RowBox[{"Csc", "[", 
         RowBox[{
          SubscriptBox["\[Theta]", "12"], "[", "t", "]"}], "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{
          RowBox[{
           SubscriptBox["\[Theta]", "11"], "[", "t", "]"}], "+", 
          RowBox[{
           SubscriptBox["\[Theta]", "12"], "[", "t", "]"}]}], "]"}]}], 
       SubscriptBox["l", "1"]]},
     {
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{
           SubscriptBox["\[Theta]", "11"], "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Csc", "[", 
          RowBox[{
           SubscriptBox["\[Theta]", "12"], "[", "t", "]"}], "]"}]}], 
        SubscriptBox["l", "2"]]}], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         RowBox[{"Csc", "[", 
          RowBox[{
           SubscriptBox["\[Theta]", "12"], "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{
           SubscriptBox["\[Theta]", "11"], "[", "t", "]"}], "]"}]}], 
        SubscriptBox["l", "2"]]}]},
     {"0", "0"},
     {
      FractionBox[
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{
          RowBox[{
           SubscriptBox["\[Theta]", "11"], "[", "t", "]"}], "+", 
          RowBox[{
           SubscriptBox["\[Theta]", "12"], "[", "t", "]"}]}], "]"}], " ", 
        RowBox[{"Csc", "[", 
         RowBox[{
          SubscriptBox["\[Theta]", "12"], "[", "t", "]"}], "]"}], " ", 
        SubscriptBox["l", "g1"]}], 
       SubscriptBox["l", "1"]], 
      FractionBox[
       RowBox[{
        RowBox[{"Csc", "[", 
         RowBox[{
          SubscriptBox["\[Theta]", "12"], "[", "t", "]"}], "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{
          RowBox[{
           SubscriptBox["\[Theta]", "11"], "[", "t", "]"}], "+", 
          RowBox[{
           SubscriptBox["\[Theta]", "12"], "[", "t", "]"}]}], "]"}], " ", 
        SubscriptBox["l", "g1"]}], 
       SubscriptBox["l", "1"]]},
     {
      RowBox[{"Cos", "[", 
       RowBox[{
        RowBox[{
         SubscriptBox["\[Theta]", "11"], "[", "t", "]"}], "+", 
        RowBox[{
         SubscriptBox["\[Theta]", "12"], "[", "t", "]"}]}], "]"}], 
      RowBox[{"Sin", "[", 
       RowBox[{
        RowBox[{
         SubscriptBox["\[Theta]", "11"], "[", "t", "]"}], "+", 
        RowBox[{
         SubscriptBox["\[Theta]", "12"], "[", "t", "]"}]}], "]"}]},
     {
      RowBox[{
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{
          RowBox[{
           SubscriptBox["\[Theta]", "11"], "[", "t", "]"}], "+", 
          RowBox[{
           SubscriptBox["\[Theta]", "12"], "[", "t", "]"}]}], "]"}], " ", 
        RowBox[{"Cot", "[", 
         RowBox[{
          SubscriptBox["\[Theta]", "12"], "[", "t", "]"}], "]"}]}], "-", 
       FractionBox[
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{
           SubscriptBox["\[Theta]", "11"], "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Csc", "[", 
          RowBox[{
           SubscriptBox["\[Theta]", "12"], "[", "t", "]"}], "]"}], " ", 
         SubscriptBox["l", "g2"]}], 
        SubscriptBox["l", "2"]]}], 
      RowBox[{
       RowBox[{
        RowBox[{"Cot", "[", 
         RowBox[{
          SubscriptBox["\[Theta]", "12"], "[", "t", "]"}], "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{
          RowBox[{
           SubscriptBox["\[Theta]", "11"], "[", "t", "]"}], "+", 
          RowBox[{
           SubscriptBox["\[Theta]", "12"], "[", "t", "]"}]}], "]"}]}], "-", 
       FractionBox[
        RowBox[{
         RowBox[{"Csc", "[", 
          RowBox[{
           SubscriptBox["\[Theta]", "12"], "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{
           SubscriptBox["\[Theta]", "11"], "[", "t", "]"}], "]"}], " ", 
         SubscriptBox["l", "g2"]}], 
        SubscriptBox["l", "2"]]}]},
     {
      FractionBox[
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{
          RowBox[{
           SubscriptBox["\[Theta]", "21"], "[", "t", "]"}], "+", 
          RowBox[{
           SubscriptBox["\[Theta]", "22"], "[", "t", "]"}]}], "]"}], " ", 
        RowBox[{"Csc", "[", 
         RowBox[{
          SubscriptBox["\[Theta]", "22"], "[", "t", "]"}], "]"}]}], 
       SubscriptBox["l", "1"]], 
      FractionBox[
       RowBox[{
        RowBox[{"Csc", "[", 
         RowBox[{
          SubscriptBox["\[Theta]", "22"], "[", "t", "]"}], "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{
          RowBox[{
           SubscriptBox["\[Theta]", "21"], "[", "t", "]"}], "+", 
          RowBox[{
           SubscriptBox["\[Theta]", "22"], "[", "t", "]"}]}], "]"}]}], 
       SubscriptBox["l", "1"]]},
     {
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{
           SubscriptBox["\[Theta]", "21"], "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Csc", "[", 
          RowBox[{
           SubscriptBox["\[Theta]", "22"], "[", "t", "]"}], "]"}]}], 
        SubscriptBox["l", "2"]]}], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         RowBox[{"Csc", "[", 
          RowBox[{
           SubscriptBox["\[Theta]", "22"], "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{
           SubscriptBox["\[Theta]", "21"], "[", "t", "]"}], "]"}]}], 
        SubscriptBox["l", "2"]]}]},
     {"0", "0"},
     {
      FractionBox[
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{
          RowBox[{
           SubscriptBox["\[Theta]", "21"], "[", "t", "]"}], "+", 
          RowBox[{
           SubscriptBox["\[Theta]", "22"], "[", "t", "]"}]}], "]"}], " ", 
        RowBox[{"Csc", "[", 
         RowBox[{
          SubscriptBox["\[Theta]", "22"], "[", "t", "]"}], "]"}], " ", 
        SubscriptBox["l", "g1"]}], 
       SubscriptBox["l", "1"]], 
      FractionBox[
       RowBox[{
        RowBox[{"Csc", "[", 
         RowBox[{
          SubscriptBox["\[Theta]", "22"], "[", "t", "]"}], "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{
          RowBox[{
           SubscriptBox["\[Theta]", "21"], "[", "t", "]"}], "+", 
          RowBox[{
           SubscriptBox["\[Theta]", "22"], "[", "t", "]"}]}], "]"}], " ", 
        SubscriptBox["l", "g1"]}], 
       SubscriptBox["l", "1"]]},
     {
      RowBox[{"Cos", "[", 
       RowBox[{
        RowBox[{
         SubscriptBox["\[Theta]", "21"], "[", "t", "]"}], "+", 
        RowBox[{
         SubscriptBox["\[Theta]", "22"], "[", "t", "]"}]}], "]"}], 
      RowBox[{"Sin", "[", 
       RowBox[{
        RowBox[{
         SubscriptBox["\[Theta]", "21"], "[", "t", "]"}], "+", 
        RowBox[{
         SubscriptBox["\[Theta]", "22"], "[", "t", "]"}]}], "]"}]},
     {
      RowBox[{
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{
          RowBox[{
           SubscriptBox["\[Theta]", "21"], "[", "t", "]"}], "+", 
          RowBox[{
           SubscriptBox["\[Theta]", "22"], "[", "t", "]"}]}], "]"}], " ", 
        RowBox[{"Cot", "[", 
         RowBox[{
          SubscriptBox["\[Theta]", "22"], "[", "t", "]"}], "]"}]}], "-", 
       FractionBox[
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{
           SubscriptBox["\[Theta]", "21"], "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Csc", "[", 
          RowBox[{
           SubscriptBox["\[Theta]", "22"], "[", "t", "]"}], "]"}], " ", 
         SubscriptBox["l", "g2"]}], 
        SubscriptBox["l", "2"]]}], 
      RowBox[{
       RowBox[{
        RowBox[{"Cot", "[", 
         RowBox[{
          SubscriptBox["\[Theta]", "22"], "[", "t", "]"}], "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{
          RowBox[{
           SubscriptBox["\[Theta]", "21"], "[", "t", "]"}], "+", 
          RowBox[{
           SubscriptBox["\[Theta]", "22"], "[", "t", "]"}]}], "]"}]}], "-", 
       FractionBox[
        RowBox[{
         RowBox[{"Csc", "[", 
          RowBox[{
           SubscriptBox["\[Theta]", "22"], "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{
           SubscriptBox["\[Theta]", "21"], "[", "t", "]"}], "]"}], " ", 
         SubscriptBox["l", "g2"]}], 
        SubscriptBox["l", "2"]]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.617021107409219*^9, 3.617021121455534*^9}, {
   3.617021168900272*^9, 3.61702117254606*^9}, 3.617026938621462*^9, 
   3.6170269760592117`*^9, {3.617027011499239*^9, 3.617027031613583*^9}, 
   3.617027162851755*^9, 3.6170273600566397`*^9, 3.6172950584613953`*^9, 
   3.6172960771277857`*^9, 3.6172961346928997`*^9, 3.617296340305005*^9, 
   3.6172965154753323`*^9, 3.61732650201407*^9, 3.617332920985993*^9, 
   3.617544922335245*^9, 3.617547077087928*^9, 3.617581980372387*^9, 
   3.617582570473816*^9, 3.61770747481699*^9, 3.6177075246455*^9, 
   3.617707883212748*^9, 3.617739310790269*^9, 3.617739737674754*^9, 
   3.617739895560649*^9, 3.617831793916827*^9, 3.617838934692568*^9, 
   3.617843428907419*^9, 3.6178437171025133`*^9, 3.617843909730077*^9, 
   3.617844102433015*^9, 3.617886958267222*^9, 3.617888107762205*^9, 
   3.61788820036089*^9, 3.6179098947778177`*^9, 3.617911970445747*^9, 
   3.617912958126547*^9, 3.617913191101125*^9, 3.617916493324404*^9, 
   3.617919734125782*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"d\[DoubleStruckQ]d\[DoubleStruckP]", " ", "=", " ", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"Eye", "[", "2", "]"}], ",", 
         RowBox[{"Zeros", "[", 
          RowBox[{"4", ",", "2"}], "]"}]}], "]"}], ",", 
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"Zeros", "[", 
            RowBox[{"2", ",", "2"}], "]"}], ",", 
           RowBox[{"Inverse", "[", "\[Psi]", "]"}]}], "]"}], ",", 
         RowBox[{"Zeros", "[", 
          RowBox[{"2", ",", "2"}], "]"}]}], "]"}], ",", "2"}], "]"}], ",", 
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"Zeros", "[", 
        RowBox[{"4", ",", "2"}], "]"}], ",", 
       RowBox[{"Inverse", "[", "\[Psi]", "]"}]}], "]"}], ",", "2"}], "]"}]}], 
  ";", 
  RowBox[{
  "d\[DoubleStruckQ]d\[DoubleStruckP]", " ", "//", "MatrixForm"}]}]], "Input",\

 CellChangeTimes->{{3.6172968856442747`*^9, 3.617296972837772*^9}, {
  3.6172970584512243`*^9, 3.617297113346221*^9}, {3.617707695362453*^9, 
  3.6177077792400503`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "0", "0", "0", "0", "0"},
     {"0", "1", "0", "0", "0", "0"},
     {"0", "0", "1", "0", "0", "0"},
     {"0", "0", 
      RowBox[{"-", "1"}], "1", "0", "0"},
     {"0", "0", "0", "0", "1", "0"},
     {"0", "0", "0", "0", 
      RowBox[{"-", "1"}], "1"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.6172971136554213`*^9, 3.617326502280945*^9, 3.617332921384514*^9, 
   3.61754492256312*^9, 3.617547077368855*^9, 3.6175819806974707`*^9, 
   3.617582570838489*^9, 3.617707475112339*^9, 3.617707525168128*^9, {
   3.6177077048915377`*^9, 3.6177077370479*^9}, {3.617707768328383*^9, 
   3.617707779679534*^9}, 3.617707883261417*^9, 3.617739310828053*^9, 
   3.6178317939616337`*^9, 3.617838934781848*^9, 3.617843429010377*^9, 
   3.617843717175452*^9, 3.617843909811359*^9, 3.617844102541152*^9, 
   3.617886958335169*^9, 3.617888107845173*^9, 3.6178882004392433`*^9, 
   3.6179098948140297`*^9, 3.617911970499604*^9, 3.617912958175099*^9, 
   3.617913191232951*^9, 3.617916493347136*^9, 3.6179197344991903`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   SubscriptBox["\[PartialD]", 
    RowBox[{"{", "\[DoubleStruckCapitalP]", "}"}]], "\[CapitalLambda]"}], "//",
   "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.6175449479713793`*^9, 3.617544981656275*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "0", 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{
         SubscriptBox["\[Theta]", "11"], "[", "t", "]"}], "]"}], " ", 
       SubscriptBox["l", "1"]}], 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{
         RowBox[{
          SubscriptBox["\[Theta]", "11"], "[", "t", "]"}], "+", 
         RowBox[{
          SubscriptBox["\[Theta]", "12"], "[", "t", "]"}]}], "]"}], " ", 
       SubscriptBox["l", "2"]}], "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0"},
     {"0", "1", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Cos", "[", 
         RowBox[{
          SubscriptBox["\[Theta]", "11"], "[", "t", "]"}], "]"}]}], " ", 
       SubscriptBox["l", "1"]}], 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Cos", "[", 
         RowBox[{
          RowBox[{
           SubscriptBox["\[Theta]", "11"], "[", "t", "]"}], "+", 
          RowBox[{
           SubscriptBox["\[Theta]", "12"], "[", "t", "]"}]}], "]"}]}], " ", 
       SubscriptBox["l", "2"]}], "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0"},
     {"1", "0", "0", "0", "0", "0", "0", "0", 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{
         SubscriptBox["\[Theta]", "21"], "[", "t", "]"}], "]"}], " ", 
       SubscriptBox["l", "1"]}], 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{
         RowBox[{
          SubscriptBox["\[Theta]", "21"], "[", "t", "]"}], "+", 
         RowBox[{
          SubscriptBox["\[Theta]", "22"], "[", "t", "]"}]}], "]"}], " ", 
       SubscriptBox["l", "2"]}], "0", "0", "0", "0"},
     {"0", "1", "0", "0", "0", "0", "0", "0", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Cos", "[", 
         RowBox[{
          SubscriptBox["\[Theta]", "21"], "[", "t", "]"}], "]"}]}], " ", 
       SubscriptBox["l", "1"]}], 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Cos", "[", 
         RowBox[{
          RowBox[{
           SubscriptBox["\[Theta]", "21"], "[", "t", "]"}], "+", 
          RowBox[{
           SubscriptBox["\[Theta]", "22"], "[", "t", "]"}]}], "]"}]}], " ", 
       SubscriptBox["l", "2"]}], "0", "0", "0", "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.617544953154819*^9, 3.617544983311487*^9}, 
   3.617547091613762*^9, 3.617581980878324*^9, 3.617582571045917*^9, 
   3.617707475440617*^9, 3.617707525663916*^9, 3.617707883300555*^9, 
   3.617739310859521*^9, 3.617831794004723*^9, 3.617838934818534*^9, 
   3.617843429103072*^9, 3.6178437172316093`*^9, 3.6178439099055557`*^9, 
   3.6178441026188087`*^9, 3.617886958367497*^9, 3.6178881079239597`*^9, 
   3.617888200511608*^9, 3.617909894867042*^9, 3.617911970555501*^9, 
   3.6179129582264013`*^9, 3.617913191292466*^9, 3.61791649336893*^9, 
   3.617919734510165*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"K1", " ", "=", " ", 
   RowBox[{"K", "/.", "SUBS1"}]}], ";", 
  RowBox[{"K1", "//", "MatrixForm"}]}]], "Input",
 CellChangeTimes->{{3.6175450269080353`*^9, 3.6175450676115427`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0", 
      RowBox[{"-", "1"}], "0", "0", "0"},
     {
      SubscriptBox["l", "g1"], "0", "0", 
      RowBox[{"-", "1"}], "0", "0"},
     {
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{
         SubscriptBox["\[Theta]", "12"], "[", "t", "]"}], "]"}], " ", 
       SubscriptBox["l", "1"]}], "0", "0", "0", 
      RowBox[{"-", "1"}], "0"},
     {
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{
         SubscriptBox["\[Theta]", "12"], "[", "t", "]"}], "]"}], " ", 
       SubscriptBox["l", "1"]}], 
      SubscriptBox["l", "g2"], "0", "0", "0", 
      RowBox[{"-", "1"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.6175450312736187`*^9, {3.617545062417881*^9, 3.617545069230001*^9}, 
   3.6175470916258173`*^9, 3.6175819809364557`*^9, 3.617582571125371*^9, 
   3.617707475477854*^9, 3.6177075257704763`*^9, 3.617707883313485*^9, 
   3.6177393108664703`*^9, 3.6178317940119953`*^9, 3.617838934825789*^9, 
   3.617843429198167*^9, 3.6178437172381897`*^9, 3.617843909956785*^9, 
   3.617844102666374*^9, 3.617886958375936*^9, 3.61788810800078*^9, 
   3.617888200519209*^9, 3.617909894915657*^9, 3.617911970564454*^9, 
   3.617912958234099*^9, 3.6179131913567247`*^9, 3.617916493433036*^9, 
   3.617919734864299*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"K2", " ", "=", " ", 
   RowBox[{"K", "/.", "SUBS2"}]}], ";", 
  RowBox[{"K2", "//", "MatrixForm"}]}]], "Input",
 CellChangeTimes->{{3.617545075710285*^9, 3.6175450782280912`*^9}, {
  3.617582528118726*^9, 3.6175825283443317`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0", 
      RowBox[{"-", "1"}], "0", "0", "0"},
     {
      SubscriptBox["l", "g1"], "0", "0", 
      RowBox[{"-", "1"}], "0", "0"},
     {
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{
         SubscriptBox["\[Theta]", "22"], "[", "t", "]"}], "]"}], " ", 
       SubscriptBox["l", "1"]}], "0", "0", "0", 
      RowBox[{"-", "1"}], "0"},
     {
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{
         SubscriptBox["\[Theta]", "22"], "[", "t", "]"}], "]"}], " ", 
       SubscriptBox["l", "1"]}], 
      SubscriptBox["l", "g2"], "0", "0", "0", 
      RowBox[{"-", "1"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.6175450790040607`*^9, 3.617547091632925*^9, 
  3.617581980991856*^9, 3.6175825299778643`*^9, 3.617582571141631*^9, 
  3.617707475518395*^9, 3.617707525859253*^9, 3.6177078833495197`*^9, 
  3.617739310904228*^9, 3.617831794053512*^9, 3.617838934875524*^9, 
  3.617843429283863*^9, 3.617843717285486*^9, 3.6178439100042*^9, 
  3.617844102675268*^9, 3.6178869584099417`*^9, 3.617888108199107*^9, 
  3.617888200588881*^9, 3.617909894950688*^9, 3.617911970609365*^9, 
  3.617912958280175*^9, 3.617913191419283*^9, 3.61791649345044*^9, 
  3.6179197351340437`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Join", "[", 
   RowBox[{"K1", ",", 
    RowBox[{"Zeros", "[", 
     RowBox[{"4", ",", "6"}], "]"}]}], "]"}], "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.617545091747838*^9, 3.617545118534727*^9}, {
  3.6177394070817738`*^9, 3.6177394208820143`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0", 
      RowBox[{"-", "1"}], "0", "0", "0"},
     {
      SubscriptBox["l", "g1"], "0", "0", 
      RowBox[{"-", "1"}], "0", "0"},
     {
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{
         SubscriptBox["\[Theta]", "12"], "[", "t", "]"}], "]"}], " ", 
       SubscriptBox["l", "1"]}], "0", "0", "0", 
      RowBox[{"-", "1"}], "0"},
     {
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{
         SubscriptBox["\[Theta]", "12"], "[", "t", "]"}], "]"}], " ", 
       SubscriptBox["l", "1"]}], 
      SubscriptBox["l", "g2"], "0", "0", "0", 
      RowBox[{"-", "1"}]},
     {"0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.617739421327581*^9, 3.6178317941000423`*^9, 
  3.617838934915389*^9, 3.6178434293788557`*^9, 3.61784371733372*^9, 
  3.617843910054562*^9, 3.617844102723607*^9, 3.617886958441863*^9, 
  3.6178881082866983`*^9, 3.617888200663231*^9, 3.61790989499514*^9, 
  3.617911970655396*^9, 3.617912958391882*^9, 3.617913191482395*^9, 
  3.617916493469339*^9, 3.6179197352298317`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Join", "[", 
   RowBox[{
    RowBox[{"Zeros", "[", 
     RowBox[{"4", ",", "6"}], "]"}], ",", "K2"}], "]"}], "//", 
  "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.617545137105606*^9, 3.617545143030157*^9}, {
  3.617739431160551*^9, 3.617739435185234*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0"},
     {"0", "0", 
      RowBox[{"-", "1"}], "0", "0", "0"},
     {
      SubscriptBox["l", "g1"], "0", "0", 
      RowBox[{"-", "1"}], "0", "0"},
     {
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{
         SubscriptBox["\[Theta]", "22"], "[", "t", "]"}], "]"}], " ", 
       SubscriptBox["l", "1"]}], "0", "0", "0", 
      RowBox[{"-", "1"}], "0"},
     {
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{
         SubscriptBox["\[Theta]", "22"], "[", "t", "]"}], "]"}], " ", 
       SubscriptBox["l", "1"]}], 
      SubscriptBox["l", "g2"], "0", "0", "0", 
      RowBox[{"-", "1"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.617545143470193*^9, 3.6175470916566477`*^9, 
  3.6175819811064453`*^9, 3.6175825712965307`*^9, 3.617707475596735*^9, 
  3.6177075261803827`*^9, 3.617707883429915*^9, 3.617739311011623*^9, 
  3.6177394357550364`*^9, 3.617831794230763*^9, 3.617838934966786*^9, 
  3.617843429565474*^9, 3.6178437174019537`*^9, 3.617843910364376*^9, 
  3.617844102728047*^9, 3.617886958477*^9, 3.617888108388337*^9, 
  3.617888200732419*^9, 3.617909895043961*^9, 3.617911970714265*^9, 
  3.617912958444501*^9, 3.6179131914900227`*^9, 3.617916493486884*^9, 
  3.617919735642275*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Join", "[", 
   RowBox[{
    RowBox[{"Zeros", "[", 
     RowBox[{"8", ",", "2"}], "]"}], ",", 
    RowBox[{"Join", "[", 
     RowBox[{"K1", ",", 
      RowBox[{"Zeros", "[", 
       RowBox[{"4", ",", "6"}], "]"}]}], "]"}], ",", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"Zeros", "[", 
       RowBox[{"4", ",", "6"}], "]"}], ",", "K2"}], "]"}], ",", "2"}], "]"}], 
  "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.6177395095135508`*^9, 3.617739514504764*^9}, {
  3.617739581042892*^9, 3.617739581819442*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0", "0", "0", 
      RowBox[{"-", "1"}], "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", 
      SubscriptBox["l", "g1"], "0", "0", 
      RowBox[{"-", "1"}], "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{
         SubscriptBox["\[Theta]", "12"], "[", "t", "]"}], "]"}], " ", 
       SubscriptBox["l", "1"]}], "0", "0", "0", 
      RowBox[{"-", "1"}], "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{
         SubscriptBox["\[Theta]", "12"], "[", "t", "]"}], "]"}], " ", 
       SubscriptBox["l", "1"]}], 
      SubscriptBox["l", "g2"], "0", "0", "0", 
      RowBox[{"-", "1"}], "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      RowBox[{"-", "1"}], "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", 
      SubscriptBox["l", "g1"], "0", "0", 
      RowBox[{"-", "1"}], "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{
         SubscriptBox["\[Theta]", "22"], "[", "t", "]"}], "]"}], " ", 
       SubscriptBox["l", "1"]}], "0", "0", "0", 
      RowBox[{"-", "1"}], "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{
         SubscriptBox["\[Theta]", "22"], "[", "t", "]"}], "]"}], " ", 
       SubscriptBox["l", "1"]}], 
      SubscriptBox["l", "g2"], "0", "0", "0", 
      RowBox[{"-", "1"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.6177395147826033`*^9, 3.617739582498748*^9, 
  3.617831794278492*^9, 3.617838935008078*^9, 3.617843429661708*^9, 
  3.617843717450954*^9, 3.617843910645358*^9, 3.617844102770081*^9, 
  3.6178869585215893`*^9, 3.617888108463509*^9, 3.6178882008075657`*^9, 
  3.6179098950881453`*^9, 3.617911970754773*^9, 3.617912958503437*^9, 
  3.617913191549405*^9, 3.617916493506222*^9, 3.617919735734807*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   SubscriptBox["\[PartialD]", 
    RowBox[{"{", "\[DoubleStruckCapitalP]", "}"}]], "\[CapitalLambda]"}], "//",
   "MatrixForm"}]], "Input"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "0", 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{
         SubscriptBox["\[Theta]", "11"], "[", "t", "]"}], "]"}], " ", 
       SubscriptBox["l", "1"]}], 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{
         RowBox[{
          SubscriptBox["\[Theta]", "11"], "[", "t", "]"}], "+", 
         RowBox[{
          SubscriptBox["\[Theta]", "12"], "[", "t", "]"}]}], "]"}], " ", 
       SubscriptBox["l", "2"]}], "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0"},
     {"0", "1", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Cos", "[", 
         RowBox[{
          SubscriptBox["\[Theta]", "11"], "[", "t", "]"}], "]"}]}], " ", 
       SubscriptBox["l", "1"]}], 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Cos", "[", 
         RowBox[{
          RowBox[{
           SubscriptBox["\[Theta]", "11"], "[", "t", "]"}], "+", 
          RowBox[{
           SubscriptBox["\[Theta]", "12"], "[", "t", "]"}]}], "]"}]}], " ", 
       SubscriptBox["l", "2"]}], "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0"},
     {"1", "0", "0", "0", "0", "0", "0", "0", 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{
         SubscriptBox["\[Theta]", "21"], "[", "t", "]"}], "]"}], " ", 
       SubscriptBox["l", "1"]}], 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{
         RowBox[{
          SubscriptBox["\[Theta]", "21"], "[", "t", "]"}], "+", 
         RowBox[{
          SubscriptBox["\[Theta]", "22"], "[", "t", "]"}]}], "]"}], " ", 
       SubscriptBox["l", "2"]}], "0", "0", "0", "0"},
     {"0", "1", "0", "0", "0", "0", "0", "0", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Cos", "[", 
         RowBox[{
          SubscriptBox["\[Theta]", "21"], "[", "t", "]"}], "]"}]}], " ", 
       SubscriptBox["l", "1"]}], 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Cos", "[", 
         RowBox[{
          RowBox[{
           SubscriptBox["\[Theta]", "21"], "[", "t", "]"}], "+", 
          RowBox[{
           SubscriptBox["\[Theta]", "22"], "[", "t", "]"}]}], "]"}]}], " ", 
       SubscriptBox["l", "2"]}], "0", "0", "0", "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.617545266719626*^9, 3.617547091683387*^9, 
  3.617581981234425*^9, 3.617582571455621*^9, 3.617707475677848*^9, 
  3.6177075263099937`*^9, 3.617707883499687*^9, 3.617739311149185*^9, 
  3.617831794332562*^9, 3.6178389350561028`*^9, 3.6178434297547293`*^9, 
  3.617843717504401*^9, 3.6178439107216*^9, 3.61784410281632*^9, 
  3.6178869586046057`*^9, 3.617888108546199*^9, 3.617888200880576*^9, 
  3.617909895126376*^9, 3.617911970806719*^9, 3.6179129585543222`*^9, 
  3.617913191612748*^9, 3.617916493524296*^9, 3.617919735827491*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"\[DoubleStruckCapitalK]\[DoubleStruckCapitalK]", " ", "=", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"Zeros", "[", 
        RowBox[{"8", ",", "2"}], "]"}], ",", 
       RowBox[{"Join", "[", 
        RowBox[{"K1", ",", 
         RowBox[{"Zeros", "[", 
          RowBox[{"4", ",", "6"}], "]"}]}], "]"}], ",", 
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"Zeros", "[", 
          RowBox[{"4", ",", "6"}], "]"}], ",", "K2"}], "]"}], ",", "2"}], 
      "]"}], ",", 
     RowBox[{
      SubscriptBox["\[PartialD]", 
       RowBox[{"{", "\[DoubleStruckCapitalP]", "}"}]], "\[CapitalLambda]"}]}],
     "]"}]}], ";", 
  RowBox[{
  "\[DoubleStruckCapitalK]\[DoubleStruckCapitalK]", "//", 
   "MatrixForm"}]}]], "Input",
 CellChangeTimes->{{3.617545873784086*^9, 3.61754589113992*^9}, {
   3.6175459335890512`*^9, 3.617545944082982*^9}, {3.617707940948855*^9, 
   3.617707972511331*^9}, {3.617708058570384*^9, 3.617708059640011*^9}, 
   3.61773961537214*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0", "0", "0", 
      RowBox[{"-", "1"}], "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", 
      SubscriptBox["l", "g1"], "0", "0", 
      RowBox[{"-", "1"}], "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{
         SubscriptBox["\[Theta]", "12"], "[", "t", "]"}], "]"}], " ", 
       SubscriptBox["l", "1"]}], "0", "0", "0", 
      RowBox[{"-", "1"}], "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{
         SubscriptBox["\[Theta]", "12"], "[", "t", "]"}], "]"}], " ", 
       SubscriptBox["l", "1"]}], 
      SubscriptBox["l", "g2"], "0", "0", "0", 
      RowBox[{"-", "1"}], "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      RowBox[{"-", "1"}], "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", 
      SubscriptBox["l", "g1"], "0", "0", 
      RowBox[{"-", "1"}], "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{
         SubscriptBox["\[Theta]", "22"], "[", "t", "]"}], "]"}], " ", 
       SubscriptBox["l", "1"]}], "0", "0", "0", 
      RowBox[{"-", "1"}], "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{
         SubscriptBox["\[Theta]", "22"], "[", "t", "]"}], "]"}], " ", 
       SubscriptBox["l", "1"]}], 
      SubscriptBox["l", "g2"], "0", "0", "0", 
      RowBox[{"-", "1"}]},
     {"1", "0", 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{
         SubscriptBox["\[Theta]", "11"], "[", "t", "]"}], "]"}], " ", 
       SubscriptBox["l", "1"]}], 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{
         RowBox[{
          SubscriptBox["\[Theta]", "11"], "[", "t", "]"}], "+", 
         RowBox[{
          SubscriptBox["\[Theta]", "12"], "[", "t", "]"}]}], "]"}], " ", 
       SubscriptBox["l", "2"]}], "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0"},
     {"0", "1", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Cos", "[", 
         RowBox[{
          SubscriptBox["\[Theta]", "11"], "[", "t", "]"}], "]"}]}], " ", 
       SubscriptBox["l", "1"]}], 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Cos", "[", 
         RowBox[{
          RowBox[{
           SubscriptBox["\[Theta]", "11"], "[", "t", "]"}], "+", 
          RowBox[{
           SubscriptBox["\[Theta]", "12"], "[", "t", "]"}]}], "]"}]}], " ", 
       SubscriptBox["l", "2"]}], "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0"},
     {"1", "0", "0", "0", "0", "0", "0", "0", 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{
         SubscriptBox["\[Theta]", "21"], "[", "t", "]"}], "]"}], " ", 
       SubscriptBox["l", "1"]}], 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{
         RowBox[{
          SubscriptBox["\[Theta]", "21"], "[", "t", "]"}], "+", 
         RowBox[{
          SubscriptBox["\[Theta]", "22"], "[", "t", "]"}]}], "]"}], " ", 
       SubscriptBox["l", "2"]}], "0", "0", "0", "0"},
     {"0", "1", "0", "0", "0", "0", "0", "0", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Cos", "[", 
         RowBox[{
          SubscriptBox["\[Theta]", "21"], "[", "t", "]"}], "]"}]}], " ", 
       SubscriptBox["l", "1"]}], 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Cos", "[", 
         RowBox[{
          RowBox[{
           SubscriptBox["\[Theta]", "21"], "[", "t", "]"}], "+", 
          RowBox[{
           SubscriptBox["\[Theta]", "22"], "[", "t", "]"}]}], "]"}]}], " ", 
       SubscriptBox["l", "2"]}], "0", "0", "0", "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.6175458914789667`*^9, 3.617545946584345*^9, 3.61754709169461*^9, 
   3.6175819812972727`*^9, 3.6175825715384483`*^9, 3.617707475715645*^9, 
   3.617707526348112*^9, 3.617707883538389*^9, {3.617707945050662*^9, 
   3.617707973079343*^9}, 3.6177080684607773`*^9, 3.617739311181572*^9, 
   3.617739617592188*^9, 3.6178317943822393`*^9, 3.617838935094007*^9, 
   3.617843429844487*^9, 3.617843717557029*^9, 3.6178439107701397`*^9, 
   3.6178441028591967`*^9, 3.617886958651224*^9, 3.617888108624299*^9, 
   3.617888200955024*^9, 3.617909895195574*^9, 3.617911970908141*^9, 
   3.617912958607366*^9, 3.617913191673216*^9, 3.617916493542601*^9, 
   3.617919736077044*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"d\[DoubleStruckCapitalK]\[DoubleStruckCapitalK]", " ", "=", " ", 
   RowBox[{"FullSimplify", "@", 
    RowBox[{"Dot", "[", 
     RowBox[{
      RowBox[{
       SubscriptBox["\[PartialD]", 
        RowBox[{"{", "\[DoubleStruckQ]\[DoubleStruckQ]", "}"}]], 
       "\[DoubleStruckCapitalK]\[DoubleStruckCapitalK]"}], ",", " ", 
      RowBox[{"Dot", "[", 
       RowBox[{
       "d\[DoubleStruckQ]d\[DoubleStruckP]", " ", ",", 
        "\[DoubleStruckP]\[DoubleStruckP]"}], "]"}]}], "]"}]}]}], ";", 
  RowBox[{
  "d\[DoubleStruckCapitalK]\[DoubleStruckCapitalK]", "//", 
   "MatrixForm"}]}]], "Input",
 CellChangeTimes->{{3.6175459612814503`*^9, 3.617545966495166*^9}, {
  3.617708071683682*^9, 3.617708076616024*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{
         SubscriptBox["\[Theta]", "12"], "[", "t", "]"}], "]"}], " ", 
       SubscriptBox["l", "1"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{
           SubscriptBox["\[Omega]", "11"], "[", "t", "]"}]}], "+", 
         RowBox[{
          SubscriptBox["\[Omega]", "12"], "[", "t", "]"}]}], ")"}]}], "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{
         SubscriptBox["\[Theta]", "12"], "[", "t", "]"}], "]"}], " ", 
       SubscriptBox["l", "1"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SubscriptBox["\[Omega]", "11"], "[", "t", "]"}], "-", 
         RowBox[{
          SubscriptBox["\[Omega]", "12"], "[", "t", "]"}]}], ")"}]}], "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{
         SubscriptBox["\[Theta]", "22"], "[", "t", "]"}], "]"}], " ", 
       SubscriptBox["l", "1"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{
           SubscriptBox["\[Omega]", "21"], "[", "t", "]"}]}], "+", 
         RowBox[{
          SubscriptBox["\[Omega]", "22"], "[", "t", "]"}]}], ")"}]}], "0", 
      "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{
         SubscriptBox["\[Theta]", "22"], "[", "t", "]"}], "]"}], " ", 
       SubscriptBox["l", "1"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SubscriptBox["\[Omega]", "21"], "[", "t", "]"}], "-", 
         RowBox[{
          SubscriptBox["\[Omega]", "22"], "[", "t", "]"}]}], ")"}]}], "0", 
      "0", "0", "0", "0"},
     {"0", "0", 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{
         SubscriptBox["\[Theta]", "11"], "[", "t", "]"}], "]"}], " ", 
       SubscriptBox["l", "1"], " ", 
       RowBox[{
        SubscriptBox["\[Omega]", "11"], "[", "t", "]"}]}], 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{
         RowBox[{
          SubscriptBox["\[Theta]", "11"], "[", "t", "]"}], "+", 
         RowBox[{
          SubscriptBox["\[Theta]", "12"], "[", "t", "]"}]}], "]"}], " ", 
       SubscriptBox["l", "2"], " ", 
       RowBox[{
        SubscriptBox["\[Omega]", "12"], "[", "t", "]"}]}], "0", "0", "0", "0",
       "0", "0", "0", "0", "0", "0"},
     {"0", "0", 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{
         SubscriptBox["\[Theta]", "11"], "[", "t", "]"}], "]"}], " ", 
       SubscriptBox["l", "1"], " ", 
       RowBox[{
        SubscriptBox["\[Omega]", "11"], "[", "t", "]"}]}], 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{
         RowBox[{
          SubscriptBox["\[Theta]", "11"], "[", "t", "]"}], "+", 
         RowBox[{
          SubscriptBox["\[Theta]", "12"], "[", "t", "]"}]}], "]"}], " ", 
       SubscriptBox["l", "2"], " ", 
       RowBox[{
        SubscriptBox["\[Omega]", "12"], "[", "t", "]"}]}], "0", "0", "0", "0",
       "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{
         SubscriptBox["\[Theta]", "21"], "[", "t", "]"}], "]"}], " ", 
       SubscriptBox["l", "1"], " ", 
       RowBox[{
        SubscriptBox["\[Omega]", "21"], "[", "t", "]"}]}], 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{
         RowBox[{
          SubscriptBox["\[Theta]", "21"], "[", "t", "]"}], "+", 
         RowBox[{
          SubscriptBox["\[Theta]", "22"], "[", "t", "]"}]}], "]"}], " ", 
       SubscriptBox["l", "2"], " ", 
       RowBox[{
        SubscriptBox["\[Omega]", "22"], "[", "t", "]"}]}], "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{
         SubscriptBox["\[Theta]", "21"], "[", "t", "]"}], "]"}], " ", 
       SubscriptBox["l", "1"], " ", 
       RowBox[{
        SubscriptBox["\[Omega]", "21"], "[", "t", "]"}]}], 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{
         RowBox[{
          SubscriptBox["\[Theta]", "21"], "[", "t", "]"}], "+", 
         RowBox[{
          SubscriptBox["\[Theta]", "22"], "[", "t", "]"}]}], "]"}], " ", 
       SubscriptBox["l", "2"], " ", 
       RowBox[{
        SubscriptBox["\[Omega]", "22"], "[", "t", "]"}]}], "0", "0", "0", 
      "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.617545971661187*^9, 3.617547091794924*^9, 
  3.617581981496846*^9, 3.617582571882366*^9, 3.617707475869103*^9, 
  3.617707526488286*^9, 3.617707883696306*^9, 3.617708080134185*^9, 
  3.61773931125603*^9, 3.6178317945545893`*^9, 3.617838935180565*^9, 
  3.6178434299262037`*^9, 3.617843717722743*^9, 3.617843910891735*^9, 
  3.617844102964429*^9, 3.617886958762678*^9, 3.617888108720461*^9, 
  3.6178882010546703`*^9, 3.617909895299121*^9, 3.61791197098209*^9, 
  3.6179129586848927`*^9, 3.617913191761512*^9, 3.617916493611268*^9, 
  3.617919736253293*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"FullSimplify", "@", 
   RowBox[{"Dot", "[", 
    RowBox[{
    "d\[DoubleStruckCapitalK]\[DoubleStruckCapitalK]", ",", 
     "\[DoubleStruckCapitalP]"}], "]"}]}], "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.6175486331014023`*^9, 3.6175486589403563`*^9}, 
   3.617708087267014*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {"0"},
      {"0"},
      {
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{
          SubscriptBox["\[Theta]", "12"], "[", "t", "]"}], "]"}], " ", 
        SubscriptBox["l", "1"], " ", 
        RowBox[{
         SubscriptBox["\[Omega]", "11"], "[", "t", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{
            SubscriptBox["\[Omega]", "11"], "[", "t", "]"}]}], "+", 
          RowBox[{
           SubscriptBox["\[Omega]", "12"], "[", "t", "]"}]}], ")"}]}]},
      {
       RowBox[{
        RowBox[{"Sin", "[", 
         RowBox[{
          SubscriptBox["\[Theta]", "12"], "[", "t", "]"}], "]"}], " ", 
        SubscriptBox["l", "1"], " ", 
        RowBox[{
         SubscriptBox["\[Omega]", "11"], "[", "t", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SubscriptBox["\[Omega]", "11"], "[", "t", "]"}], "-", 
          RowBox[{
           SubscriptBox["\[Omega]", "12"], "[", "t", "]"}]}], ")"}]}]},
      {"0"},
      {"0"},
      {
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{
          SubscriptBox["\[Theta]", "22"], "[", "t", "]"}], "]"}], " ", 
        SubscriptBox["l", "1"], " ", 
        RowBox[{
         SubscriptBox["\[Omega]", "21"], "[", "t", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{
            SubscriptBox["\[Omega]", "21"], "[", "t", "]"}]}], "+", 
          RowBox[{
           SubscriptBox["\[Omega]", "22"], "[", "t", "]"}]}], ")"}]}]},
      {
       RowBox[{
        RowBox[{"Sin", "[", 
         RowBox[{
          SubscriptBox["\[Theta]", "22"], "[", "t", "]"}], "]"}], " ", 
        SubscriptBox["l", "1"], " ", 
        RowBox[{
         SubscriptBox["\[Omega]", "21"], "[", "t", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SubscriptBox["\[Omega]", "21"], "[", "t", "]"}], "-", 
          RowBox[{
           SubscriptBox["\[Omega]", "22"], "[", "t", "]"}]}], ")"}]}]},
      {
       RowBox[{
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{
           SubscriptBox["\[Theta]", "11"], "[", "t", "]"}], "]"}], " ", 
         SubscriptBox["l", "1"], " ", 
         SuperscriptBox[
          RowBox[{
           SubscriptBox["\[Omega]", "11"], "[", "t", "]"}], "2"]}], "+", 
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{
           RowBox[{
            SubscriptBox["\[Theta]", "11"], "[", "t", "]"}], "+", 
           RowBox[{
            SubscriptBox["\[Theta]", "12"], "[", "t", "]"}]}], "]"}], " ", 
         SubscriptBox["l", "2"], " ", 
         SuperscriptBox[
          RowBox[{
           SubscriptBox["\[Omega]", "12"], "[", "t", "]"}], "2"]}]}]},
      {
       RowBox[{
        RowBox[{
         RowBox[{"Sin", "[", 
          RowBox[{
           SubscriptBox["\[Theta]", "11"], "[", "t", "]"}], "]"}], " ", 
         SubscriptBox["l", "1"], " ", 
         SuperscriptBox[
          RowBox[{
           SubscriptBox["\[Omega]", "11"], "[", "t", "]"}], "2"]}], "+", 
        RowBox[{
         RowBox[{"Sin", "[", 
          RowBox[{
           RowBox[{
            SubscriptBox["\[Theta]", "11"], "[", "t", "]"}], "+", 
           RowBox[{
            SubscriptBox["\[Theta]", "12"], "[", "t", "]"}]}], "]"}], " ", 
         SubscriptBox["l", "2"], " ", 
         SuperscriptBox[
          RowBox[{
           SubscriptBox["\[Omega]", "12"], "[", "t", "]"}], "2"]}]}]},
      {
       RowBox[{
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{
           SubscriptBox["\[Theta]", "21"], "[", "t", "]"}], "]"}], " ", 
         SubscriptBox["l", "1"], " ", 
         SuperscriptBox[
          RowBox[{
           SubscriptBox["\[Omega]", "21"], "[", "t", "]"}], "2"]}], "+", 
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{
           RowBox[{
            SubscriptBox["\[Theta]", "21"], "[", "t", "]"}], "+", 
           RowBox[{
            SubscriptBox["\[Theta]", "22"], "[", "t", "]"}]}], "]"}], " ", 
         SubscriptBox["l", "2"], " ", 
         SuperscriptBox[
          RowBox[{
           SubscriptBox["\[Omega]", "22"], "[", "t", "]"}], "2"]}]}]},
      {
       RowBox[{
        RowBox[{
         RowBox[{"Sin", "[", 
          RowBox[{
           SubscriptBox["\[Theta]", "21"], "[", "t", "]"}], "]"}], " ", 
         SubscriptBox["l", "1"], " ", 
         SuperscriptBox[
          RowBox[{
           SubscriptBox["\[Omega]", "21"], "[", "t", "]"}], "2"]}], "+", 
        RowBox[{
         RowBox[{"Sin", "[", 
          RowBox[{
           RowBox[{
            SubscriptBox["\[Theta]", "21"], "[", "t", "]"}], "+", 
           RowBox[{
            SubscriptBox["\[Theta]", "22"], "[", "t", "]"}]}], "]"}], " ", 
         SubscriptBox["l", "2"], " ", 
         SuperscriptBox[
          RowBox[{
           SubscriptBox["\[Omega]", "22"], "[", "t", "]"}], "2"]}]}]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.617548653729473*^9, 3.617548659343617*^9}, 
   3.617581981998155*^9, 3.617582572368969*^9, 3.61770747626329*^9, 
   3.617707526749992*^9, 3.617707883962224*^9, 3.617708087939515*^9, 
   3.6177393114251127`*^9, 3.61783179472714*^9, 3.617838935342177*^9, 
   3.617843430150044*^9, 3.617843717864818*^9, 3.617843911067994*^9, 
   3.617844103120781*^9, 3.617886958925952*^9, 3.61788810886003*^9, 
   3.617888201241704*^9, 3.617909895413704*^9, 3.617911971113545*^9, 
   3.617912958812002*^9, 3.617913191938731*^9, 3.617916493746669*^9, 
   3.617919737052836*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"FullSimplify", "@", 
   RowBox[{"Dot", "[", 
    RowBox[{
    "\[DoubleStruckCapitalK]\[DoubleStruckCapitalK]", " ", ",", 
     "\[DoubleStruckCapitalC]\[DoubleStruckCapitalC]"}], "]"}]}], "//", 
  "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.617582413529605*^9, 3.617582477208952*^9}, 
   3.617708092639604*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0"},
     {"0", "0"},
     {"0", "0"},
     {"0", "0"},
     {"0", "0"},
     {"0", "0"},
     {"0", "0"},
     {"0", "0"},
     {"0", "0"},
     {"0", "0"},
     {"0", "0"},
     {"0", "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.617582441886777*^9, 3.617582477780727*^9}, 
   3.6175825724486713`*^9, 3.617707476300337*^9, 3.617707526804576*^9, 
   3.617707883997704*^9, 3.6177080929387836`*^9, 3.617739311455585*^9, 
   3.617831794787703*^9, 3.617838935396758*^9, 3.617843430255731*^9, 
   3.617843717907773*^9, 3.6178439111338243`*^9, 3.617844103159566*^9, 
   3.617886958957409*^9, 3.617888108948091*^9, 3.617888201311166*^9, 
   3.6179098954391737`*^9, 3.61791197117258*^9, 3.617912958875553*^9, 
   3.617913192001499*^9, 3.617916493800856*^9, 3.617919737514345*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"M0", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       SubscriptBox["\[ScriptM]", "pp"], ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       SubscriptBox["\[ScriptM]", "pp"]}], "}"}]}], "}"}]}], ";", 
  RowBox[{"M0", "//", "MatrixForm"}]}]], "Input",
 CellChangeTimes->{{3.6177083041986313`*^9, 3.617708369639988*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      SubscriptBox["\[ScriptM]", "pp"], "0"},
     {"0", 
      SubscriptBox["\[ScriptM]", "pp"]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.6177083699682293`*^9, 3.617739311462739*^9, 
  3.617831794841872*^9, 3.61783893543554*^9, 3.617843430354048*^9, 
  3.617843717912978*^9, 3.617843911174189*^9, 3.617844103195999*^9, 
  3.617886958991685*^9, 3.6178881090240717`*^9, 3.617888201532674*^9, 
  3.617909895460238*^9, 3.617911971214541*^9, 3.6179129588805313`*^9, 
  3.617913192059186*^9, 3.6179164938045483`*^9, 3.617919738061225*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"M1", " ", "=", " ", 
   RowBox[{"M", "/.", "SUBS1"}]}], ";", " ", 
  RowBox[{"M1", "//", "MatrixForm"}]}]], "Input",
 CellChangeTimes->{{3.617708200116432*^9, 3.617708253151855*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      SubscriptBox["Jz", "1"], "0", "0", "0", "0", "0"},
     {"0", 
      SubscriptBox["Jz", "2"], "0", "0", "0", "0"},
     {"0", "0", 
      SubscriptBox["\[ScriptM]", "1"], "0", "0", "0"},
     {"0", "0", "0", 
      SubscriptBox["\[ScriptM]", "1"], "0", "0"},
     {"0", "0", "0", "0", 
      SubscriptBox["\[ScriptM]", "2"], "0"},
     {"0", "0", "0", "0", "0", 
      SubscriptBox["\[ScriptM]", "2"]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.617708201063218*^9, 3.6177082535363073`*^9, 
  3.617739311497011*^9, 3.6178317949687843`*^9, 3.6178389354419394`*^9, 
  3.6178434303599*^9, 3.617843717948923*^9, 3.617843911178986*^9, 
  3.617844103201741*^9, 3.617886959057053*^9, 3.6178881090306807`*^9, 
  3.617888201612636*^9, 3.617909895482173*^9, 3.617911971219569*^9, 
  3.617912958931307*^9, 3.6179131920684*^9, 3.6179164938416433`*^9, 
  3.617919738219294*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"M2", " ", "=", " ", 
   RowBox[{"M", "/.", "SUBS2"}]}], ";", " ", 
  RowBox[{"M2", "//", "MatrixForm"}]}]], "Input",
 CellChangeTimes->{{3.6177082806165047`*^9, 3.617708284995214*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      SubscriptBox["Jz", "1"], "0", "0", "0", "0", "0"},
     {"0", 
      SubscriptBox["Jz", "2"], "0", "0", "0", "0"},
     {"0", "0", 
      SubscriptBox["\[ScriptM]", "1"], "0", "0", "0"},
     {"0", "0", "0", 
      SubscriptBox["\[ScriptM]", "1"], "0", "0"},
     {"0", "0", "0", "0", 
      SubscriptBox["\[ScriptM]", "2"], "0"},
     {"0", "0", "0", "0", "0", 
      SubscriptBox["\[ScriptM]", "2"]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.617708285880486*^9, 3.61773931153025*^9, 
  3.617831795025216*^9, 3.61783893549023*^9, 3.617843430450858*^9, 
  3.617843718055615*^9, 3.617843911223727*^9, 3.617844103240652*^9, 
  3.6178869590911617`*^9, 3.617888109100719*^9, 3.61788820170938*^9, 
  3.617909895503628*^9, 3.617911971283595*^9, 3.6179129589858847`*^9, 
  3.617913192127778*^9, 3.617916493881691*^9, 3.61791973860296*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
  "\[DoubleStruckCapitalM]\[DoubleStruckCapitalM]d\[DoubleStruckCapitalP]", 
   " ", "=", " ", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"Dot", "[", 
      RowBox[{"M0", ",", 
       RowBox[{
        SubscriptBox["\[PartialD]", "t"], "\[DoubleStruckCapitalP]0"}]}], 
      "]"}], ",", 
     RowBox[{"Dot", "[", 
      RowBox[{"M1", ",", 
       RowBox[{
        SubscriptBox["\[PartialD]", "t"], "\[DoubleStruckCapitalP]1"}]}], 
      "]"}], ",", 
     RowBox[{"Dot", "[", 
      RowBox[{"M2", ",", 
       RowBox[{
        SubscriptBox["\[PartialD]", "t"], "\[DoubleStruckCapitalP]2"}]}], 
      "]"}]}], "]"}]}], ";", 
  RowBox[{
  "\[DoubleStruckCapitalM]\[DoubleStruckCapitalM]d\[DoubleStruckCapitalP]", 
   " ", "//", "MatrixForm"}]}]], "Input",
 CellChangeTimes->{{3.617831847243394*^9, 3.617831950843953*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {
       RowBox[{
        SubscriptBox["\[ScriptM]", "pp"], " ", 
        RowBox[{
         SuperscriptBox[
          SubscriptBox["dx", "pp"], "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}]}]},
      {
       RowBox[{
        SubscriptBox["\[ScriptM]", "pp"], " ", 
        RowBox[{
         SuperscriptBox[
          SubscriptBox["dy", "pp"], "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}]}]},
      {
       RowBox[{
        SubscriptBox["Jz", "1"], " ", 
        RowBox[{
         SuperscriptBox[
          SubscriptBox["\[Omega]", "11"], "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}]}]},
      {
       RowBox[{
        SubscriptBox["Jz", "2"], " ", 
        RowBox[{
         SuperscriptBox[
          SubscriptBox["\[Omega]", "12"], "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}]}]},
      {
       RowBox[{
        SubscriptBox["\[ScriptM]", "1"], " ", 
        RowBox[{
         SuperscriptBox[
          SubscriptBox["v", "x11"], "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}]}]},
      {
       RowBox[{
        SubscriptBox["\[ScriptM]", "1"], " ", 
        RowBox[{
         SuperscriptBox[
          SubscriptBox["v", "y11"], "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}]}]},
      {
       RowBox[{
        SubscriptBox["\[ScriptM]", "2"], " ", 
        RowBox[{
         SuperscriptBox[
          SubscriptBox["v", "x12"], "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}]}]},
      {
       RowBox[{
        SubscriptBox["\[ScriptM]", "2"], " ", 
        RowBox[{
         SuperscriptBox[
          SubscriptBox["v", "y12"], "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}]}]},
      {
       RowBox[{
        SubscriptBox["Jz", "1"], " ", 
        RowBox[{
         SuperscriptBox[
          SubscriptBox["\[Omega]", "21"], "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}]}]},
      {
       RowBox[{
        SubscriptBox["Jz", "2"], " ", 
        RowBox[{
         SuperscriptBox[
          SubscriptBox["\[Omega]", "22"], "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}]}]},
      {
       RowBox[{
        SubscriptBox["\[ScriptM]", "1"], " ", 
        RowBox[{
         SuperscriptBox[
          SubscriptBox["v", "x21"], "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}]}]},
      {
       RowBox[{
        SubscriptBox["\[ScriptM]", "1"], " ", 
        RowBox[{
         SuperscriptBox[
          SubscriptBox["v", "y21"], "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}]}]},
      {
       RowBox[{
        SubscriptBox["\[ScriptM]", "2"], " ", 
        RowBox[{
         SuperscriptBox[
          SubscriptBox["v", "x22"], "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}]}]},
      {
       RowBox[{
        SubscriptBox["\[ScriptM]", "2"], " ", 
        RowBox[{
         SuperscriptBox[
          SubscriptBox["v", "y22"], "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}]}]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.617831906885666*^9, 3.617831952429811*^9, 
  3.617838935530849*^9, 3.617843430545135*^9, 3.617843718120984*^9, 
  3.6178439112898684`*^9, 3.617844103324017*^9, 3.6178869591282377`*^9, 
  3.617888109181403*^9, 3.6178882017897463`*^9, 3.617909895526949*^9, 
  3.61791197133674*^9, 3.617912959035439*^9, 3.617913192395185*^9, 
  3.617916493919772*^9, 3.617919738876667*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"\[DoubleStruckCapitalM]\[DoubleStruckCapitalM]", " ", "=", " ", 
   RowBox[{
    SubscriptBox["\[PartialD]", 
     RowBox[{"{", 
      RowBox[{
       SubscriptBox["\[PartialD]", "t"], "\[DoubleStruckCapitalP]"}], "}"}]], 
    "\[DoubleStruckCapitalM]\[DoubleStruckCapitalM]d\[DoubleStruckCapitalP]"}]\
}], ";", 
  RowBox[{
  "\[DoubleStruckCapitalM]\[DoubleStruckCapitalM]", "//", 
   "MatrixForm"}]}]], "Input",
 CellChangeTimes->{{3.617831911317164*^9, 3.617831916327345*^9}, {
  3.617831958958209*^9, 3.617831994515973*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      SubscriptBox["\[ScriptM]", "pp"], "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0"},
     {"0", 
      SubscriptBox["\[ScriptM]", "pp"], "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0"},
     {"0", "0", 
      SubscriptBox["Jz", "1"], "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0"},
     {"0", "0", "0", 
      SubscriptBox["Jz", "2"], "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0"},
     {"0", "0", "0", "0", 
      SubscriptBox["\[ScriptM]", "1"], "0", "0", "0", "0", "0", "0", "0", "0",
       "0"},
     {"0", "0", "0", "0", "0", 
      SubscriptBox["\[ScriptM]", "1"], "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", 
      SubscriptBox["\[ScriptM]", "2"], "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", 
      SubscriptBox["\[ScriptM]", "2"], "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", 
      SubscriptBox["Jz", "1"], "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", 
      SubscriptBox["Jz", "2"], "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      SubscriptBox["\[ScriptM]", "1"], "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      SubscriptBox["\[ScriptM]", "1"], "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      SubscriptBox["\[ScriptM]", "2"], "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      SubscriptBox["\[ScriptM]", "2"]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.617831990670701*^9, 3.617831994904537*^9}, 
   3.6178389355713987`*^9, 3.617843430630352*^9, 3.6178437181623774`*^9, 
   3.617843911470175*^9, 3.617844103363803*^9, 3.6178869591582823`*^9, 
   3.6178881092543373`*^9, 3.617888201876851*^9, 3.617909895550462*^9, 
   3.617911971390492*^9, 3.617912959085724*^9, 3.617913192468895*^9, 
   3.6179164939579077`*^9, 3.6179197389404697`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"G0", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{
      SubscriptBox["\[ScriptM]", "pp"], " ", "g"}]}], "}"}]}], ";", 
  RowBox[{"G0", "//", "MatrixForm"}]}]], "Input",
 CellChangeTimes->{{3.617832051264468*^9, 3.617832092644256*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {"0"},
      {
       RowBox[{"g", " ", 
        SubscriptBox["\[ScriptM]", "pp"]}]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.6178320929005136`*^9, 3.617838935579136*^9, 
  3.617843430725597*^9, 3.617843718171193*^9, 3.6178439119318457`*^9, 
  3.6178441033957043`*^9, 3.617886959165983*^9, 3.617888109258597*^9, 
  3.617888201881489*^9, 3.617909895554088*^9, 3.617911971398484*^9, 
  3.617912959093348*^9, 3.617913192539452*^9, 3.6179164939617443`*^9, 
  3.617919738948905*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"G1", " ", "=", " ", 
   RowBox[{"G", "/.", "SUBS1"}]}], ";", " ", 
  RowBox[{"G1", "//", "MatrixForm"}]}]], "Input",
 CellChangeTimes->{{3.6178321133101587`*^9, 3.617832117421937*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {"0"},
      {"0"},
      {
       RowBox[{"g", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{
          SubscriptBox["\[Theta]", "11"], "[", "t", "]"}], "]"}], " ", 
        SubscriptBox["\[ScriptM]", "1"]}]},
      {
       RowBox[{"g", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{
          SubscriptBox["\[Theta]", "11"], "[", "t", "]"}], "]"}], " ", 
        SubscriptBox["\[ScriptM]", "1"]}]},
      {
       RowBox[{"g", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{
          RowBox[{
           SubscriptBox["\[Theta]", "11"], "[", "t", "]"}], "+", 
          RowBox[{
           SubscriptBox["\[Theta]", "12"], "[", "t", "]"}]}], "]"}], " ", 
        SubscriptBox["\[ScriptM]", "2"]}]},
      {
       RowBox[{"g", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{
          RowBox[{
           SubscriptBox["\[Theta]", "11"], "[", "t", "]"}], "+", 
          RowBox[{
           SubscriptBox["\[Theta]", "12"], "[", "t", "]"}]}], "]"}], " ", 
        SubscriptBox["\[ScriptM]", "2"]}]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.617832118705377*^9, 3.617838935622594*^9, 
  3.617843430734342*^9, 3.6178437181967278`*^9, 3.6178439120026207`*^9, 
  3.6178441034040194`*^9, 3.617886959229184*^9, 3.6178881093322363`*^9, 
  3.617888201954338*^9, 3.617909895574917*^9, 3.617911971447257*^9, 
  3.617912959138803*^9, 3.6179131926611023`*^9, 3.617916493998043*^9, 
  3.617919739002925*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"G2", " ", "=", " ", 
   RowBox[{"G", "/.", "SUBS2"}]}], ";", " ", 
  RowBox[{"G2", "//", "MatrixForm"}]}]], "Input",
 CellChangeTimes->{{3.617832102469756*^9, 3.617832137702999*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {"0"},
      {"0"},
      {
       RowBox[{"g", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{
          SubscriptBox["\[Theta]", "21"], "[", "t", "]"}], "]"}], " ", 
        SubscriptBox["\[ScriptM]", "1"]}]},
      {
       RowBox[{"g", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{
          SubscriptBox["\[Theta]", "21"], "[", "t", "]"}], "]"}], " ", 
        SubscriptBox["\[ScriptM]", "1"]}]},
      {
       RowBox[{"g", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{
          RowBox[{
           SubscriptBox["\[Theta]", "21"], "[", "t", "]"}], "+", 
          RowBox[{
           SubscriptBox["\[Theta]", "22"], "[", "t", "]"}]}], "]"}], " ", 
        SubscriptBox["\[ScriptM]", "2"]}]},
      {
       RowBox[{"g", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{
          RowBox[{
           SubscriptBox["\[Theta]", "21"], "[", "t", "]"}], "+", 
          RowBox[{
           SubscriptBox["\[Theta]", "22"], "[", "t", "]"}]}], "]"}], " ", 
        SubscriptBox["\[ScriptM]", "2"]}]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.617832132220737*^9, 3.617832138158369*^9}, 
   3.6178389356261597`*^9, 3.617843430825679*^9, 3.617843718237792*^9, 
   3.61784391200956*^9, 3.617844103436736*^9, 3.617886959307908*^9, 
   3.617888109336834*^9, 3.6178882020249367`*^9, 3.6179098955958757`*^9, 
   3.617911971502223*^9, 3.617912959192112*^9, 3.6179131927281427`*^9, 
   3.617916494043029*^9, 3.617919739073037*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"\[DoubleStruckCapitalG]\[DoubleStruckCapitalG]", " ", "=", " ", 
   RowBox[{"Join", "[", 
    RowBox[{"G0", ",", "G1", ",", "G2"}], "]"}]}], ";", " ", 
  RowBox[{
  "\[DoubleStruckCapitalG]\[DoubleStruckCapitalG]", "//", 
   "MatrixForm"}]}]], "Input",
 CellChangeTimes->{{3.6178321436785717`*^9, 3.617832162626752*^9}, {
  3.617832208111062*^9, 3.617832221894651*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {"0"},
      {
       RowBox[{"g", " ", 
        SubscriptBox["\[ScriptM]", "pp"]}]},
      {"0"},
      {"0"},
      {
       RowBox[{"g", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{
          SubscriptBox["\[Theta]", "11"], "[", "t", "]"}], "]"}], " ", 
        SubscriptBox["\[ScriptM]", "1"]}]},
      {
       RowBox[{"g", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{
          SubscriptBox["\[Theta]", "11"], "[", "t", "]"}], "]"}], " ", 
        SubscriptBox["\[ScriptM]", "1"]}]},
      {
       RowBox[{"g", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{
          RowBox[{
           SubscriptBox["\[Theta]", "11"], "[", "t", "]"}], "+", 
          RowBox[{
           SubscriptBox["\[Theta]", "12"], "[", "t", "]"}]}], "]"}], " ", 
        SubscriptBox["\[ScriptM]", "2"]}]},
      {
       RowBox[{"g", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{
          RowBox[{
           SubscriptBox["\[Theta]", "11"], "[", "t", "]"}], "+", 
          RowBox[{
           SubscriptBox["\[Theta]", "12"], "[", "t", "]"}]}], "]"}], " ", 
        SubscriptBox["\[ScriptM]", "2"]}]},
      {"0"},
      {"0"},
      {
       RowBox[{"g", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{
          SubscriptBox["\[Theta]", "21"], "[", "t", "]"}], "]"}], " ", 
        SubscriptBox["\[ScriptM]", "1"]}]},
      {
       RowBox[{"g", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{
          SubscriptBox["\[Theta]", "21"], "[", "t", "]"}], "]"}], " ", 
        SubscriptBox["\[ScriptM]", "1"]}]},
      {
       RowBox[{"g", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{
          RowBox[{
           SubscriptBox["\[Theta]", "21"], "[", "t", "]"}], "+", 
          RowBox[{
           SubscriptBox["\[Theta]", "22"], "[", "t", "]"}]}], "]"}], " ", 
        SubscriptBox["\[ScriptM]", "2"]}]},
      {
       RowBox[{"g", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{
          RowBox[{
           SubscriptBox["\[Theta]", "21"], "[", "t", "]"}], "+", 
          RowBox[{
           SubscriptBox["\[Theta]", "22"], "[", "t", "]"}]}], "]"}], " ", 
        SubscriptBox["\[ScriptM]", "2"]}]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.617832162899254*^9, 3.617832222303513*^9, 
  3.6178389356735983`*^9, 3.617843430922044*^9, 3.617843718272579*^9, 
  3.617843912078133*^9, 3.617844103505024*^9, 3.617886959418879*^9, 
  3.617888109403323*^9, 3.6178882021028137`*^9, 3.6179098956170397`*^9, 
  3.6179119715621967`*^9, 3.617912959248488*^9, 3.617913192734447*^9, 
  3.617916494095084*^9, 3.617919739082622*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"\[DoubleStruckCapitalA]", " ", "=", 
   RowBox[{"FullSimplify", "@", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"Eye", "[", "\[DoubleStruckN]\[DoubleStruckQ]", "]"}], ",", 
        RowBox[{"Zeros", "[", 
         RowBox[{
          RowBox[{"\[DoubleStruckN]", "+", "\[DoubleStruckM]"}], ",", 
          "\[DoubleStruckN]\[DoubleStruckQ]"}], "]"}]}], "]"}], ",", 
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"Zeros", "[", 
         RowBox[{"\[DoubleStruckN]\[DoubleStruckQ]", ",", 
          RowBox[{"\[DoubleStruckN]", "+", "\[DoubleStruckM]"}]}], "]"}], ",", 
        RowBox[{"Dot", "[", 
         RowBox[{
          RowBox[{
          "\[DoubleStruckCapitalC]\[DoubleStruckCapitalC]", "\[Transpose]"}], 
          ",", "\[DoubleStruckCapitalM]\[DoubleStruckCapitalM]"}], "]"}], ",",
         "\[DoubleStruckCapitalK]\[DoubleStruckCapitalK]"}], "]"}], ",", 
      "2"}], "]"}]}]}], ";", 
  RowBox[{"\[DoubleStruckCapitalA]", "//", "MatrixForm"}]}]], "Input",
 CellChangeTimes->{{3.6178339736931257`*^9, 3.6178340040542707`*^9}, {
  3.617834756897674*^9, 3.6178347698582077`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0"},
     {"0", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0"},
     {"0", "0", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "1", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", 
      SubscriptBox["\[ScriptM]", "pp"], "0", 
      FractionBox[
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{
          RowBox[{
           SubscriptBox["\[Theta]", "11"], "[", "t", "]"}], "+", 
          RowBox[{
           SubscriptBox["\[Theta]", "12"], "[", "t", "]"}]}], "]"}], " ", 
        RowBox[{"Csc", "[", 
         RowBox[{
          SubscriptBox["\[Theta]", "12"], "[", "t", "]"}], "]"}], " ", 
        SubscriptBox["Jz", "1"]}], 
       SubscriptBox["l", "1"]], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{
           SubscriptBox["\[Theta]", "11"], "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Csc", "[", 
          RowBox[{
           SubscriptBox["\[Theta]", "12"], "[", "t", "]"}], "]"}], " ", 
         SubscriptBox["Jz", "2"]}], 
        SubscriptBox["l", "2"]]}], "0", 
      FractionBox[
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{
          RowBox[{
           SubscriptBox["\[Theta]", "11"], "[", "t", "]"}], "+", 
          RowBox[{
           SubscriptBox["\[Theta]", "12"], "[", "t", "]"}]}], "]"}], " ", 
        RowBox[{"Csc", "[", 
         RowBox[{
          SubscriptBox["\[Theta]", "12"], "[", "t", "]"}], "]"}], " ", 
        SubscriptBox["l", "g1"], " ", 
        SubscriptBox["\[ScriptM]", "1"]}], 
       SubscriptBox["l", "1"]], 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{
         RowBox[{
          SubscriptBox["\[Theta]", "11"], "[", "t", "]"}], "+", 
         RowBox[{
          SubscriptBox["\[Theta]", "12"], "[", "t", "]"}]}], "]"}], " ", 
       SubscriptBox["\[ScriptM]", "2"]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"Cos", "[", 
           RowBox[{
            RowBox[{
             SubscriptBox["\[Theta]", "11"], "[", "t", "]"}], "+", 
            RowBox[{
             SubscriptBox["\[Theta]", "12"], "[", "t", "]"}]}], "]"}], " ", 
          RowBox[{"Cot", "[", 
           RowBox[{
            SubscriptBox["\[Theta]", "12"], "[", "t", "]"}], "]"}]}], "-", 
         FractionBox[
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{
             SubscriptBox["\[Theta]", "11"], "[", "t", "]"}], "]"}], " ", 
           RowBox[{"Csc", "[", 
            RowBox[{
             SubscriptBox["\[Theta]", "12"], "[", "t", "]"}], "]"}], " ", 
           SubscriptBox["l", "g2"]}], 
          SubscriptBox["l", "2"]]}], ")"}], " ", 
       SubscriptBox["\[ScriptM]", "2"]}], 
      FractionBox[
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{
          RowBox[{
           SubscriptBox["\[Theta]", "21"], "[", "t", "]"}], "+", 
          RowBox[{
           SubscriptBox["\[Theta]", "22"], "[", "t", "]"}]}], "]"}], " ", 
        RowBox[{"Csc", "[", 
         RowBox[{
          SubscriptBox["\[Theta]", "22"], "[", "t", "]"}], "]"}], " ", 
        SubscriptBox["Jz", "1"]}], 
       SubscriptBox["l", "1"]], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{
           SubscriptBox["\[Theta]", "21"], "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Csc", "[", 
          RowBox[{
           SubscriptBox["\[Theta]", "22"], "[", "t", "]"}], "]"}], " ", 
         SubscriptBox["Jz", "2"]}], 
        SubscriptBox["l", "2"]]}], "0", 
      FractionBox[
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{
          RowBox[{
           SubscriptBox["\[Theta]", "21"], "[", "t", "]"}], "+", 
          RowBox[{
           SubscriptBox["\[Theta]", "22"], "[", "t", "]"}]}], "]"}], " ", 
        RowBox[{"Csc", "[", 
         RowBox[{
          SubscriptBox["\[Theta]", "22"], "[", "t", "]"}], "]"}], " ", 
        SubscriptBox["l", "g1"], " ", 
        SubscriptBox["\[ScriptM]", "1"]}], 
       SubscriptBox["l", "1"]], 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{
         RowBox[{
          SubscriptBox["\[Theta]", "21"], "[", "t", "]"}], "+", 
         RowBox[{
          SubscriptBox["\[Theta]", "22"], "[", "t", "]"}]}], "]"}], " ", 
       SubscriptBox["\[ScriptM]", "2"]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"Cos", "[", 
           RowBox[{
            RowBox[{
             SubscriptBox["\[Theta]", "21"], "[", "t", "]"}], "+", 
            RowBox[{
             SubscriptBox["\[Theta]", "22"], "[", "t", "]"}]}], "]"}], " ", 
          RowBox[{"Cot", "[", 
           RowBox[{
            SubscriptBox["\[Theta]", "22"], "[", "t", "]"}], "]"}]}], "-", 
         FractionBox[
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{
             SubscriptBox["\[Theta]", "21"], "[", "t", "]"}], "]"}], " ", 
           RowBox[{"Csc", "[", 
            RowBox[{
             SubscriptBox["\[Theta]", "22"], "[", "t", "]"}], "]"}], " ", 
           SubscriptBox["l", "g2"]}], 
          SubscriptBox["l", "2"]]}], ")"}], " ", 
       SubscriptBox["\[ScriptM]", "2"]}]},
     {"0", "0", "0", "0", "0", "0", "0", 
      SubscriptBox["\[ScriptM]", "pp"], 
      FractionBox[
       RowBox[{
        RowBox[{"Csc", "[", 
         RowBox[{
          SubscriptBox["\[Theta]", "12"], "[", "t", "]"}], "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{
          RowBox[{
           SubscriptBox["\[Theta]", "11"], "[", "t", "]"}], "+", 
          RowBox[{
           SubscriptBox["\[Theta]", "12"], "[", "t", "]"}]}], "]"}], " ", 
        SubscriptBox["Jz", "1"]}], 
       SubscriptBox["l", "1"]], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         RowBox[{"Csc", "[", 
          RowBox[{
           SubscriptBox["\[Theta]", "12"], "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{
           SubscriptBox["\[Theta]", "11"], "[", "t", "]"}], "]"}], " ", 
         SubscriptBox["Jz", "2"]}], 
        SubscriptBox["l", "2"]]}], "0", 
      FractionBox[
       RowBox[{
        RowBox[{"Csc", "[", 
         RowBox[{
          SubscriptBox["\[Theta]", "12"], "[", "t", "]"}], "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{
          RowBox[{
           SubscriptBox["\[Theta]", "11"], "[", "t", "]"}], "+", 
          RowBox[{
           SubscriptBox["\[Theta]", "12"], "[", "t", "]"}]}], "]"}], " ", 
        SubscriptBox["l", "g1"], " ", 
        SubscriptBox["\[ScriptM]", "1"]}], 
       SubscriptBox["l", "1"]], 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{
         RowBox[{
          SubscriptBox["\[Theta]", "11"], "[", "t", "]"}], "+", 
         RowBox[{
          SubscriptBox["\[Theta]", "12"], "[", "t", "]"}]}], "]"}], " ", 
       SubscriptBox["\[ScriptM]", "2"]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"Cot", "[", 
           RowBox[{
            SubscriptBox["\[Theta]", "12"], "[", "t", "]"}], "]"}], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{
            RowBox[{
             SubscriptBox["\[Theta]", "11"], "[", "t", "]"}], "+", 
            RowBox[{
             SubscriptBox["\[Theta]", "12"], "[", "t", "]"}]}], "]"}]}], "-", 
         
         FractionBox[
          RowBox[{
           RowBox[{"Csc", "[", 
            RowBox[{
             SubscriptBox["\[Theta]", "12"], "[", "t", "]"}], "]"}], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{
             SubscriptBox["\[Theta]", "11"], "[", "t", "]"}], "]"}], " ", 
           SubscriptBox["l", "g2"]}], 
          SubscriptBox["l", "2"]]}], ")"}], " ", 
       SubscriptBox["\[ScriptM]", "2"]}], 
      FractionBox[
       RowBox[{
        RowBox[{"Csc", "[", 
         RowBox[{
          SubscriptBox["\[Theta]", "22"], "[", "t", "]"}], "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{
          RowBox[{
           SubscriptBox["\[Theta]", "21"], "[", "t", "]"}], "+", 
          RowBox[{
           SubscriptBox["\[Theta]", "22"], "[", "t", "]"}]}], "]"}], " ", 
        SubscriptBox["Jz", "1"]}], 
       SubscriptBox["l", "1"]], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         RowBox[{"Csc", "[", 
          RowBox[{
           SubscriptBox["\[Theta]", "22"], "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{
           SubscriptBox["\[Theta]", "21"], "[", "t", "]"}], "]"}], " ", 
         SubscriptBox["Jz", "2"]}], 
        SubscriptBox["l", "2"]]}], "0", 
      FractionBox[
       RowBox[{
        RowBox[{"Csc", "[", 
         RowBox[{
          SubscriptBox["\[Theta]", "22"], "[", "t", "]"}], "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{
          RowBox[{
           SubscriptBox["\[Theta]", "21"], "[", "t", "]"}], "+", 
          RowBox[{
           SubscriptBox["\[Theta]", "22"], "[", "t", "]"}]}], "]"}], " ", 
        SubscriptBox["l", "g1"], " ", 
        SubscriptBox["\[ScriptM]", "1"]}], 
       SubscriptBox["l", "1"]], 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{
         RowBox[{
          SubscriptBox["\[Theta]", "21"], "[", "t", "]"}], "+", 
         RowBox[{
          SubscriptBox["\[Theta]", "22"], "[", "t", "]"}]}], "]"}], " ", 
       SubscriptBox["\[ScriptM]", "2"]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"Cot", "[", 
           RowBox[{
            SubscriptBox["\[Theta]", "22"], "[", "t", "]"}], "]"}], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{
            RowBox[{
             SubscriptBox["\[Theta]", "21"], "[", "t", "]"}], "+", 
            RowBox[{
             SubscriptBox["\[Theta]", "22"], "[", "t", "]"}]}], "]"}]}], "-", 
         
         FractionBox[
          RowBox[{
           RowBox[{"Csc", "[", 
            RowBox[{
             SubscriptBox["\[Theta]", "22"], "[", "t", "]"}], "]"}], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{
             SubscriptBox["\[Theta]", "21"], "[", "t", "]"}], "]"}], " ", 
           SubscriptBox["l", "g2"]}], 
          SubscriptBox["l", "2"]]}], ")"}], " ", 
       SubscriptBox["\[ScriptM]", "2"]}]},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      RowBox[{"-", "1"}], "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", 
      SubscriptBox["l", "g1"], "0", "0", 
      RowBox[{"-", "1"}], "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{
         SubscriptBox["\[Theta]", "12"], "[", "t", "]"}], "]"}], " ", 
       SubscriptBox["l", "1"]}], "0", "0", "0", 
      RowBox[{"-", "1"}], "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{
         SubscriptBox["\[Theta]", "12"], "[", "t", "]"}], "]"}], " ", 
       SubscriptBox["l", "1"]}], 
      SubscriptBox["l", "g2"], "0", "0", "0", 
      RowBox[{"-", "1"}], "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", 
      RowBox[{"-", "1"}], "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      SubscriptBox["l", "g1"], "0", "0", 
      RowBox[{"-", "1"}], "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{
         SubscriptBox["\[Theta]", "22"], "[", "t", "]"}], "]"}], " ", 
       SubscriptBox["l", "1"]}], "0", "0", "0", 
      RowBox[{"-", "1"}], "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{
         SubscriptBox["\[Theta]", "22"], "[", "t", "]"}], "]"}], " ", 
       SubscriptBox["l", "1"]}], 
      SubscriptBox["l", "g2"], "0", "0", "0", 
      RowBox[{"-", "1"}]},
     {"0", "0", "0", "0", "0", "0", "1", "0", 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{
         SubscriptBox["\[Theta]", "11"], "[", "t", "]"}], "]"}], " ", 
       SubscriptBox["l", "1"]}], 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{
         RowBox[{
          SubscriptBox["\[Theta]", "11"], "[", "t", "]"}], "+", 
         RowBox[{
          SubscriptBox["\[Theta]", "12"], "[", "t", "]"}]}], "]"}], " ", 
       SubscriptBox["l", "2"]}], "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0"},
     {"0", "0", "0", "0", "0", "0", "0", "1", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Cos", "[", 
         RowBox[{
          SubscriptBox["\[Theta]", "11"], "[", "t", "]"}], "]"}]}], " ", 
       SubscriptBox["l", "1"]}], 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Cos", "[", 
         RowBox[{
          RowBox[{
           SubscriptBox["\[Theta]", "11"], "[", "t", "]"}], "+", 
          RowBox[{
           SubscriptBox["\[Theta]", "12"], "[", "t", "]"}]}], "]"}]}], " ", 
       SubscriptBox["l", "2"]}], "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0"},
     {"0", "0", "0", "0", "0", "0", "1", "0", "0", "0", "0", "0", "0", "0", 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{
         SubscriptBox["\[Theta]", "21"], "[", "t", "]"}], "]"}], " ", 
       SubscriptBox["l", "1"]}], 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{
         RowBox[{
          SubscriptBox["\[Theta]", "21"], "[", "t", "]"}], "+", 
         RowBox[{
          SubscriptBox["\[Theta]", "22"], "[", "t", "]"}]}], "]"}], " ", 
       SubscriptBox["l", "2"]}], "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0", "0", "0", "0", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Cos", "[", 
         RowBox[{
          SubscriptBox["\[Theta]", "21"], "[", "t", "]"}], "]"}]}], " ", 
       SubscriptBox["l", "1"]}], 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Cos", "[", 
         RowBox[{
          RowBox[{
           SubscriptBox["\[Theta]", "21"], "[", "t", "]"}], "+", 
          RowBox[{
           SubscriptBox["\[Theta]", "22"], "[", "t", "]"}]}], "]"}]}], " ", 
       SubscriptBox["l", "2"]}], "0", "0", "0", "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.617833993141095*^9, 3.617834005633821*^9}, 
   3.61783477355149*^9, 3.617838936622451*^9, 3.617843432116596*^9, 
   3.617843719352972*^9, 3.617843913828199*^9, 3.617844104511424*^9, 
   3.617886960602194*^9, 3.6178881102605667`*^9, 3.617888202849188*^9, 
   3.617909896327311*^9, 3.617911972270833*^9, 3.617912959977084*^9, 
   3.617913193537709*^9, 3.6179164948562737`*^9, 3.617919741299363*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"F", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     SubscriptBox["\[Tau]", "1"], ",", "0", ",", "0", ",", "0", ",", "0", ",",
      "0", ",", 
     SubscriptBox["\[Tau]", "2"], ",", "0", ",", "0", ",", "0", ",", "0", ",",
      "0"}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6178342731011257`*^9, 3.617834335847159*^9}, {
   3.6178345273764257`*^9, 3.61783453893302*^9}, 3.6178380807892437`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[DoubleStruckCapitalB]", " ", "=", 
   RowBox[{"Simplify", "@", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"Dot", "[", 
       RowBox[{
       "d\[DoubleStruckQ]d\[DoubleStruckP]", ",", 
        "\[DoubleStruckP]\[DoubleStruckP]"}], "]"}], ",", 
      RowBox[{"Dot", "[", 
       RowBox[{
        RowBox[{
        "\[DoubleStruckCapitalC]\[DoubleStruckCapitalC]", "\[Transpose]"}], 
        ",", 
        RowBox[{
        "F", "-", "\[DoubleStruckCapitalG]\[DoubleStruckCapitalG]"}]}], "]"}],
       ",", 
      RowBox[{"-", 
       RowBox[{"Dot", "[", 
        RowBox[{
        "d\[DoubleStruckCapitalK]\[DoubleStruckCapitalK]", ",", 
         "\[DoubleStruckCapitalP]"}], "]"}]}]}], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.617834400588269*^9, 3.6178344935665293`*^9}, {
  3.617834553289607*^9, 3.617834554718141*^9}, {3.617834778920677*^9, 
  3.6178347878962593`*^9}, {3.617843869203724*^9, 3.617843881218791*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[DoubleStruckCapitalX]", " ", "=", " ", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{
      SubscriptBox["\[PartialD]", "t"], "\[DoubleStruckQ]\[DoubleStruckQ]"}], 
     ",", 
     RowBox[{
      SubscriptBox["\[PartialD]", "t"], "\[DoubleStruckCapitalP]"}]}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.617834817971344*^9, 3.617834876888754*^9}, 
   3.617887366797029*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Eq", " ", "=", " ", 
   RowBox[{
    RowBox[{"Dot", "[", 
     RowBox[{"\[DoubleStruckCapitalA]", ",", "\[DoubleStruckCapitalX]"}], 
     "]"}], " ", "\[Equal]", " ", "\[DoubleStruckCapitalB]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.617834932834526*^9, 3.617834973272625*^9}, 
   3.617843857048822*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SubscriptBox["eq", "#"], "=", 
       RowBox[{
        RowBox[{
         RowBox[{"Dot", "[", 
          RowBox[{"\[DoubleStruckCapitalA]", ",", "\[DoubleStruckCapitalX]"}],
           "]"}], "\[LeftDoubleBracket]", "#", "\[RightDoubleBracket]"}], " ",
         "\[Equal]", " ", 
        RowBox[{
        "\[DoubleStruckCapitalB]", "\[LeftDoubleBracket]", "#", 
         "\[RightDoubleBracket]"}]}]}], ";"}], ")"}], "&"}], "/@", 
   RowBox[{"Range", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"Dimensions", "@", "\[DoubleStruckCapitalB]"}], ")"}], 
     "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.617835162140008*^9, 3.617835211937099*^9}, {
  3.617835257907433*^9, 3.6178352869964857`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Eq", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{
      SubscriptBox["eq", "#"], "&"}], "/@", 
     RowBox[{"Range", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"Dimensions", "@", "\[DoubleStruckCapitalB]"}], ")"}], 
       "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "]"}]}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.617835219632389*^9, 3.617835243132152*^9}, 
   3.617835296235224*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"SDATA2", " ", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      SubscriptBox["l", "1"], "\[Rule]", " ", "0.2"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["l", "2"], " ", "\[Rule]", " ", "0.2"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["l", "g1"], " ", "\[Rule]", " ", "0.1"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["l", "g2"], " ", "\[Rule]", " ", "0.1"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["\[ScriptM]", "1"], " ", "\[Rule]", " ", "0.054"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["\[ScriptM]", "2"], " ", "\[Rule]", " ", "0.054"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["Jz", "1"], " ", "\[Rule]", " ", 
      RowBox[{
       SubscriptBox["\[ScriptM]", "1"], 
       RowBox[{
        SuperscriptBox[
         SubscriptBox["l", "1"], "2"], "/", "12"}]}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["Jz", "2"], " ", "\[Rule]", " ", 
      RowBox[{
       SubscriptBox["\[ScriptM]", "2"], 
       RowBox[{
        SuperscriptBox[
         SubscriptBox["l", "2"], "2"], "/", "12"}]}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"g", "\[Rule]", " ", "9.8"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["\[ScriptM]", "pp"], "\[Rule]", " ", "0.0"}]}], 
    "\[IndentingNewLine]", "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.617835372970964*^9, 3.6178353913985043`*^9}, {
  3.617835545109676*^9, 3.6178356012537622`*^9}}],

Cell[CellGroupData[{

Cell[BoxData["\[DoubleStruckCapitalX]"], "Input",
 CellChangeTimes->{{3.6178356895316143`*^9, 3.617835695064242*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    SuperscriptBox[
     SubscriptBox["x", "pp"], "\[Prime]",
     MultilineFunction->None], "[", "t", "]"}], ",", 
   RowBox[{
    SuperscriptBox[
     SubscriptBox["y", "pp"], "\[Prime]",
     MultilineFunction->None], "[", "t", "]"}], ",", 
   RowBox[{
    SuperscriptBox[
     SubscriptBox["\[Theta]", "11"], "\[Prime]",
     MultilineFunction->None], "[", "t", "]"}], ",", 
   RowBox[{
    SuperscriptBox[
     SubscriptBox["\[Theta]", "12"], "\[Prime]",
     MultilineFunction->None], "[", "t", "]"}], ",", 
   RowBox[{
    SuperscriptBox[
     SubscriptBox["\[Theta]", "21"], "\[Prime]",
     MultilineFunction->None], "[", "t", "]"}], ",", 
   RowBox[{
    SuperscriptBox[
     SubscriptBox["\[Theta]", "22"], "\[Prime]",
     MultilineFunction->None], "[", "t", "]"}], ",", 
   RowBox[{
    SuperscriptBox[
     SubscriptBox["dx", "pp"], "\[Prime]",
     MultilineFunction->None], "[", "t", "]"}], ",", 
   RowBox[{
    SuperscriptBox[
     SubscriptBox["dy", "pp"], "\[Prime]",
     MultilineFunction->None], "[", "t", "]"}], ",", 
   RowBox[{
    SuperscriptBox[
     SubscriptBox["\[Omega]", "11"], "\[Prime]",
     MultilineFunction->None], "[", "t", "]"}], ",", 
   RowBox[{
    SuperscriptBox[
     SubscriptBox["\[Omega]", "12"], "\[Prime]",
     MultilineFunction->None], "[", "t", "]"}], ",", 
   RowBox[{
    SuperscriptBox[
     SubscriptBox["v", "x11"], "\[Prime]",
     MultilineFunction->None], "[", "t", "]"}], ",", 
   RowBox[{
    SuperscriptBox[
     SubscriptBox["v", "y11"], "\[Prime]",
     MultilineFunction->None], "[", "t", "]"}], ",", 
   RowBox[{
    SuperscriptBox[
     SubscriptBox["v", "x12"], "\[Prime]",
     MultilineFunction->None], "[", "t", "]"}], ",", 
   RowBox[{
    SuperscriptBox[
     SubscriptBox["v", "y12"], "\[Prime]",
     MultilineFunction->None], "[", "t", "]"}], ",", 
   RowBox[{
    SuperscriptBox[
     SubscriptBox["\[Omega]", "21"], "\[Prime]",
     MultilineFunction->None], "[", "t", "]"}], ",", 
   RowBox[{
    SuperscriptBox[
     SubscriptBox["\[Omega]", "22"], "\[Prime]",
     MultilineFunction->None], "[", "t", "]"}], ",", 
   RowBox[{
    SuperscriptBox[
     SubscriptBox["v", "x21"], "\[Prime]",
     MultilineFunction->None], "[", "t", "]"}], ",", 
   RowBox[{
    SuperscriptBox[
     SubscriptBox["v", "y21"], "\[Prime]",
     MultilineFunction->None], "[", "t", "]"}], ",", 
   RowBox[{
    SuperscriptBox[
     SubscriptBox["v", "x22"], "\[Prime]",
     MultilineFunction->None], "[", "t", "]"}], ",", 
   RowBox[{
    SuperscriptBox[
     SubscriptBox["v", "y22"], "\[Prime]",
     MultilineFunction->None], "[", "t", "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6178356953372793`*^9, 3.617838974251652*^9, 
  3.617843470698608*^9, 3.617843758489043*^9, 3.6178439241645412`*^9, 
  3.61784411464415*^9, 3.61788697049234*^9, 3.6178881196294813`*^9, 
  3.617888212278173*^9, 3.6179099063821163`*^9, 3.6179119813267307`*^9, 
  3.6179129694454803`*^9, 3.617913202953843*^9, 3.617916504373547*^9, 
  3.617919764082941*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"0.2", 
   RowBox[{"Sin", "[", 
    RowBox[{"72.0", 
     FractionBox["\[Pi]", "180"]}], "]"}]}], "+", 
  RowBox[{"0.2", 
   RowBox[{"Sin", "[", 
    RowBox[{"144.0", 
     FractionBox["\[Pi]", "180"]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6178359598654947`*^9, 3.6178360350541363`*^9}}],

Cell[BoxData["0.30776835371752537`"], "Output",
 CellChangeTimes->{{3.617836008271123*^9, 3.617836035615131*^9}, 
   3.617838974255125*^9, 3.6178434707388363`*^9, 3.6178437584927263`*^9, 
   3.617843924200614*^9, 3.617844114648354*^9, 3.617886970496509*^9, 
   3.617888119633378*^9, 3.6178882122837877`*^9, 3.617909906386732*^9, 
   3.617911981373897*^9, 3.6179129694491873`*^9, 3.617913202957992*^9, 
   3.6179165043763437`*^9, 3.617919764153967*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"CIq", " ", "=", " ", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{
       SubscriptBox["x", "pp"], "[", "0", "]"}], " ", "\[Equal]", " ", 
      "0.06"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       SubscriptBox["y", "pp"], "[", "0", "]"}], " ", "\[Equal]", " ", 
      "0.30776835371752537"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       SubscriptBox["\[Theta]", "11"], "[", "0", "]"}], " ", "\[Equal]", " ", 
      "1.6126546190489983"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       SubscriptBox["\[Theta]", "12"], "[", "0", "]"}], "\[Equal]", " ", 
      RowBox[{"-", "1.0425528813640035"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       SubscriptBox["\[Theta]", "21"], "[", "0", "]"}], " ", "\[Equal]", " ", 
      "1.0173713181256812"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       SubscriptBox["\[Theta]", "22"], "[", "0", "]"}], "\[Equal]", " ", 
      "1.365336849825058"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.61783665982973*^9, 3.6178367465862713`*^9}, {
   3.617836922395556*^9, 3.617836958144215*^9}, 3.617910913347674*^9, {
   3.617911789358508*^9, 3.617911809686591*^9}, 3.61791196266313*^9, 
   3.617912775447497*^9, {3.617912820767713*^9, 3.617912905403804*^9}, {
   3.6179130889783792`*^9, 3.6179131395856037`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SubscriptBox["cip", "#"], "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
           "\[DoubleStruckCapitalP]", "\[LeftDoubleBracket]", "#", 
            "\[RightDoubleBracket]"}], ")"}], "/.", 
          RowBox[{"t", "\[Rule]", " ", "0"}]}], ")"}], " ", "\[Equal]", " ", 
        "0"}]}], ";"}], ")"}], "&"}], "/@", 
   RowBox[{"Range", "[", 
    RowBox[{"\[DoubleStruckN]", "+", "\[DoubleStruckM]"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.6178370049291058`*^9, 3.617837086256035*^9}, {
  3.617837120143736*^9, 3.617837129335875*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"CIp", " ", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{
      SubscriptBox["cip", "#"], "&"}], "/@", 
     RowBox[{"Range", "[", 
      RowBox[{"\[DoubleStruckN]", "+", "\[DoubleStruckM]"}], "]"}]}], "]"}]}],
   ";"}]], "Input",
 CellChangeTimes->{{3.6178370681840467`*^9, 3.617837095804661*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CIp", "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.617837101862308*^9, 3.617837108505085*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {
       RowBox[{
        RowBox[{
         SubscriptBox["dx", "pp"], "[", "0", "]"}], "\[Equal]", "0"}]},
      {
       RowBox[{
        RowBox[{
         SubscriptBox["dy", "pp"], "[", "0", "]"}], "\[Equal]", "0"}]},
      {
       RowBox[{
        RowBox[{
         SubscriptBox["\[Omega]", "11"], "[", "0", "]"}], "\[Equal]", "0"}]},
      {
       RowBox[{
        RowBox[{
         SubscriptBox["\[Omega]", "12"], "[", "0", "]"}], "\[Equal]", "0"}]},
      {
       RowBox[{
        RowBox[{
         SubscriptBox["v", "x11"], "[", "0", "]"}], "\[Equal]", "0"}]},
      {
       RowBox[{
        RowBox[{
         SubscriptBox["v", "y11"], "[", "0", "]"}], "\[Equal]", "0"}]},
      {
       RowBox[{
        RowBox[{
         SubscriptBox["v", "x12"], "[", "0", "]"}], "\[Equal]", "0"}]},
      {
       RowBox[{
        RowBox[{
         SubscriptBox["v", "y12"], "[", "0", "]"}], "\[Equal]", "0"}]},
      {
       RowBox[{
        RowBox[{
         SubscriptBox["\[Omega]", "21"], "[", "0", "]"}], "\[Equal]", "0"}]},
      {
       RowBox[{
        RowBox[{
         SubscriptBox["\[Omega]", "22"], "[", "0", "]"}], "\[Equal]", "0"}]},
      {
       RowBox[{
        RowBox[{
         SubscriptBox["v", "x21"], "[", "0", "]"}], "\[Equal]", "0"}]},
      {
       RowBox[{
        RowBox[{
         SubscriptBox["v", "y21"], "[", "0", "]"}], "\[Equal]", "0"}]},
      {
       RowBox[{
        RowBox[{
         SubscriptBox["v", "x22"], "[", "0", "]"}], "\[Equal]", "0"}]},
      {
       RowBox[{
        RowBox[{
         SubscriptBox["v", "y22"], "[", "0", "]"}], "\[Equal]", "0"}]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.6178371087907352`*^9, 3.617837133140023*^9}, 
   3.617838974304678*^9, 3.617843470794978*^9, 3.617843758561945*^9, 
   3.617843924291658*^9, 3.617844114711122*^9, 3.617886970551634*^9, 
   3.6178881197290277`*^9, 3.617888212363237*^9, 3.617909906437639*^9, 
   3.617910922233321*^9, 3.617911119103459*^9, 3.61791120313468*^9, 
   3.617911279706233*^9, 3.6179113495817623`*^9, 3.6179119815434837`*^9, 
   3.617912969517692*^9, 3.617913203016584*^9, 3.6179165044322233`*^9, 
   3.617919764294257*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"CI", " ", "=", " ", 
   RowBox[{"Join", "[", 
    RowBox[{"CIq", ",", "CIp"}], "]"}]}], ";", 
  RowBox[{"CI", "//", "MatrixForm"}]}]], "Input",
 CellChangeTimes->{{3.617837138204442*^9, 3.6178371556562634`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {
       RowBox[{
        RowBox[{
         SubscriptBox["x", "pp"], "[", "0", "]"}], "\[Equal]", "0.06`"}]},
      {
       RowBox[{
        RowBox[{
         SubscriptBox["y", "pp"], "[", "0", "]"}], "\[Equal]", 
        "0.30776835371752537`"}]},
      {
       RowBox[{
        RowBox[{
         SubscriptBox["\[Theta]", "11"], "[", "0", "]"}], "\[Equal]", 
        "1.6126546190489983`"}]},
      {
       RowBox[{
        RowBox[{
         SubscriptBox["\[Theta]", "12"], "[", "0", "]"}], "\[Equal]", 
        RowBox[{"-", "1.0425528813640035`"}]}]},
      {
       RowBox[{
        RowBox[{
         SubscriptBox["\[Theta]", "21"], "[", "0", "]"}], "\[Equal]", 
        "1.0173713181256812`"}]},
      {
       RowBox[{
        RowBox[{
         SubscriptBox["\[Theta]", "22"], "[", "0", "]"}], "\[Equal]", 
        "1.365336849825058`"}]},
      {
       RowBox[{
        RowBox[{
         SubscriptBox["dx", "pp"], "[", "0", "]"}], "\[Equal]", "0"}]},
      {
       RowBox[{
        RowBox[{
         SubscriptBox["dy", "pp"], "[", "0", "]"}], "\[Equal]", "0"}]},
      {
       RowBox[{
        RowBox[{
         SubscriptBox["\[Omega]", "11"], "[", "0", "]"}], "\[Equal]", "0"}]},
      {
       RowBox[{
        RowBox[{
         SubscriptBox["\[Omega]", "12"], "[", "0", "]"}], "\[Equal]", "0"}]},
      {
       RowBox[{
        RowBox[{
         SubscriptBox["v", "x11"], "[", "0", "]"}], "\[Equal]", "0"}]},
      {
       RowBox[{
        RowBox[{
         SubscriptBox["v", "y11"], "[", "0", "]"}], "\[Equal]", "0"}]},
      {
       RowBox[{
        RowBox[{
         SubscriptBox["v", "x12"], "[", "0", "]"}], "\[Equal]", "0"}]},
      {
       RowBox[{
        RowBox[{
         SubscriptBox["v", "y12"], "[", "0", "]"}], "\[Equal]", "0"}]},
      {
       RowBox[{
        RowBox[{
         SubscriptBox["\[Omega]", "21"], "[", "0", "]"}], "\[Equal]", "0"}]},
      {
       RowBox[{
        RowBox[{
         SubscriptBox["\[Omega]", "22"], "[", "0", "]"}], "\[Equal]", "0"}]},
      {
       RowBox[{
        RowBox[{
         SubscriptBox["v", "x21"], "[", "0", "]"}], "\[Equal]", "0"}]},
      {
       RowBox[{
        RowBox[{
         SubscriptBox["v", "y21"], "[", "0", "]"}], "\[Equal]", "0"}]},
      {
       RowBox[{
        RowBox[{
         SubscriptBox["v", "x22"], "[", "0", "]"}], "\[Equal]", "0"}]},
      {
       RowBox[{
        RowBox[{
         SubscriptBox["v", "y22"], "[", "0", "]"}], "\[Equal]", "0"}]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.617837155945986*^9, 3.6178389743322573`*^9, 
  3.61784347082734*^9, 3.617843758606469*^9, 3.6178439243278723`*^9, 
  3.617844114750136*^9, 3.617886970589703*^9, 3.617888119797352*^9, 
  3.6178882124050627`*^9, 3.617909906474045*^9, 3.617910927277273*^9, 
  3.617911121589735*^9, 3.617911205107518*^9, 3.6179112821932077`*^9, 
  3.617911351723405*^9, 3.617911981549721*^9, 3.6179129695637608`*^9, 
  3.617913203056012*^9, 3.617916504478052*^9, 3.617919764456545*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[DoubleStruckF]", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["\[Tau]", "1"], ",", 
     SubscriptBox["\[Tau]", "2"]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6178380032965117`*^9, 3.617838021503734*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Zeta]", "=", 
   RowBox[{
    SubscriptBox["\[PartialD]", 
     RowBox[{"{", "\[DoubleStruckF]", "}"}]], 
    RowBox[{"Dot", "[", 
     RowBox[{
      RowBox[{
      "\[DoubleStruckCapitalC]\[DoubleStruckCapitalC]", "\[Transpose]"}], ",",
       "F"}], "]"}]}]}], ";", 
  RowBox[{"\[Zeta]", "//", " ", "MatrixForm"}]}]], "Input",
 CellChangeTimes->{{3.6178379644668093`*^9, 3.617838063527277*^9}, {
  3.617838447650663*^9, 3.617838455187949*^9}, {3.617839301151699*^9, 
  3.617839321013214*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox[
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{
          RowBox[{
           SubscriptBox["\[Theta]", "11"], "[", "t", "]"}], "+", 
          RowBox[{
           SubscriptBox["\[Theta]", "12"], "[", "t", "]"}]}], "]"}], " ", 
        RowBox[{"Csc", "[", 
         RowBox[{
          SubscriptBox["\[Theta]", "12"], "[", "t", "]"}], "]"}]}], 
       SubscriptBox["l", "1"]], 
      FractionBox[
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{
          RowBox[{
           SubscriptBox["\[Theta]", "21"], "[", "t", "]"}], "+", 
          RowBox[{
           SubscriptBox["\[Theta]", "22"], "[", "t", "]"}]}], "]"}], " ", 
        RowBox[{"Csc", "[", 
         RowBox[{
          SubscriptBox["\[Theta]", "22"], "[", "t", "]"}], "]"}]}], 
       SubscriptBox["l", "1"]]},
     {
      FractionBox[
       RowBox[{
        RowBox[{"Csc", "[", 
         RowBox[{
          SubscriptBox["\[Theta]", "12"], "[", "t", "]"}], "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{
          RowBox[{
           SubscriptBox["\[Theta]", "11"], "[", "t", "]"}], "+", 
          RowBox[{
           SubscriptBox["\[Theta]", "12"], "[", "t", "]"}]}], "]"}]}], 
       SubscriptBox["l", "1"]], 
      FractionBox[
       RowBox[{
        RowBox[{"Csc", "[", 
         RowBox[{
          SubscriptBox["\[Theta]", "22"], "[", "t", "]"}], "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{
          RowBox[{
           SubscriptBox["\[Theta]", "21"], "[", "t", "]"}], "+", 
          RowBox[{
           SubscriptBox["\[Theta]", "22"], "[", "t", "]"}]}], "]"}]}], 
       SubscriptBox["l", "1"]]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.617837985366659*^9, 3.617837990099608*^9}, {
   3.6178380361204643`*^9, 3.617838064091144*^9}, {3.617838442639111*^9, 
   3.61783845585782*^9}, 3.61783899455589*^9, {3.617839315245336*^9, 
   3.617839321792542*^9}, 3.617843491358246*^9, 3.617843778638029*^9, 
   3.617843924377758*^9, 3.617844114802556*^9, 3.617886970637199*^9, 
   3.61788811988151*^9, 3.617888212459235*^9, 3.617909906517921*^9, 
   3.617910931551478*^9, 3.617911126382455*^9, 3.617911209014699*^9, 
   3.6179112868953447`*^9, 3.6179113567711477`*^9, 3.617911981630718*^9, 
   3.6179129697204027`*^9, 3.617913203104581*^9, 3.617916504529935*^9, 
   3.6179197646689*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[DoubleStruckCapitalM]", " ", "=", " ", 
   RowBox[{"Dot", "[", 
    RowBox[{
     RowBox[{"Inverse", "[", "\[Zeta]", "]"}], ",", 
     RowBox[{
     "\[DoubleStruckCapitalC]\[DoubleStruckCapitalC]", "\[Transpose]"}], ",", 
     "\[DoubleStruckCapitalM]\[DoubleStruckCapitalM]", ",", 
     "\[DoubleStruckCapitalC]\[DoubleStruckCapitalC]"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.617839221765122*^9, 3.617839271555809*^9}, {
   3.617839326750369*^9, 3.6178393399043818`*^9}, 3.617843690552847*^9, 
   3.617843836092884*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"d\[DoubleStruckCapitalC]\[DoubleStruckCapitalC]", " ", "=", " ", 
   RowBox[{"FullSimplify", "@", 
    RowBox[{"Dot", "[", 
     RowBox[{
      RowBox[{
       SubscriptBox["\[PartialD]", 
        RowBox[{"{", "\[DoubleStruckQ]\[DoubleStruckQ]", "}"}]], 
       "\[DoubleStruckCapitalC]\[DoubleStruckCapitalC]"}], ",", " ", 
      "d\[DoubleStruckQ]d\[DoubleStruckP]", ",", 
      "\[DoubleStruckP]\[DoubleStruckP]"}], "]"}]}]}], ";", 
  RowBox[{
  "d\[DoubleStruckCapitalC]\[DoubleStruckCapitalC]", "//", 
   "MatrixForm"}]}]], "Input",
 CellChangeTimes->{{3.617840373628475*^9, 3.617840474141679*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0"},
     {"0", "0"},
     {
      FractionBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"Csc", "[", 
          RowBox[{
           SubscriptBox["\[Theta]", "12"], "[", "t", "]"}], "]"}], "2"], " ", 
        
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{
             SubscriptBox["\[Theta]", "12"], "[", "t", "]"}], "]"}], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{
             RowBox[{
              SubscriptBox["\[Theta]", "11"], "[", "t", "]"}], "+", 
             RowBox[{
              SubscriptBox["\[Theta]", "12"], "[", "t", "]"}]}], "]"}], " ", 
           RowBox[{
            SubscriptBox["\[Omega]", "11"], "[", "t", "]"}]}], "-", 
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{
             SubscriptBox["\[Theta]", "11"], "[", "t", "]"}], "]"}], " ", 
           RowBox[{
            SubscriptBox["\[Omega]", "12"], "[", "t", "]"}]}]}], ")"}]}], 
       SubscriptBox["l", "1"]], 
      FractionBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"Csc", "[", 
          RowBox[{
           SubscriptBox["\[Theta]", "12"], "[", "t", "]"}], "]"}], "2"], " ", 
        
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{
             SubscriptBox["\[Theta]", "12"], "[", "t", "]"}], "]"}], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{
             RowBox[{
              SubscriptBox["\[Theta]", "11"], "[", "t", "]"}], "+", 
             RowBox[{
              SubscriptBox["\[Theta]", "12"], "[", "t", "]"}]}], "]"}], " ", 
           RowBox[{
            SubscriptBox["\[Omega]", "11"], "[", "t", "]"}]}], "-", 
          RowBox[{
           RowBox[{"Sin", "[", 
            RowBox[{
             SubscriptBox["\[Theta]", "11"], "[", "t", "]"}], "]"}], " ", 
           RowBox[{
            SubscriptBox["\[Omega]", "12"], "[", "t", "]"}]}]}], ")"}]}], 
       SubscriptBox["l", "1"]]},
     {
      FractionBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"Csc", "[", 
          RowBox[{
           SubscriptBox["\[Theta]", "12"], "[", "t", "]"}], "]"}], "2"], " ", 
        
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"Cos", "[", 
             RowBox[{
              RowBox[{
               SubscriptBox["\[Theta]", "11"], "[", "t", "]"}], "+", 
              RowBox[{
               SubscriptBox["\[Theta]", "12"], "[", "t", "]"}]}], "]"}]}], 
           " ", 
           RowBox[{
            SubscriptBox["\[Omega]", "11"], "[", "t", "]"}]}], "+", 
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{
             SubscriptBox["\[Theta]", "11"], "[", "t", "]"}], "]"}], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{
             SubscriptBox["\[Theta]", "12"], "[", "t", "]"}], "]"}], " ", 
           RowBox[{
            SubscriptBox["\[Omega]", "12"], "[", "t", "]"}]}]}], ")"}]}], 
       SubscriptBox["l", "2"]], 
      FractionBox[
       RowBox[{
        RowBox[{"Csc", "[", 
         RowBox[{
          SubscriptBox["\[Theta]", "12"], "[", "t", "]"}], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"Cos", "[", 
             RowBox[{
              SubscriptBox["\[Theta]", "11"], "[", "t", "]"}], "]"}]}], " ", 
           RowBox[{
            SubscriptBox["\[Omega]", "11"], "[", "t", "]"}]}], "+", 
          RowBox[{
           RowBox[{"Cot", "[", 
            RowBox[{
             SubscriptBox["\[Theta]", "12"], "[", "t", "]"}], "]"}], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{
             SubscriptBox["\[Theta]", "11"], "[", "t", "]"}], "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{
               SubscriptBox["\[Omega]", "11"], "[", "t", "]"}]}], "+", 
             RowBox[{
              SubscriptBox["\[Omega]", "12"], "[", "t", "]"}]}], ")"}]}]}], 
         ")"}]}], 
       SubscriptBox["l", "2"]]},
     {"0", "0"},
     {
      FractionBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"Csc", "[", 
          RowBox[{
           SubscriptBox["\[Theta]", "12"], "[", "t", "]"}], "]"}], "2"], " ", 
        
        SubscriptBox["l", "g1"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{
             SubscriptBox["\[Theta]", "12"], "[", "t", "]"}], "]"}], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{
             RowBox[{
              SubscriptBox["\[Theta]", "11"], "[", "t", "]"}], "+", 
             RowBox[{
              SubscriptBox["\[Theta]", "12"], "[", "t", "]"}]}], "]"}], " ", 
           RowBox[{
            SubscriptBox["\[Omega]", "11"], "[", "t", "]"}]}], "-", 
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{
             SubscriptBox["\[Theta]", "11"], "[", "t", "]"}], "]"}], " ", 
           RowBox[{
            SubscriptBox["\[Omega]", "12"], "[", "t", "]"}]}]}], ")"}]}], 
       SubscriptBox["l", "1"]], 
      FractionBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"Csc", "[", 
          RowBox[{
           SubscriptBox["\[Theta]", "12"], "[", "t", "]"}], "]"}], "2"], " ", 
        
        SubscriptBox["l", "g1"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{
             SubscriptBox["\[Theta]", "12"], "[", "t", "]"}], "]"}], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{
             RowBox[{
              SubscriptBox["\[Theta]", "11"], "[", "t", "]"}], "+", 
             RowBox[{
              SubscriptBox["\[Theta]", "12"], "[", "t", "]"}]}], "]"}], " ", 
           RowBox[{
            SubscriptBox["\[Omega]", "11"], "[", "t", "]"}]}], "-", 
          RowBox[{
           RowBox[{"Sin", "[", 
            RowBox[{
             SubscriptBox["\[Theta]", "11"], "[", "t", "]"}], "]"}], " ", 
           RowBox[{
            SubscriptBox["\[Omega]", "12"], "[", "t", "]"}]}]}], ")"}]}], 
       SubscriptBox["l", "1"]]},
     {
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Sin", "[", 
         RowBox[{
          RowBox[{
           SubscriptBox["\[Theta]", "11"], "[", "t", "]"}], "+", 
          RowBox[{
           SubscriptBox["\[Theta]", "12"], "[", "t", "]"}]}], "]"}]}], " ", 
       RowBox[{
        SubscriptBox["\[Omega]", "12"], "[", "t", "]"}]}], 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{
         RowBox[{
          SubscriptBox["\[Theta]", "11"], "[", "t", "]"}], "+", 
         RowBox[{
          SubscriptBox["\[Theta]", "12"], "[", "t", "]"}]}], "]"}], " ", 
       RowBox[{
        SubscriptBox["\[Omega]", "12"], "[", "t", "]"}]}]},
     {
      FractionBox[
       RowBox[{
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{
           RowBox[{
            SubscriptBox["\[Theta]", "11"], "[", "t", "]"}], "+", 
           RowBox[{
            SubscriptBox["\[Theta]", "12"], "[", "t", "]"}]}], "]"}], " ", 
         SuperscriptBox[
          RowBox[{"Csc", "[", 
           RowBox[{
            SubscriptBox["\[Theta]", "12"], "[", "t", "]"}], "]"}], "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["l", "2"], "-", 
           SubscriptBox["l", "g2"]}], ")"}], " ", 
         RowBox[{
          SubscriptBox["\[Omega]", "11"], "[", "t", "]"}]}], "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"Cos", "[", 
                RowBox[{
                 RowBox[{
                  SubscriptBox["\[Theta]", "11"], "[", "t", "]"}], "+", 
                 RowBox[{
                  SubscriptBox["\[Theta]", "12"], "[", "t", "]"}]}], "]"}], 
               " ", 
               SuperscriptBox[
                RowBox[{"Csc", "[", 
                 RowBox[{
                  SubscriptBox["\[Theta]", "12"], "[", "t", "]"}], "]"}], 
                "2"]}], "+", 
              RowBox[{
               RowBox[{"Cot", "[", 
                RowBox[{
                 SubscriptBox["\[Theta]", "12"], "[", "t", "]"}], "]"}], " ", 
               
               RowBox[{"Sin", "[", 
                RowBox[{
                 RowBox[{
                  SubscriptBox["\[Theta]", "11"], "[", "t", "]"}], "+", 
                 RowBox[{
                  SubscriptBox["\[Theta]", "12"], "[", "t", "]"}]}], 
                "]"}]}]}], ")"}], " ", 
            SubscriptBox["l", "2"]}], "-", 
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{
              SubscriptBox["\[Theta]", "11"], "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Cot", "[", 
             RowBox[{
              SubscriptBox["\[Theta]", "12"], "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Csc", "[", 
             RowBox[{
              SubscriptBox["\[Theta]", "12"], "[", "t", "]"}], "]"}], " ", 
            SubscriptBox["l", "g2"]}]}], ")"}], " ", 
         RowBox[{
          SubscriptBox["\[Omega]", "12"], "[", "t", "]"}]}]}], 
       SubscriptBox["l", "2"]], 
      FractionBox[
       RowBox[{
        RowBox[{
         SuperscriptBox[
          RowBox[{"Csc", "[", 
           RowBox[{
            SubscriptBox["\[Theta]", "12"], "[", "t", "]"}], "]"}], "2"], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{
           RowBox[{
            SubscriptBox["\[Theta]", "11"], "[", "t", "]"}], "+", 
           RowBox[{
            SubscriptBox["\[Theta]", "12"], "[", "t", "]"}]}], "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["l", "2"], "-", 
           SubscriptBox["l", "g2"]}], ")"}], " ", 
         RowBox[{
          SubscriptBox["\[Omega]", "11"], "[", "t", "]"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"Cos", "[", 
                RowBox[{
                 RowBox[{
                  SubscriptBox["\[Theta]", "11"], "[", "t", "]"}], "+", 
                 RowBox[{
                  SubscriptBox["\[Theta]", "12"], "[", "t", "]"}]}], "]"}], 
               " ", 
               RowBox[{"Cot", "[", 
                RowBox[{
                 SubscriptBox["\[Theta]", "12"], "[", "t", "]"}], "]"}]}], 
              "-", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"Csc", "[", 
                 RowBox[{
                  SubscriptBox["\[Theta]", "12"], "[", "t", "]"}], "]"}], 
                "2"], " ", 
               RowBox[{"Sin", "[", 
                RowBox[{
                 RowBox[{
                  SubscriptBox["\[Theta]", "11"], "[", "t", "]"}], "+", 
                 RowBox[{
                  SubscriptBox["\[Theta]", "12"], "[", "t", "]"}]}], 
                "]"}]}]}], ")"}], " ", 
            SubscriptBox["l", "2"]}], "+", 
           RowBox[{
            RowBox[{"Cot", "[", 
             RowBox[{
              SubscriptBox["\[Theta]", "12"], "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Csc", "[", 
             RowBox[{
              SubscriptBox["\[Theta]", "12"], "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{
              SubscriptBox["\[Theta]", "11"], "[", "t", "]"}], "]"}], " ", 
            SubscriptBox["l", "g2"]}]}], ")"}], " ", 
         RowBox[{
          SubscriptBox["\[Omega]", "12"], "[", "t", "]"}]}]}], 
       SubscriptBox["l", "2"]]},
     {
      FractionBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"Csc", "[", 
          RowBox[{
           SubscriptBox["\[Theta]", "22"], "[", "t", "]"}], "]"}], "2"], " ", 
        
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{
             SubscriptBox["\[Theta]", "22"], "[", "t", "]"}], "]"}], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{
             RowBox[{
              SubscriptBox["\[Theta]", "21"], "[", "t", "]"}], "+", 
             RowBox[{
              SubscriptBox["\[Theta]", "22"], "[", "t", "]"}]}], "]"}], " ", 
           RowBox[{
            SubscriptBox["\[Omega]", "21"], "[", "t", "]"}]}], "-", 
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{
             SubscriptBox["\[Theta]", "21"], "[", "t", "]"}], "]"}], " ", 
           RowBox[{
            SubscriptBox["\[Omega]", "22"], "[", "t", "]"}]}]}], ")"}]}], 
       SubscriptBox["l", "1"]], 
      FractionBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"Csc", "[", 
          RowBox[{
           SubscriptBox["\[Theta]", "22"], "[", "t", "]"}], "]"}], "2"], " ", 
        
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{
             SubscriptBox["\[Theta]", "22"], "[", "t", "]"}], "]"}], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{
             RowBox[{
              SubscriptBox["\[Theta]", "21"], "[", "t", "]"}], "+", 
             RowBox[{
              SubscriptBox["\[Theta]", "22"], "[", "t", "]"}]}], "]"}], " ", 
           RowBox[{
            SubscriptBox["\[Omega]", "21"], "[", "t", "]"}]}], "-", 
          RowBox[{
           RowBox[{"Sin", "[", 
            RowBox[{
             SubscriptBox["\[Theta]", "21"], "[", "t", "]"}], "]"}], " ", 
           RowBox[{
            SubscriptBox["\[Omega]", "22"], "[", "t", "]"}]}]}], ")"}]}], 
       SubscriptBox["l", "1"]]},
     {
      FractionBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"Csc", "[", 
          RowBox[{
           SubscriptBox["\[Theta]", "22"], "[", "t", "]"}], "]"}], "2"], " ", 
        
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"Cos", "[", 
             RowBox[{
              RowBox[{
               SubscriptBox["\[Theta]", "21"], "[", "t", "]"}], "+", 
              RowBox[{
               SubscriptBox["\[Theta]", "22"], "[", "t", "]"}]}], "]"}]}], 
           " ", 
           RowBox[{
            SubscriptBox["\[Omega]", "21"], "[", "t", "]"}]}], "+", 
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{
             SubscriptBox["\[Theta]", "21"], "[", "t", "]"}], "]"}], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{
             SubscriptBox["\[Theta]", "22"], "[", "t", "]"}], "]"}], " ", 
           RowBox[{
            SubscriptBox["\[Omega]", "22"], "[", "t", "]"}]}]}], ")"}]}], 
       SubscriptBox["l", "2"]], 
      FractionBox[
       RowBox[{
        RowBox[{"Csc", "[", 
         RowBox[{
          SubscriptBox["\[Theta]", "22"], "[", "t", "]"}], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"Cos", "[", 
             RowBox[{
              SubscriptBox["\[Theta]", "21"], "[", "t", "]"}], "]"}]}], " ", 
           RowBox[{
            SubscriptBox["\[Omega]", "21"], "[", "t", "]"}]}], "+", 
          RowBox[{
           RowBox[{"Cot", "[", 
            RowBox[{
             SubscriptBox["\[Theta]", "22"], "[", "t", "]"}], "]"}], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{
             SubscriptBox["\[Theta]", "21"], "[", "t", "]"}], "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{
               SubscriptBox["\[Omega]", "21"], "[", "t", "]"}]}], "+", 
             RowBox[{
              SubscriptBox["\[Omega]", "22"], "[", "t", "]"}]}], ")"}]}]}], 
         ")"}]}], 
       SubscriptBox["l", "2"]]},
     {"0", "0"},
     {
      FractionBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"Csc", "[", 
          RowBox[{
           SubscriptBox["\[Theta]", "22"], "[", "t", "]"}], "]"}], "2"], " ", 
        
        SubscriptBox["l", "g1"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{
             SubscriptBox["\[Theta]", "22"], "[", "t", "]"}], "]"}], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{
             RowBox[{
              SubscriptBox["\[Theta]", "21"], "[", "t", "]"}], "+", 
             RowBox[{
              SubscriptBox["\[Theta]", "22"], "[", "t", "]"}]}], "]"}], " ", 
           RowBox[{
            SubscriptBox["\[Omega]", "21"], "[", "t", "]"}]}], "-", 
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{
             SubscriptBox["\[Theta]", "21"], "[", "t", "]"}], "]"}], " ", 
           RowBox[{
            SubscriptBox["\[Omega]", "22"], "[", "t", "]"}]}]}], ")"}]}], 
       SubscriptBox["l", "1"]], 
      FractionBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"Csc", "[", 
          RowBox[{
           SubscriptBox["\[Theta]", "22"], "[", "t", "]"}], "]"}], "2"], " ", 
        
        SubscriptBox["l", "g1"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{
             SubscriptBox["\[Theta]", "22"], "[", "t", "]"}], "]"}], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{
             RowBox[{
              SubscriptBox["\[Theta]", "21"], "[", "t", "]"}], "+", 
             RowBox[{
              SubscriptBox["\[Theta]", "22"], "[", "t", "]"}]}], "]"}], " ", 
           RowBox[{
            SubscriptBox["\[Omega]", "21"], "[", "t", "]"}]}], "-", 
          RowBox[{
           RowBox[{"Sin", "[", 
            RowBox[{
             SubscriptBox["\[Theta]", "21"], "[", "t", "]"}], "]"}], " ", 
           RowBox[{
            SubscriptBox["\[Omega]", "22"], "[", "t", "]"}]}]}], ")"}]}], 
       SubscriptBox["l", "1"]]},
     {
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Sin", "[", 
         RowBox[{
          RowBox[{
           SubscriptBox["\[Theta]", "21"], "[", "t", "]"}], "+", 
          RowBox[{
           SubscriptBox["\[Theta]", "22"], "[", "t", "]"}]}], "]"}]}], " ", 
       RowBox[{
        SubscriptBox["\[Omega]", "22"], "[", "t", "]"}]}], 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{
         RowBox[{
          SubscriptBox["\[Theta]", "21"], "[", "t", "]"}], "+", 
         RowBox[{
          SubscriptBox["\[Theta]", "22"], "[", "t", "]"}]}], "]"}], " ", 
       RowBox[{
        SubscriptBox["\[Omega]", "22"], "[", "t", "]"}]}]},
     {
      FractionBox[
       RowBox[{
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{
           RowBox[{
            SubscriptBox["\[Theta]", "21"], "[", "t", "]"}], "+", 
           RowBox[{
            SubscriptBox["\[Theta]", "22"], "[", "t", "]"}]}], "]"}], " ", 
         SuperscriptBox[
          RowBox[{"Csc", "[", 
           RowBox[{
            SubscriptBox["\[Theta]", "22"], "[", "t", "]"}], "]"}], "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["l", "2"], "-", 
           SubscriptBox["l", "g2"]}], ")"}], " ", 
         RowBox[{
          SubscriptBox["\[Omega]", "21"], "[", "t", "]"}]}], "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"Cos", "[", 
                RowBox[{
                 RowBox[{
                  SubscriptBox["\[Theta]", "21"], "[", "t", "]"}], "+", 
                 RowBox[{
                  SubscriptBox["\[Theta]", "22"], "[", "t", "]"}]}], "]"}], 
               " ", 
               SuperscriptBox[
                RowBox[{"Csc", "[", 
                 RowBox[{
                  SubscriptBox["\[Theta]", "22"], "[", "t", "]"}], "]"}], 
                "2"]}], "+", 
              RowBox[{
               RowBox[{"Cot", "[", 
                RowBox[{
                 SubscriptBox["\[Theta]", "22"], "[", "t", "]"}], "]"}], " ", 
               
               RowBox[{"Sin", "[", 
                RowBox[{
                 RowBox[{
                  SubscriptBox["\[Theta]", "21"], "[", "t", "]"}], "+", 
                 RowBox[{
                  SubscriptBox["\[Theta]", "22"], "[", "t", "]"}]}], 
                "]"}]}]}], ")"}], " ", 
            SubscriptBox["l", "2"]}], "-", 
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{
              SubscriptBox["\[Theta]", "21"], "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Cot", "[", 
             RowBox[{
              SubscriptBox["\[Theta]", "22"], "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Csc", "[", 
             RowBox[{
              SubscriptBox["\[Theta]", "22"], "[", "t", "]"}], "]"}], " ", 
            SubscriptBox["l", "g2"]}]}], ")"}], " ", 
         RowBox[{
          SubscriptBox["\[Omega]", "22"], "[", "t", "]"}]}]}], 
       SubscriptBox["l", "2"]], 
      FractionBox[
       RowBox[{
        RowBox[{
         SuperscriptBox[
          RowBox[{"Csc", "[", 
           RowBox[{
            SubscriptBox["\[Theta]", "22"], "[", "t", "]"}], "]"}], "2"], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{
           RowBox[{
            SubscriptBox["\[Theta]", "21"], "[", "t", "]"}], "+", 
           RowBox[{
            SubscriptBox["\[Theta]", "22"], "[", "t", "]"}]}], "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["l", "2"], "-", 
           SubscriptBox["l", "g2"]}], ")"}], " ", 
         RowBox[{
          SubscriptBox["\[Omega]", "21"], "[", "t", "]"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"Cos", "[", 
                RowBox[{
                 RowBox[{
                  SubscriptBox["\[Theta]", "21"], "[", "t", "]"}], "+", 
                 RowBox[{
                  SubscriptBox["\[Theta]", "22"], "[", "t", "]"}]}], "]"}], 
               " ", 
               RowBox[{"Cot", "[", 
                RowBox[{
                 SubscriptBox["\[Theta]", "22"], "[", "t", "]"}], "]"}]}], 
              "-", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"Csc", "[", 
                 RowBox[{
                  SubscriptBox["\[Theta]", "22"], "[", "t", "]"}], "]"}], 
                "2"], " ", 
               RowBox[{"Sin", "[", 
                RowBox[{
                 RowBox[{
                  SubscriptBox["\[Theta]", "21"], "[", "t", "]"}], "+", 
                 RowBox[{
                  SubscriptBox["\[Theta]", "22"], "[", "t", "]"}]}], 
                "]"}]}]}], ")"}], " ", 
            SubscriptBox["l", "2"]}], "+", 
           RowBox[{
            RowBox[{"Cot", "[", 
             RowBox[{
              SubscriptBox["\[Theta]", "22"], "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Csc", "[", 
             RowBox[{
              SubscriptBox["\[Theta]", "22"], "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{
              SubscriptBox["\[Theta]", "21"], "[", "t", "]"}], "]"}], " ", 
            SubscriptBox["l", "g2"]}]}], ")"}], " ", 
         RowBox[{
          SubscriptBox["\[Omega]", "22"], "[", "t", "]"}]}]}], 
       SubscriptBox["l", "2"]]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.617840482047768*^9, 3.617843786595186*^9, 
  3.617843932066906*^9, 3.61784412237008*^9, 3.617886978186729*^9, 
  3.6178881277394333`*^9, 3.6178882198484087`*^9, 3.617909913734522*^9, 
  3.617910942517561*^9, 3.617911988944723*^9, 3.6179129772206*^9, 
  3.617913210610619*^9, 3.617916511857724*^9, 3.6179197828266478`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[DoubleStruckCapitalV]", " ", "=", " ", 
   RowBox[{"Dot", "[", 
    RowBox[{
     RowBox[{"Inverse", "[", "\[Zeta]", "]"}], ",", 
     RowBox[{
     "\[DoubleStruckCapitalC]\[DoubleStruckCapitalC]", "\[Transpose]"}], ",", 
     "\[DoubleStruckCapitalM]\[DoubleStruckCapitalM]", ",", 
     "d\[DoubleStruckCapitalC]\[DoubleStruckCapitalC]", ",", " ", 
     SubscriptBox["\[DoubleStruckP]", "\[NumberSign]"]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.617840503748234*^9, 3.617840547471286*^9}, 
   3.617841458624742*^9, 3.617843707303276*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[DoubleStruckCapitalG]", " ", "=", " ", 
   RowBox[{"Dot", "[", 
    RowBox[{
     RowBox[{"Inverse", "[", "\[Zeta]", "]"}], ",", 
     RowBox[{
     "\[DoubleStruckCapitalC]\[DoubleStruckCapitalC]", "\[Transpose]"}], ",", 
     "\[DoubleStruckCapitalG]\[DoubleStruckCapitalG]"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.617841484641721*^9, 3.6178415176967983`*^9}, {
  3.617843701738867*^9, 3.6178437038097687`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"CONTROLDATA", " ", "=", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Kp", "\[Rule]", " ", "100"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Kv", "\[Rule]", " ", "20"}], ",", "\[IndentingNewLine]", 
     RowBox[{"\[Lambda]", "\[Rule]", "10"}], ",", "\[IndentingNewLine]", 
     RowBox[{"k", "\[Rule]", "0.25"}]}], "\[IndentingNewLine]", "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.617842328553433*^9, 3.617842352258148*^9}, {
   3.61788799827986*^9, 3.617888019471835*^9}, 3.6178881925355043`*^9, {
   3.6178882843832493`*^9, 3.6178882845342827`*^9}, {3.617888391686145*^9, 
   3.6178883951330767`*^9}, {3.617888425925652*^9, 3.617888430293139*^9}, {
   3.617888771011344*^9, 3.6178888176988983`*^9}, 3.617889225760754*^9, {
   3.617889524086699*^9, 3.617889524429969*^9}, {3.6178917309758053`*^9, 
   3.617891778718605*^9}, {3.617891810278914*^9, 3.61789186002225*^9}, {
   3.617892017522747*^9, 3.61789202172511*^9}, 3.6178921484832373`*^9, 
   3.6178935076515207`*^9, 3.617893609210992*^9, 3.617893708570651*^9, 
   3.6178983460741587`*^9, 3.6178990181668377`*^9, {3.617899050476902*^9, 
   3.617899051405442*^9}, {3.617899095749852*^9, 3.617899151831728*^9}, {
   3.61789928857299*^9, 3.617899292579266*^9}, {3.617899612836433*^9, 
   3.6178996130341387`*^9}, 3.617899765537483*^9, {3.617900686059495*^9, 
   3.617900690147303*^9}, 3.617900746923253*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Rho]", " ", "=", " ", "0.06"}], ";"}]], "Input",
 CellChangeTimes->{
  3.617911101370721*^9, 3.617911195458343*^9, 3.6179112699217854`*^9, 
   3.6179113398009167`*^9, 3.617911827461466*^9, 3.6179119039490547`*^9, 
   3.6179120997074423`*^9, {3.617912149946718*^9, 3.617912150826146*^9}, 
   3.617912191226694*^9, 3.617912227354808*^9, 3.617912263954681*^9, 
   3.617912299818103*^9, {3.617912341257959*^9, 3.617912369138051*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"r", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Rho]", " ", 
      RowBox[{"Cos", "[", "t", "]"}]}], ",", 
     RowBox[{"0.30776835371752537", "+", 
      RowBox[{"\[Rho]", " ", 
       RowBox[{"Sin", "[", "t", "]"}]}]}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dr", " ", "=", " ", 
   RowBox[{
    SubscriptBox["\[PartialD]", "t"], "r"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"d2r", " ", "=", " ", 
   RowBox[{
    SubscriptBox["\[PartialD]", "t"], "dr"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.617841783019849*^9, 3.617841900821035*^9}, {
   3.6178426712446136`*^9, 3.617842673147531*^9}, 3.617843413275024*^9, 
   3.6178439035100107`*^9, {3.6179106388269453`*^9, 3.617910677345655*^9}, {
   3.617911951905217*^9, 3.617911954882059*^9}, {3.617913153832985*^9, 
   3.617913180133418*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"\[DoubleStruckF]Control", " ", "=", " ", 
     RowBox[{"\[DoubleStruckCapitalV]", "+", "\[DoubleStruckCapitalG]", "+", 
      RowBox[{"Dot", "[", 
       RowBox[{"\[DoubleStruckCapitalM]", ",", " ", 
        RowBox[{"d2r", " ", "+", " ", 
         RowBox[{"Kv", " ", 
          RowBox[{"(", 
           RowBox[{"dr", " ", "-", " ", 
            SubscriptBox["\[DoubleStruckP]", "\[NumberSign]"]}], ")"}]}], "+",
          " ", 
         RowBox[{"Kp", 
          RowBox[{"(", 
           RowBox[{"r", "-", 
            SubscriptBox["\[DoubleStruckQ]", "\[NumberSign]"]}], ")"}]}]}]}], 
       "]"}]}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"\[DoubleStruckF]Control", " ", "=", " ", 
     RowBox[{"\[DoubleStruckCapitalV]", "+", "\[DoubleStruckCapitalG]", "+", 
      RowBox[{"Dot", "[", 
       RowBox[{"\[DoubleStruckCapitalM]", ",", " ", 
        RowBox[{"d2r", " ", "+", " ", 
         RowBox[{"\[Lambda]", 
          RowBox[{"(", 
           RowBox[{"dr", " ", "-", " ", 
            SubscriptBox["\[DoubleStruckP]", "\[NumberSign]"]}], ")"}]}], "+", 
         RowBox[{"k", " ", 
          RowBox[{"ArcTan", "[", 
           RowBox[{"1000", " ", "31.82", 
            RowBox[{"(", 
             RowBox[{"dr", " ", "-", " ", 
              SubscriptBox["\[DoubleStruckP]", "\[NumberSign]"], "+", " ", 
              RowBox[{"\[Lambda]", 
               RowBox[{"(", 
                RowBox[{"r", "-", 
                 SubscriptBox["\[DoubleStruckQ]", "\[NumberSign]"]}], 
                ")"}]}]}], ")"}]}], "]"}]}]}]}], "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         SubscriptBox["subs\[DoubleStruckF]Control", "#"], "=", 
         RowBox[{
          RowBox[{
          "\[DoubleStruckF]", "\[LeftDoubleBracket]", "#", 
           "\[RightDoubleBracket]"}], "\[Rule]", " ", 
          RowBox[{
          "\[DoubleStruckF]Control", "\[LeftDoubleBracket]", "#", 
           "\[RightDoubleBracket]"}]}]}], ";"}], ")"}], "&"}], "/@", 
     RowBox[{"Range", "[", "\[DoubleStruckN]", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"SUBS\[DoubleStruckF]Control", "  ", "=", 
     RowBox[{"Flatten", "[", 
      RowBox[{
       RowBox[{
        SubscriptBox["subs\[DoubleStruckF]Control", "#"], "&"}], "/@", 
       RowBox[{"Range", "[", "\[DoubleStruckN]", "]"}]}], "]"}]}], ";"}], 
   " "}]}]], "Input",
 CellChangeTimes->{{3.617841717461255*^9, 3.617841779674158*^9}, {
   3.617841915027452*^9, 3.617842018054742*^9}, {3.61784207537433*^9, 
   3.617842100253758*^9}, {3.617842131467868*^9, 3.6178422713933287`*^9}, {
   3.617888044347271*^9, 3.617888097888297*^9}, {3.617888265535357*^9, 
   3.617888276696184*^9}, {3.617888334998686*^9, 3.6178883392871113`*^9}, {
   3.617888383038369*^9, 3.61788838464648*^9}, {3.617888443055131*^9, 
   3.6178884522939177`*^9}, {3.617888528398632*^9, 3.6178885496487293`*^9}, {
   3.6178885986624613`*^9, 3.617888626572585*^9}, {3.617888727413267*^9, 
   3.617888738542446*^9}, {3.61788883477404*^9, 3.617888875022221*^9}, {
   3.617889034267021*^9, 3.617889038734316*^9}, {3.617889213421822*^9, 
   3.617889215672626*^9}, {3.6178895060009127`*^9, 3.617889516343157*^9}, {
   3.617889558922*^9, 3.617889562449603*^9}, {3.617890603543186*^9, 
   3.6178906158705587`*^9}, {3.617891677187068*^9, 3.617891684678607*^9}, {
   3.617892438708452*^9, 3.6178924487372293`*^9}, {3.617892528086149*^9, 
   3.6178925970504217`*^9}, {3.6178926447943087`*^9, 3.617892657842848*^9}, {
   3.617892699896647*^9, 3.617892721789331*^9}, {3.6178989429985437`*^9, 
   3.617898970639106*^9}, {3.6178995461543427`*^9, 3.617899547123426*^9}, {
   3.6178995816285753`*^9, 3.617899581805751*^9}, 3.617900254992322*^9, 
   3.6179003152642193`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Sola", " ", "=", 
   RowBox[{"NDSolve", "[", " ", 
    RowBox[{
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"Eq", "/.", "SUBS\[DoubleStruckF]Control"}], ")"}], "//.", 
          "SDATA2"}], ")"}], "/.", "CONTROLDATA"}], ",", "CI"}], "]"}], ",", 
     RowBox[{"Join", "[", 
      RowBox[{
      "\[DoubleStruckQ]\[DoubleStruckQ]", ",", "\[DoubleStruckCapitalP]"}], 
      "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "20"}], "}"}], ",", 
     RowBox[{"Method", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<EquationSimplification\>\"", "\[Rule]", "\"\<Residual\>\""}], 
       "}"}]}], ",", 
     RowBox[{"MaxSteps", "->", "Infinity"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6178425190269003`*^9, 3.617842554612741*^9}, {
   3.617842613629471*^9, 3.617842613818651*^9}, {3.617843018666497*^9, 
   3.6178430759461517`*^9}, {3.617843109839944*^9, 3.6178431126342583`*^9}, {
   3.617843144724525*^9, 3.617843192558037*^9}, {3.6178432249348917`*^9, 
   3.61784325427219*^9}, 3.617843976899311*^9, {3.61788941897815*^9, 
   3.617889420866338*^9}, {3.617889477554462*^9, 3.617889493202544*^9}, 
   3.6178902540443*^9, {3.617891622659649*^9, 3.617891625645105*^9}, 
   3.617891924978361*^9, {3.617892299635981*^9, 3.6178923001207533`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SubscriptBox["y", "pp"], "[", "t", "]"}], "/.", "Sola"}], ")"}], "]"}],
    ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "20"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.617842596998227*^9, 3.617842619882908*^9}, {
   3.6178427716099863`*^9, 3.617842856425255*^9}, 3.617843978823119*^9, {
   3.61789223865974*^9, 3.617892239836966*^9}, {3.617892382108595*^9, 
   3.6178923822915993`*^9}, 3.617892609762932*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
uVA0oj45P8/AhUEj+kMMLvwP0ySTlg==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.245},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.617842606250901*^9, 3.617842620258985*^9}, 
   3.6178426944026623`*^9, {3.617842776284556*^9, 3.6178428570817547`*^9}, 
   3.6178430912382183`*^9, 3.6178431979639177`*^9, {3.617843231953327*^9, 
   3.617843258953211*^9}, 3.617843788229117*^9, 3.617843933607616*^9, 
   3.6178439908884172`*^9, 3.6178441240778723`*^9, 3.6178869798517303`*^9, 
   3.617888129271832*^9, 3.617888221221815*^9, {3.617888325480111*^9, 
   3.61788834821522*^9}, {3.617888403942849*^9, 3.617888457138618*^9}, 
   3.617888559869843*^9, {3.6178886075892267`*^9, 3.617888634109414*^9}, 
   3.617888745452138*^9, {3.6178887959319143`*^9, 3.617888850347973*^9}, 
   3.617889043600419*^9, {3.617889472083839*^9, 3.617889497372725*^9}, 
   3.617889542134882*^9, 3.6178895743348618`*^9, 3.617890623232545*^9, 
   3.617891644687533*^9, 3.617891702544529*^9, 3.61789175786449*^9, {
   3.617891789615486*^9, 3.6178918658010406`*^9}, 3.617892006543268*^9, 
   3.6178920859542007`*^9, {3.617892231701273*^9, 3.617892240255817*^9}, {
   3.617892378168675*^9, 3.617892382578094*^9}, 3.617892454856769*^9, {
   3.6178925865889177`*^9, 3.617892610050077*^9}, {3.617892648873213*^9, 
   3.617892666165147*^9}, 3.6178927929131117`*^9, 3.6178935890797777`*^9, 
   3.617893685712768*^9, {3.617898331166938*^9, 3.617898333490139*^9}, 
   3.617898564767428*^9, 3.6178989849802027`*^9, 3.617899023503656*^9, 
   3.6178990577348137`*^9, {3.61789910283962*^9, 3.61789915916661*^9}, 
   3.6178993002643747`*^9, {3.617899554561151*^9, 3.617899586218957*^9}, {
   3.617899623811281*^9, 3.61789962741362*^9}, 3.617899770732484*^9, 
   3.617900259268608*^9, 3.61790031866017*^9, {3.617900696117426*^9, 
   3.6179006992317867`*^9}, 3.617900752788136*^9, 3.617909914332858*^9, 
   3.617910695387566*^9, 3.617910745096896*^9, 3.6179108097242517`*^9, 
   3.617910962245875*^9, 3.617911156694766*^9, 3.6179112252181253`*^9, 
   3.6179113046048*^9, 3.617911989542223*^9, 3.617912112296122*^9, {
   3.617912160571719*^9, 3.617912162485139*^9}, 3.617912199913783*^9, 
   3.6179122361615667`*^9, 3.617912272620612*^9, 3.617912306697901*^9, {
   3.6179123521806*^9, 3.617912379920163*^9}, 3.617912978313287*^9, 
   3.617913211516572*^9, 3.61791651266038*^9, 3.6179197873645353`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SubscriptBox["y", "pp"], "[", "t", "]"}], "-", 
         RowBox[{
         "r", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], ")"}],
        "//.", "SDATA2"}], "/.", "Sola"}], ")"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "0.8"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6178992269668427`*^9, 3.617899262390058*^9}, {
  3.6179003525524*^9, 3.617900396992805*^9}, {3.617900478376081*^9, 
  3.6179005358552513`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
geB+kWu3542LcD4lnUlpaVzXBV/gb2D+D5EM/Mo=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.6178992427819233`*^9, 3.617899262742525*^9}, 
   3.617899302878821*^9, 3.6178995882768373`*^9, 3.617899629560194*^9, 
   3.617899772466909*^9, 3.6179002619994593`*^9, 3.617900321937532*^9, {
   3.617900356014792*^9, 3.617900399296907*^9}, {3.61790047909039*^9, 
   3.617900536199458*^9}, 3.617900700895266*^9, 3.617900754143838*^9, 
   3.617909914398831*^9, 3.617910698130908*^9, 3.61791074733937*^9, 
   3.617910813100045*^9, 3.617910964826359*^9, 3.617911159182665*^9, 
   3.617911234337616*^9, 3.617911306941045*^9, 3.617911989562742*^9, 
   3.617912114391136*^9, 3.6179121646758947`*^9, 3.617912203015504*^9, 
   3.617912238429405*^9, 3.617912274674404*^9, 3.617912308742345*^9, 
   3.617912978331974*^9, 3.617913211535884*^9, 3.617916512674275*^9, 
   3.617919787609928*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"(", "  ", 
         RowBox[{
          RowBox[{
           SubscriptBox["dy", "pp"], "[", "t", "]"}], "-", 
          RowBox[{
          "dr", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], " ", 
          "+", " ", 
          RowBox[{"\[Lambda]", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              SubscriptBox["y", "pp"], "[", "t", "]"}], "-", 
             RowBox[{
             "r", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
            ")"}]}]}], ")"}], "//.", "SDATA2"}], "/.", "Sola"}], "/.", 
      "CONTROLDATA"}], ")"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "0.2"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.617900027154396*^9, 3.617900122945797*^9}, {
   3.617900278762897*^9, 3.617900283954597*^9}, 3.617910756987359*^9, 
   3.617911240879319*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
lR4fPkB9cmgW+h9hFSZe
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.6179000633712683`*^9, 3.617900123315365*^9}, {
   3.617900264375243*^9, 3.6179002845473747`*^9}, 3.617900324370853*^9, 
   3.617900541912137*^9, 3.6179007031657467`*^9, 3.617900755894877*^9, 
   3.617909914444001*^9, 3.617910700335492*^9, {3.617910749664027*^9, 
   3.617910757319615*^9}, 3.6179108154547567`*^9, 3.6179109671499033`*^9, 
   3.617911161796488*^9, {3.617911236734573*^9, 3.617911241925873*^9}, 
   3.6179113093557167`*^9, 3.617911989597662*^9, 3.6179121165746326`*^9, 
   3.617912167118301*^9, 3.617912205301827*^9, 3.617912240501646*^9, 
   3.617912276429285*^9, 3.617912310695917*^9, 3.617912978361165*^9, 
   3.617913211563483*^9, 3.61791651269283*^9, 3.6179197876654673`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{
      SubscriptBox["x", "pp"], "[", "t", "]"}], "/.", "Sola"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "20"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{3.61784271826549*^9, 3.617843980648651*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1:eJwVWnk4VV8bNWXKFJmHuGTmckkj+y1jJVGRJJkphaQoRCmFSGXILPN17z3K
UPipHUkoKjSYUokkM5UkvvP95VmPvfc7rLW3d52HknvAPi8ONja2DE42tv//
zL7gzq3vmWmSKHblh10NgXKcxrccVDyHrNoL+LRJ3LMnLkhRMRa5P/juW/eQ
QLSNrwr4P9xCXRuf8P17QKAQy0NCqxTTUcKnPxNz1QSqPzgUuuKTi/6rUJHK
rSIQe9WDmaX3+ejL4rX45QoCqdT/VV38W4SCBTStRe8TyKIJnH+voyON2Gcu
vQSBfF9euTlvykT7pbtbHJgEiu9ua57xKUfBd68lXaUT6OAkz4Xf5veRlvLr
+hPF5PqgMqlf7yuQWfR+e+4CAp37ZV05f6wKNR8Kdj+QS6C481N75v5WI+Mr
eyccMgnEumQYPb2uFt0T3Fl47haBHnO/l5+6X4cWJE1H0hMI9DruXM2EaT3S
Oky88b9GoNlbjyfGfDBat+X6B6MIAl2K12uaD3+C2u6WCmuGkOe3X1wzb96A
+l7GqnUGEijLToU5+74RydsObdruQaDC22f+zOQ9RZ0er/bzOpPx3zZbzBxr
QutFfG5dPkDGP3Ts89TfZ8hw7elnWWYE+uxGSEysa0UevRobbZQINFaw4jE+
2or6uxNynkiS+Qzb3v9xvw3ddfj7ZlSQQFzH53aPmb5EX2QfLzv9YSHVoE0X
v/m8QmuF3cxaX7KQVK+Zz2mp14ijPr5v/AkLyYVNCM6Fv0Z6kj1rn1exkMoj
k8Oz5m9Q2dejI7mZLGS0/fPP6fed6N5ti9ARLxba8iU2K3BbF0qLoic2HmQh
k2ia6XReFzr58fwuh50sZPksOmnqWDf6fvTk9iItFnLcqao1+fctOpInsW14
nInC7Pxcf6zrQc1mm1RE3JloOdpIevB6D7K8EbJ1eA8TRT1g7+z804MMIlN3
+25mosuyd0zrunrRttsfzc4JM1HicJNq7NV+pDnjcaD9IQPlnVOYUJ0aRPuO
i7HO/ilDa97N7xPU/YQGh16r7/xUhvYFOFGven5CWiarGtqby9Dbu+tHz7/5
hBx1OAImb5WhXu76Q+6Mz+i2k75AqloZGno9uk3/6BD6yKKee7qDjlSO20gz
UobQodJk1K9CR96cVT9VXg6hh1cvqDG56Wh0QyQhtfkr8lLKqQtqLUXjGeKK
bGLDaMcl28rC3aXol+cOzlfNI0jDeON/4ztKEN+fzNYTumPo5/iyT/1KIdp0
tef8Lrcx1KnPU/qvrxD5iktqqyePocbYKwb8NYWoWf9W4tCfMaS57r87MQGF
6PLxa/udnv1A6ht7GRL9BYitP3jA0nkC0e/9JzXCyEdhg8Wha8ynUTg6bzuu
nodONUZeHw+aQwlzHb2FLilIt/D2myriDzp7qcp+wxdXvPaO3u8nrX/QQ7Rp
KlrRE/+Nb5dr//oHbaqo4kp38cEtp3l8h2UWkc03nVszPSexu2nYsvjVRVS6
oTxS2/sMTvnirhVy9C/a8dq5aXH9RbykSLuyWeQfuv73Ig76koCHbXzlBjex
wVO3qQR2uUy8tvmEygVzNvBTe9XbF5SJdxif0pbfxwYnO3++PdWaifO0zm87
7McGNwoaz7WfycLOvNed32ezAZNvXlj7RTbubCjPesXBDgtLN5pHDPLwY8Pf
ck9esgO70EGxi/fz8QTjr8rRHnboDb7qN/g+H8sps+ksD7ODsK/qgNByPj63
hs942wo7rLwwvjm4swAbTsocqdHngKd5XD+NBwtwWYlJ9r1UDjj3WGwhm60I
p8nEyN915YRTrrZHI2VL8K+hjhIbf044RjfJ+GNcgg+wJGlLYZxQ2GL/lepa
gkWBbnEwjROSvFIkXhWU4OteLwMEOziBVTNEa1crxVH3RBvPbeWClTW7fwZT
6PjjucPWaju5YAPF9d8loGNj08J33Q5cEEWNMLR0oePFtxt+UIO4IF0h++30
HToO/uu4dqSUCwIvrU/C/GXY1yLXe5/EKhCOsEecn8pws/Do9IryKpDKSrHZ
86cMr+/RC2Ppr4LnuucvW4ky8Be/xhu8e1ZBckgN2JkysPPN4ZrH0avAyvnU
psK7DFznpGt64uYqiK3eUxFQw8DSKiHt0rmrYPPePSpjHQz87gHvl+C6VdD7
s/r72CID2/ZrrdaaWQWChQtc4nuZmCgKTvmwvArunhLdbufBxIIBj9bFCHCD
l7z9xS0hTNzGvtfwsxo3HPf8pSqWw8RmakFH0ly4YVtb/9d335h4c1BNOedL
big347E478fCr1e2upzq4YZ1HD431c+zsHcCFhgc4YbbbyI7oq+x8K3S5mN1
7DzQkMwVBYUsPPaxW/nURh7wNXW51vGehaNOOHZ+NOOB7p8btT4NsbDEYl+U
9T4ewHyfU7OnWNhUfGhA7SQPNDcdt5DlJnDW7pm0j/k8QFHpT1agEpjWE2xh
fY8HLDdXrInfROAW74X52kc8sNnP1Dd/O4HnL67YpXwg1yePmbzZR+A44Wg2
zhEe4BzuTRh1IrBiNnd54BwPvEYbHMrcCbynRlDAWogXMubXLGmfIvBX85t1
tbK80Kpbfm8ihMDnu9YeU9MgcYJ6guMFAou43ZFMMeKFeY6nF05eJnDxpGwz
hxkvsInZBGvHEXhbeG5woB0vqEbruaTcIHAnn7LyRxdeMLYb0i5NJvCyimZU
7TlekBmtRi+yCZxcwdJVu8oLDz++Pd53l8CaoD+QnMwLXOv6LFKKCPykvSqe
I58XfAMSWhdKCexweNOWwHJemBX88H0Vk8Djo/+NDtTzQtoEK6eeIPClsyht
dxsvpF5T+SR3n8BSXE/Na9/zQtfqDaWqlQQuv2kxrzrMCwoHuWd6qghssa4t
P3mWF/YZq1cbPSBwP3OPHQcbH8RN7prZ9pDAQVverAQI8sGOxI78cRLzthwg
BmT4oKJE/bl5DYFz7D8471bngz/DJ45Ykdhw6PDq2g18MJim6j1Prm8LHKxV
NeUDNdGpzztJ7Lrs7ptsywcJPDqdVmS8X/EjEhwufPBv4siWGTKf69LHnwX4
8cF+DXsFUzJfSsnE6YFQPngvonPJhKyn1vAUZXcMHyjfn/MbIuu1bZx/XXOb
DzjGY7/ok/0Y2RsaqXqXD8QE2SY06AQOH/irk0zwAf8b5eQXZD9F/SL72ev5
IFin9rNEPoFLFzjiA1r5YJ8va3B1DoFNYmI2D7zjA16OrPSydAJ3i/GP7vrK
Bxu+asvNkfwdv5uQWjPDB0Gx1OBhkl826hpz1RU+SHnKd+8iyX9qffLcbQF+
MIyiDD4n9fH0faZtgBo/hFnnHtwXSvLtbj//04Afshpe7xYMIrD3hNCdcOCH
c/JeWRF+BObnvDQYe4gf5pJuJF84QvKRsDVaxJsfytKQi7ADgVlSP1XTgvhB
u9Si1d6GrF/X178wnh8u1ui/4jQh+1WrJKp1hx96jYxu+W0g74NpX/X9Qn7o
2HnMIlabwGmHbP49fsQPW/bt6h2RJvDHy4bXe6b4wa7b3ERnhoXvCU9SXZf4
4edDv7WWIyx8KaOka4R3NbRa/pct2cfC6+/JyM4rrYYv1EubBp6y8Ik+tjKh
A6tht4Jl3b+bLLyo3/7ctGY1hP1yzSxXZOGX9TF+bU2rgWHvyWO6hoVzLEHY
7s1qeD3fpX+DnYW3H6l0cBlbDb8PPXDc95mJr11LHw6VEwC/N1dsr2UzscSg
FycRJQCzLRNKH3iZePTYuhLDBAGodrH/zv+TfB/nP+z6L10ACgvY1P58YuAj
/Na3WioEoNG/o42XfC8LN9CUhr4KQHrWB+NFdwbWv75sIrVTENrqmRYHmGWY
dmzJk+UgCHd7fAf23CrDhhaLcTs8BUEut69vMaQMG7H9enciUhDE/EQgcEcZ
3hY84d9QLQhPItLU33TRsZVzf85xihDIWy4dqBgtxa7adcv1f4VA8fq02IGB
YuzOV6Oyj08YOlSftR6pK8YeI9W7vkkIw2rZ+L/r04qxd9791DU0YfDM1D0+
t7cYn1hL1/X2FQa2NyZ1CY+LcMhSmovwW2HQ/7mmSS6pEFuObBnUOygCdgWX
LVk8+di7q3v86hERuHt6g6vmp7v48hP/xY8eIhDWa5t0vuYubsjIF08IFIFy
SmRziu9dvHUvv/X3WBH4euvs9cbmPEyt6am5Wy8CsQHes9m/crBkXOgtUcoa
kHLu/6CWlI6/6Twwnx9fA/fl/97rVLqOw5ZiDerPi8GEVClNwTwadQR7JJ+/
KAat5il3stZcRooT235uuiYGhyh9c58HLqOmgakH1Sli0LK1PLTmTAwSwPZb
yu+JQWF1sZd9fizKuai0PX9EDIpPJOU4TNxADdy1Ntf2rYWmTpeyIPlUtDby
VrnFobVgUf1z8FdEKvL+7SeyynUtbE2OU9v6MRXxjyp0Xjy5FtJKQ0pWstPQ
vtbL9mHX1oKroVWZk0w6+hpv6+z/eC1cGr266+SqLMSzZvTYAU1x0Gu+3DnW
kYd+XXU2z9UTh66IXVY7f+ehkeXXimNG4sBxfrEhYt1d1Dxe+z7SVBz+WUUb
+ATcRTEt8eYMZ3E4cjLYUl8wH3FHUZU4boiD5J/Xh/ZAAeKeOvuhfE4chu/J
fBS/VIR+ef2oXPwjDiYtRyLDC4vQSP/RG+ZsEiDVO3KT1VyEmtusLPoEJIDb
/GPNSf5iFFMsU8WtKgHPrihNOt8oRtwuj28ccZQA5aRD1eWJJWhV+yrL1Y8k
QFEk4wGfGx0JnMzyGHgqAZdLd332vUBHawUNosrbJODCbqXxiExyXt7jWrv/
gwSoRBnatHTTkVl7nVbWnAQE7Jvf+ta0DF1qDxDR0ZQEw5x+kzgxBoo7ya2z
oicJxfhxjpI2A90SzN75ZqMkZJuV/j1mxkD5e9ounTGXhDtf1qQKBDNQQ7vK
z0eukvD69r32m68YiK2jp8cmTRJe7TUz9QhhIl7/wF+KOZLA3fnS+0ccE4kI
8YjNFUqC0FPeBMUcJlK0MbROq5CE8+Lz7DefMhHqSHw82C4Jnx9JlV7mZyEL
//V997slwXP8zk9/WRayEar/Hd0nCbpxtnlc2izkYvNdT/27JKQHStnpW7PQ
hQ7TgkAuKVDnowrFX2OhGP9evGO1FIg4z295kcpCiUKn+teKSkFTvZdLdSEL
ZdvkiNeuk4LMk1qjMZiFCicNafGqUlCJzDj8SX/GTHxhc0RHCrZLDoQsf2Ch
+o6Fq+xbpSCMjj/LzLBQk/+Nwq7tUjAYLXezeImFXgqpNhRZSUF0f6BwHw+B
+m32L+50kIIRN4vfxvIE+tvBOnHrlBQ4aLcoj5oSSOGNW6ZZqBQUeOheTLQm
0I4u8bZfF6Tg9Y76X4Ok/4x7H6F2+DoZT6bnZbQngYgefQfB21LQxs3G8c6P
QG/6hi/jdCnws9z0uzOIQFKf9nxRLpGCuTj5ty8jCbTtC/uadywpyBayTG+9
QiDXr9XoWpUULLLPdQfGE+jyyDH/Lf9JQbp0fGhjEoFKRuWzxxukYD6PEfw4
hUBtY29e5LRIgXxp9n+eGQSaHL+yaPtKCjpbb0B1DoFEpzZrcL6Tgu7ByV/l
+QQympk4WN0vBVyBw10HSP/vNHc3xmdICiiTXu0FdAJF/LSvlh6TAq9ZZk8W
k0B5v/m+vpiWgo4TDdOonEBNfx6JXvgtBWsNDq9OuE+g0b+ntustS0FwdwLl
ciWBBJbXB37hkoayPaC/vppAemy9OcmrpcHr+iQt8AGB9nMktluISsPrSxeV
vR4S6CzXjqUFKWm4+7aOjauGQBncvzQZ66Qh0qa/xZrEj3nLDh1RlYbsTsZ5
ROIv/C7XhHWk4VFys0Q/uZ9bUPRhg4E0tH+l5VBIrCHcPHx6izTYZd4UFSPj
Wa85v1Z1uzRYdDmEsKoIFCima/rBUhqGpPa+nqkgULL4l1NxNtIQxVxS+nSP
QA8lU/O22UuDNp0eFEoQqFd616vJw9Lk/fvWUscg0LLs8r88d2kYaxDXLikl
EEWhQnv/MWmYjdtbZFxEIAtF78OrAqUheHTc+MJdAiWodNQci5CGwz6rF/7d
IdA91UvfZC9LQ9OWZH3jZAJ1qxtJdMRJQ/qu8VrVGwSS08k5TbsjDc4ForML
0QQC6r78rznSMD7Q+uRzBIE89LnfpBZJQ6v3KfkzIQQq2+Cv+7dCGiiybi2Z
xwjUsZFyhFUrDcUincZUdwLNbn4Xf/SJNHzdeSLxpBOBNpuYfH/aLg3HtwZL
/9hJIGeYlTzbLQ1uRlKXNLcTKGpHsYV6nzTckzxDEd9EoBYLocLro2R/BRmn
xlUING7V2GkyRfZTZN6+R4ZAwrvPss/8lIbM1VUDp0QI5LD3o4s9pwyIU0Z2
Fy+y0PBBQlpBQQY6LZKFFV+wULHjv0ZnFRkouXFFcTd5n30PWZ/I1JQB7YD8
ezqVLDTmNPZYaqMMrPRbP5POYKHpI6qeYrYysIf+W+WmJwtVuJwR3OcgA2Gd
x5LCHFjo9NGmB0nOMjB04th5BSsW+uXqzid0TAZsZ584JGqy0JJHDsF7SQbC
5x/pyYwz0WPPiYOW12Tg5J+xuJd9TBTptY09JlEGrOdfJW56wUQcPr37OTNl
gG1jxQYTOvk+Hpf4869SBhY+6KZwuTORWGCi6dwweX5SalBhMwN1Bw6M64/L
wK39q1+sqmCg1FPaqYGzMlBb0VCgnM1AUqfbRieWZaAmmSc3JYiBFM5yJ45K
yoLBj39nHWUYSDP8woeBnbLQzHs2NvZIGdp+zf9kC0sW6OrCHzZVlSKZisGD
iVWy4MGlo6CZUorm+2x3HPhPFkK0Jke7z5SiYqqB5KcWWfjj2h3kaFSKBN7/
fvJ7SBbqLtu7KVWVoHfrL65Vk5GDuDhsJ1hQjPye3v7vSowczL3MaeezK0Rm
E1zFuxPkQMyg025UoxApSJ5NWpMsB1fuc3EncBSi18cdvbLvysFTp8UGzcoC
ZCQqL1xdLwfFtbG8TWsKEJtbsfvXWTmovR79oavpLkpZruEzPSoPYlM3/ANW
5yABtWf+KV7ysPWr/pnUB9no8t43Xd/85MHvVrrpabdsFJT3Pft6qDxILm6N
t3uQhWx2yNDe3ZQHnXytDTXOmYg7JszpWJM8nKt3oP/IuoNCBU0YNzQUgGtX
zNs/07fQYbmn1v1zCrB4dZfAFZ9wJPBEa5xirwjSNxctMz7dwl/S7VoiHRXB
3e/G+/Ydt/HD0yGF/YcV4XpV2lxb4W3srvbUOdVdEbKcj12Q903GDxOd2vkC
FSF1w4W6VeMp2P1ILDEdpwiPTL1ezH27g2sWRwIfP1GEs6uSpX+W5uDEboE9
sk2KcEXcas1ejlzsQdA0Qp8rwlJp5VG7w7lYyP3CZ/0ORTA8oxS7njsPe7SK
7yvqU4TXLiZNf6vysNAdM4PrvxTBtm96nODLx14b8n8e0lYCrZa1KjPxhTgu
UVw4gqoEPg4rG8vKCzHx7Zp6Hk0JNkxWeut1FeJf6QGHRzYpQbaO98N86SJ8
bXlbQ5C5Egy/6K4WLyzCZc/fX493UQLzmat7fxDFuENxdzHhpgRb9ybp27wq
xrPnHuM3nkpA7/40HzpVjLdqF81K+inBnWyjIRVqCX6ZFORYGKIEQ92qPe2M
Ejx5SFDlUZISzDkmdihllGLRyijjT7eVQHZNxaePD0qxkcC8A2eaEozy6q0/
2lWKIx/3xu7MVoL0zkqt0tV0LKJcOvWWrgQnZ0NKD5yjY9r4jv8mG8l6T16X
HLAqww7mD7rXNCvBwpq0CpZbGT6fozFp2KoE7j7Nnsbny/BTWxGlsFdKAJn5
CullZfhA9UAMT78SMHO6grfyMnDIhdB9ij+VwMRgQG7xAQOrj4cLXF0g66Uf
OXS4nYE/HLrYPPFXCSZXjuicGGLgTRvitvzHQQGnDLbcTCEmXviRSXEQoUBc
t9KIphsTlx7K668Xo8CW/HJpjjNM7Pi8MFVZkgLPrjYvx1xj4tp8Fv+MPAVM
z5WypRNMfP4Qno3XokAz5duP97+YWPP5U+asLgV0ilk1Erws3GvY4n2IRgEB
Hv5EdmkW3irypld1MwV083bf7N3MwkvNXxobLChw5nX3x+QQFmYafgtX30WB
cmrua90YFnbO/2F0Yw8FmDPTLqeTWfhRxHyZ8wEKyCXSWH/LWfiCIfft324U
EHUJeME1xMK6+fx7XLwooMZ5wH5qkoU/CgvzPPOlwAmueevoRRZGPyTDbgVQ
YJWvLFuJCIGnHeU2/AmigOS3k2FGsgTOa1acOnqWPG+oZMh/Pemn8zU8dCIo
UHl9kKd3E0H6UV355CgKbJp9GSewg8CuEbT3i9Fk/b9k47/tInCD49bdLXEU
GIwrzU49TOCgZrSKmkgBiUrFqOMepB82NMMpNynw0mR/5MhxAl8S3mPgcYcC
tzrOXnhH+nFahN1EaybJz+Uf9rsiCfxlzL5EL5cC/ccS/nhdIfAtRye3tHwK
pDQHHdSIJ7Bps4vschEFaOY/XJKTSH9t4PHWk06BgMhstpIUAhfe9bnxgkkB
9ZYTOm4ZBD4gfGIn7R4FtBpX3jfmEJgrIpAzvZICQ66Dcy/yCVw1Fvxo5QEZ
P2gyOLyYwJ6O50K86yiQ/u+7bTedwGubI/TbH1HgkqfmhS4mgZsMLv0waKDA
6p6yuXPlBA6+G1OU0USB0Rnesuf3CawiHH+UvYUCltePZNRXErg7/Ia07wsK
6GtTsWM1ga+M3e7q6CD10UAXy3pA4Mvvh9v+vqHA5CqD5nMPSdy0sVH9LQWU
t17g4a8hcPT92Fr7DxSwF1B5R85L+FJO371LfRS44h2tv4PEF+N1Sss/UkA1
lyE9Ru6PCo3M7f9MgblV12+YkTjS600q3zAFQgbKk+3IeBf2KScajVKgb/m2
1hoynwh05orHD7K+EtOD0WS+4drPw5MmKXDfvk22lKwnTFo6+NEMBWI23I+I
JOs9z+3nNzZPgXXXky7xsQh8bq7eXXKBAjyVwXoWZQQO/STkZPaX1ANbROKG
EgKHtLvanVom9U0zLnxfQOCzdRVWOezKoCBhf147j8BnSrjgBZcyOG0fljbM
IvuZ7LBxgUcZOrcLJEymkXryX1y/T0gZTrKeSIcnEvjUYWv5yDXKQPM4v3tv
LIEDrXLWMtcqw+bqfRffRhM4gLKDk1tWGdR38+r+DSGwv3DyIk1BGc5HzTVk
nCLx0vDMUSVliDefTJkg9XjiXeynWjVliCXCjFnOBPaNe/PopKEysPHW3Und
RmCfEOXqjI3KoL1LV7XTgMDenmeYz7coQ2i/U0KDJqkXE+lMpe3KcEX6s2W9
JIHdZl1D3+5RBg9HS3kV8j66DlYEcNgpQ/a7gxrs5H11fcnlQz2gDH/u9fbd
es/CLsWl9rFOypAiHlvajVnYyWmaZuyjDF+fKWx+e52FD1nu0Dx+XBleo5tt
TpEs7GiYrJR2Uhnyzyj8SznFwg5Cm0RmTiuDJjW/U8eehfc3Rk4URikDZz7/
lm9SLGytKVwqkKEMU0wb1YJbTHyoJaBUI1sZ5g79UJmOYmJv79elFnnK8A6p
iC74M3FU/k16VLEyUHTBZ/MuJq6SWcuYryD7PzD/PeYfA8utlib6XyjDQ8nN
LWcPMrAG/Rzxp0MZluuHo69tZ2Ajy15ColMZasZyDBy1GNg2OrPc9oMyVKl0
WNGWy/Dlv/L3m74qQ/H3yzbv88rw+A9KFfMfud4ySVKyl47/xEZXtbKpQHJ5
TwnlCR1zq3+tGuFUAZ2PcZ1TRXSs6FlUrcivAptiS36+CqTjA/1qD5MlVOAU
l1kswUnH9S+168KpKrDI1nRhnUIpTmAZPbF2U4Ewd9GZRrVirOqq7sbyVIGP
b49er+QkXbaoDIeQrwr8GCGOeg0W4emQf6av/FVgPGdit1BqET6wo+m5XbgK
LOHUhii2Iiz33u6VQ5oKpLZ6WVq0FWAm28mPru0qYFmewuFjeBe37S9YCt68
HrrGRPu4/6biJ+0B17U5VcF8C/vTnCEzZLgWVqdxq0LLRxE6k80OlTqJxLHz
q4KJJsve8cZBdOPbvavvRFRBvXEV9Zu9O3Jhn70UpaAKKyr8w4kBAWjJMPhc
92ZV6BivVy16Ho42Z4V6hweqwqf+gbbze+NRxfGL8HJAFYyDctPy+DKQobtr
i+pnVWB2qx576Z2BHhxCthe/qoLOKY0V1tMMVGv176jRD1VY97jcIzE8Ez1R
PReZt6AKWyN2V5SMZaH2L4GPg8XUQIUhH+r8MBeNOrluk9+pBg/CtkyvXMlH
x/ehphBrNZBNGhn+R+Sj8Z0K1p171WC31vy+5+/z0dSm/sNXHdQgJiHleZ16
Afol4Rg246EGKePODZItBYiza2/dswtqsCHbimW1RM6nu9Em/yo1qEt6MJS9
sQRNNvj9S3yoBlkbvLp/O5QgvOlOY3mdGrQqnSSkzpYgV9UZ65knaiCvoTzO
qixB+ewFbsHtahBYesZJQbsUqdVwx58fIfMfCnR5v4aOFnQNbDO/qwF/8eaj
ETp01FJ0VLx+XA0afVtah63o6Pjtmtx/s2rg8vx259IFOmL6H6+KWlGDdxuF
Q7eN0pHe+o6BGCl1mDwSk9ZGlCG2rMX8Ell1OC+6Q/Jccxl6I6rm26KgDtXe
OyVHBspQEFvULN96dQj3wFWLqxmouk+fJ0FfHQ4F/zrA68VAW26l6N3epQ7t
nUEQw89E/HyNPyv3qIOLcJoTpwIT9UVO1nXbqsPEzkhiqz4ThZ+0NJc4qA6B
2wbNBhxIv2P151C6hzpESj/RH8xhItMV5+jccHVQ+Jp+qkaJhfLiZL5zRqnD
uc/NPyRppF8S/2DjG60Owcplx5R3sNAD7f0y+nHqYObWXG3sxkLqTjvvN6ap
g9fziubzmSx0eZhbUi1THdiilaM30Fnoc2BTeHyOOkhL0cczHrBQxlVkdaBI
HV6on9Dyes1CAtUbBocr1OEK94Dr3Arp/2DObNcDMh7/m6gVfgI9e3GvjKhV
B8ETlw2rxQl04YvW2ZAn6mDwOLRXTpP04ye/9/U9VYf1lgW3OgwItPFP8XZ4
rg6LPV99NYwJNC1MEeTrUIdvpS6cvTak/88cDDr5hjzPNzOFepBAdNXsD2+6
1cFIqGVQ5yiB3I2lCjP61CF3Vny7ij+BHre85Vv5qA7vdl/VkTtDINkDtwM8
vqjDiH95WH0Y6dePC23V/k7ym6E19/MqgfR+vchLGlcHkfEfC4kJpN+/GMv9
c4rM50qazOtbBBoTsDxxaE4dNCerrGrTCGRxh6vz0S91WFhQPrMri0D5yo0b
KYvq8DVQ4XZ0HoFWiMjsmH9kfVcEUz0LSX++xZjzB5sGfKHMBE2UEKjm2aLv
Xi4N0N48uE6BQaC1djUdlTwaQP+td/sXi0Cn+s8YSq3WAK4F7mdn7xGow8cg
I1xIA6K27CFyKgikOTe98mmNBvgnOFn5VxEo5gLhZS5OnrfFJ3G4mkBDfCde
0KU04OF5w3CuhwSCFA19ITkN0D+rIvSCxFmK31KD1mmA2Y3gHZtrCLTAKFx6
R9EAq/T/JPeS2H6ju/tWVQ2obDyXIEDiisZ1LbkaGhCpOlx4itwvZDOgw6Wj
AQIxAUcvPCDQ8Z6M2756GqAx34xpZPznno5/XhpowHuumdbESgKpTIsf1d+o
AZKqlpdu3SdQVFhXU8oWDZgMb5k0LidQP/dNzUVj8rwFaYmbTAJtvmWT5LJd
A94+fbQSTydQqrzAr0YzDWjyr63SLSbQbGnrYTUrDdjJ5WlyLp9ANoZXG+J3
a0CwWHaJXw6BGNhMbdpGA45flV5alUEgz3d4tsZeA+7x/E6nJRFI5HNbypCj
Bmy5WqmmEk+g/3683STkrAH5no9V/v/9TpR9/IKHO8lX7ZkCnfMEerT6t1Ki
lwZ8tFHZMXGaQL4SHM9qfDUgdelsnOtJAmEtqdVCARrAu2rqkDupx+NGysSm
IA34/dKRa4bUq8R2XTuPMxpg3WOXY2BLoBMOZmk1YRqwI2d8qhsRSOZioLLH
NQ0QrWtziJMlUHN8WHNCPJl/UtnzujWkHlJjjtUkaoD8O6EPuTwEamFklQum
aEBbraXJtVkWOvuuZWvNXQ1YH/ZG9G0TC1E+d338UkjGa30UwKphofYfHy8K
lmoAu0bo7q1MFlJh//ncndCA8RGPfyG3WOiNltIBwf80oF2s+3PoYRYKN9L+
vfGxBozNOLWw7SHfi+0bM9wbNICtuHErMmGhCw57Pj18TsZXaD7yaR0LaV88
d8K9m9RvTPbzh4NMdO3dm8sPJzTA3dbKZtCOiQw/96t9mdaAivbDo19MmGjw
x7c2gXkN4DnuWZWrxURG7Msi7osakGalVmjOxURDWprZAjyacHrLP3urCgYy
uXip2k1REzKTTEYd2Bno97Yst3BlTSiM8/gbNlaG7i1UC6apaoJ5TcEG164y
pBz43eultiZwPeDg8iksQ7xHbSU2btYErz+0HcGmZahrm0KIwD5N4Cz4oNdw
ho58F2o3PYzWBMtA5wtfmCVIqarr65sYTRgQcWbzTCxBvQETSeOxmqA5rfqU
GVCC9nxT/K6UpAktLXMGKfoliPbuavr1LE1QGBhfbK0oRv8q7RfdqjXhhigz
i5tRhG4FzPwn8E0T+EY2BnGcKUDvURav35gm6Fwash+wLkByIpb2rRNkPqHs
YRdVClDJvazJK/Oa0FG054BaVz6qn7FUWmHXgrjDPRM/dfLRyOmcmBk5Lfj8
df7vqt48tCV0t927fVrgmVIXn6SQhb5EFY3kPtaC7HOt1Ug8Cf3wqvVsvKoN
c7Qwe0eXSCzQtuOGZrw2xBp+yrp3IQpr676svZWoDXTauP4qm4v4xK+PQh4p
2rA27K2L+PglPB7DVctZoA3i9yZkk9bH4PGSvYLmj7XBwqV03df463jy+3D1
83ltaOP33z4Rl4yFbAI+URe0IQ+XGQVNJGPdigX+O3+1oatcOKhubwr2P7/a
1ZdDB0Y1tlkmiaXiSX59fj4RHZgwzvSm3UnDU1rhLru0dGDtqtRXTskZePqk
KE+7mw7UrtpqfkQ9Dx+1++7/11MHIgaDf7+3y8Mdhk/eafjqQKbZ9qMaYXmY
+fdkcYy/DmxndbJs2vOwb2yrOYTpwP5b3LNpAXfxp8Koy5XJ5O8H1XteMPLx
q75J9oznOhB14/MINzn/meBnx1radMDQ+erOVOUizMzPevOrXQf8FA/qTVsU
4bhju+7u79YBMBlR4Ugowha/i0Dwsw4UhE1zpEj8f948Ehm1qAMufuxqWutK
MLHzxZK3ji5Mb/aJ6iPnV62P905e0dMF7cyXTfHr6Lg0KPVjgYEufFyOmF7e
Qsf5mW5PPm3WBb5N3HPap+g4ZeJ3tJOFLhjzNZ3LI+fn8Jsqq22O6oLwzs8W
xN0y/Gc9f/gJd13YrjHwz7+2jPRfU+NxXroQHKz7cPJ1GQ4cqut47qcLnZ8W
rDVXyrDHBrtb20N1gcdddTzekYF39URIb7ipCyBB3962zMDPT3rE7U/WhXea
npVuokxsxrHz76k0XeAq8PhUtZ6JTbTWDhDZunDf+8f9hN1MrB9Rlqdepgtq
q8M2cSUzMbEmaY0lSxfeP4u8GlzExJrFZy553dOFHa/atXIfMLHKK/DMf6AL
ouPprykfmFhK6b2a3FOy3klb+UFJFk6prr+zpVkXik1DCXk1Fhbdlc93qFUX
hrgVnMSNWFjg9MkfKa90ISjTIZC6n4VXmjjLhft1YSkj8zl/HAuHH/q+TndQ
F/K6FByF0lh4YaIjyfqLLnhPfZttLWDhWYmMoNhRXbj9wvKlbz0Lj/jqGXH+
1IVvOcHd28dYeGpNiaXXArlfw95y9Ce5v07+0PO/urDss59tMzuB+QRXh8dz
UOGMr1jTBwkCiz64mDCxigp35DqT1JQILHN0IWcvHxWmX8+oKWoRWPv+cIOY
CBX2mTmaCZkQeIOTc9cZMSroXXG9zWlJYBPOrq/vJagw1RQM+XsJbGv/hCdL
ngpyRVv29x0l8KFlI+llRSoUnLgQd8aHwO4lLE1XFSq4feV7WuNP4NN/Mvao
aFFBdC9reHM46e/z1xyN0aXC90hLesglAl/efS1wVJ8KH+baFV2uEThhfvni
rg1UqH3hsHUigcCp2WduMzdR4Wdg86jKbQLnWowXCm2jgsdxe5lVdwhcOuX+
IBBRIeO5fmMC6d/v3+l53rmDCgHFfl2PSX9ft922x9CCCuMDK9vvFBL46Vjz
WOpOKli2D3HIlBL45W3jpQVrKtztWi1gxiBw97YqwcO2VDBef/KABEHggWHN
dY/2U+G/dTrdSfcIPJJ4V2/dQSoozvyIrqwg8ORGqR0XnahQuhh15EIVgX9/
Stw/dIQK5oWczjPVBGaLW+Vl7kaFtCq9MIGHJD8G4WdLPKkQ/RI/fEVi0f7Z
q3y+VDjNTxfeWkPyc+VYup8fmU/Hm4s2JFbW/VTW7k8F6rd3gv//HqP93qGe
GkQFPhu/qpPkfsOo9vabZ6jQvpsz9NwDAhtrmA3OhVLByJntsA4Z36Kzbto+
nAqLgtZusZUE3humz1ETSYXP7t8TE+4T2FGlVEwmmgpHCYuxzeUEdmtXWB8e
Q4WJ7X2hiUwCHz+bYvQxlgqvQ8pMyXkHn14nYAUJVODedddOr5jks+XSofwk
KtQd305E5JN8nvpznCuZCrMWD9xO55B8ygSGe6dRQfNibuiaDJLPpyMJLRlU
kK2hszmmEDjnxJFczRwq9NIfcFsmEfje412Nk4VUUHk32aRwhcC1Pg1dtqVU
yP+XlcMTSeBGkU3DFQxSf99pRumhJF/u63lDKsj67IxGHxwn+VqdJd1TTQW6
4VEtUw+SrypRra21pF523wwLPUzyw81ms4Kp0F2skfNxF9lvRu/tq+1UMI01
Tc9cT+Cgrpwv5a+p8Mbqi6CyHIFb/7rrf+gi9XqKL+SoKIFDrX90qPdSQWE4
Ofb3PxZ+P/GXr22ECleTvKJL3rCwrsQTx9nvVOA9J+3f84yFY0wul8hMUGGz
FV2loZaFjW4ImPvNUUGeE5+syGPhXXeEgJtND0LiRkfX+bHwWWagTwa7Hlhs
yy3kPMLC+U86E3U59aC1J1w/x4aFF0dTBxy49cBQ3HzPgh4L0zevCysR0AOX
ZhbdbJaJefuoD6yk9aCr5qiwmw8TG07dHOiX0YP0ejmjpgNM7Mo5z3VKTg/6
Zn7iT9uZuEarZn/6Oj1g1G/9z0KWiX3CYeb7ej3wRlvzXrQxcLO8nXY8TQ90
Lp77NizHwLP6lfvXGeqBWPqXzl+rGFjBQjyscoMetOgJeDZNluEz/j2tfZv0
QDlGyzUVl2EV7OajjfTgjtetLXIuZTjaNSi/fbce6DJ1gocT6Xh+WS4jeo8e
/PGL9Uoj/554Zz+/uXkvuV/8/Mfl/XS8q1fuYtE+PTh0P6txSpKORQ88Pxpx
SA/G7fdxeGSV4jxLOXkdHz3w8duYOJhWgh/pNqddv6QH7ztHE/sPF2Hd9sAb
Oy7rQekEh9LvDUU4z0/26sIVPYjXC8npEi7Cl0sDz3rG6sHSYT2Z7sZCbE2R
td+WpAcednIhK+sLca94oOh4th7wUA6Ken3Ox7+XpBN21+pBgNpXpxpqHp6e
2x37p46Mt6Tf0cyZh0fHIq6U1OtBmpa8qm15Lu798DmC84keWP/ey9/2Lwc/
rqL7/9esB8eeBF5lpmbjyyc222p1k/y8u01bXZuBRfodxVZPkfzlr2ve/zwZ
q/+Xlt6mog/htiPNevFReIPHs71rYvXh8Ko/hZH6N5Bc4ciWpjh9uPbvtK/J
3xuIY5hHNeS6PvSZMvxt3ZNQh/eupf4b+qC6ne2rstZN5H38VWlpqj48ThLR
CKi7he6c6mGHQn3oat77OrMjBS1GTlT6Y314JmkqlvosE316IpSr1KAPLpLn
kmMpWaiZXS+uu1EfaMyVT1qRWeh2dJDrlmZ9+O/VzfuhG7OR9tXfAtzt+tBw
u1ldojAHHUlk987u1Qf7Kn9s/CAPPckSl3r5Ux9uFez9FnmoANlkDyi5/9aH
tQmCTBRZgPqyi7QWFvRhfFO4Z0dhAfqVswGpLOlD2/C80cGpAqRz1947nIMG
rWa2ugKXClFGUUqVtjAN2NTNbSqzi5B68ZHHjSI00BnSkd34pAhVF69vcRSl
AefTNr3LX4rQ65LqvsviNHDtedwbqlqMeMrecgzI0kA9zvFzI6MYBRPidgnq
NPiOjORuMkoQR/mAk7ImDWRHF3UutZWgG+VFnrVaNPg8vei18XsJKru3IXRY
lwazjJdrJ9aXos8V9rnGG2hgfNNNMSKrFNk8TJmY2E6DljPPIqci6Kj/4ZHf
0aY0YD3IX8OWTkfHatazy5jToJg7xuR1JR1drq1ea2FFI+dr7ESM0tF//73d
mmNDg13/1vo67S1D6k/E42wO00BFo33jFhEG2ibtdaffmQZBB10TK1UZyC6o
qvi4Cw0cdgTAj20MdF5l/9MYNxqEziV+TPZloJfXkpYe+9Cgkr9p94t6Bvr0
eZB/zzEabNwm+Ej/DQP93EKV7jtOg1yq48SBYQZSmGjf8PskDc7cSWt5LcBE
p+xWB1CDaWC/swWlOzJRTJlTxKMz5Hq+0nOfjjNRBmdZ/O4QGoyHF698CWei
pmqrUp/zNDB6KwXSeUwkIRPzOTeKBrU7OX6bDzFR3Re2AyIJNEg2DcyMcGah
jq227jmJNEBhDUnex1loKDk3UDuJBuJrg3x4Q1lIwNIkweo2DVSNUzeeJf3h
UUZYc1Q6DYTincd+PWWhYK4X3UKZNHhTceBswSsWunZEZigriwajHHpTPH0s
VCFcu1KTS4OU3cubF6ZZiCv416aZIho4h3sdPi1NIKl2c8vIEhpwRfCd6qcQ
SEc1xV6QTgO883zZkhaBHD4YBGkwaWAyuEfP3Zj00/rRUQ9ZNPizbX5fiTmB
IuM6E83LafAicMqsYA+BSredYrhV0GBGctVu7Eyg+pQntVOVNNC96b1l0INA
byaFWyKqabB/P7pXfZxAi3nE1/QaGmxRCZm4EkIg4cV/s2p1NPgaqpcSGUEg
lf172B/8RwMYnLhCjSbQnlXj8p2PaZBuzS5YkUDGG41euviEBiGJ1svfbxGI
46Vsn34jDQQiYn60pRHoSHll7eenpN6mVFoOZBGo5tbuOzef0cC69vvVq3kE
Ej07dHb7cxpwsFIVPAoJdPJQmP1MCw2+sXNGfSsh/f02McO7baReQCV/LYNA
FEWGqN1LGmy6rBQxxiJQOKfpDFsH2b9vW/iO3SPQ+5HeV/de0aD64j2TpAoC
0dqCCNc3NAjz2izhWkWg6yz+BJEuGkwXhcR/qCbQSFK+35NuGkjyaGf+eUCg
7cFbdgW+o4FVs+SOp///PnSwU13xAw1klv6Fb6gh0K8tx3le99BAJGxmpy2J
bRU4RiL7SP2YvqOLkZjBntFEHaCBy92J7Mj//z/PsH7B4EcaqH0JVUsmz3dt
ab144xMNqD6fLe3I+HUMN1f0hQZL3r85HlYSSPzGH5OpIRo0CJ5weXafQIFB
N+Vzh2kw6fDvaHg5gdrsNZZsvtFg3viYYD+T5GdzQ+/yKA2OWcuf/Eon9SB3
qJYYI/vpePlaSjGBelem01zGabC1oufYVD6BDIeunRWaJO8Dy1F2NodAic2K
9o+nyPch0awkO4NA3+k1Bv4zNLAQvS09m0KgnMDR6fZ5GnTnxf9IiSfQwv6o
VxG/aLB2V67v8BUC7d8oRegs0Mj58h/3x0gC8S5b+iX8pcE++9dTZOuR++fB
ncb/aEATvu2K/Qj0qClEfWKZBsPFLcZHPAkUFF8ybM1hAGI0g5spBwj00h81
LXEagMoVKSM9awKp7Xufz1xlAGznxu4GmxKoX4rHVYDPAOREN1H/6hHIsti7
94WwAci+/aHAwUug/NjlmrA1BsC/Qe7rxBILLZ1ITdMSM4C3oit2l2fI+2jQ
fCBewgA+uEfS7/ewkFzD+le75A0guz92tWgxC50tfMRaVDCAJ4dedjncYaE3
V+2vlykagL1Ar5tlHAvF2FzZya9C7uctPK19koWm+74+bdUk45mpsa+mstDs
BeUGZ20DSGxIXny5joXmldwfT+kYwCXe+88tRFhowWewRlzfAERHU8+5TzMR
23wPy22jAdg02GebsJhIROBV2h9TMn71Y91yaSYSLRdMuW5uABC1sMDOzURr
91nfWmdpAE1OB/YJzzKQ1J3W6+a7DGBXXOtZp1YGUlRpunjT1gC8r6yXrQlm
IL1ttX4aRwxgjea/RPy4DNEGf/vWuxhAcrviUFdxGTK8ZOS919UA1Ab3axcn
lqFNLZWuZzwMoOj3zPUrR8oQHCDsG44ZgITkAjJaoCPbEwXo0FkD6HRtVU1T
oqOArASx2BsGsNNBfd7QogS9ZFeZ2nXTAMJTlNTfUkqQpk9dm8BtA1jX/HBM
Z6UYfdX/djEp9f/90HzL/7AYOT6H6bRsA6iQWLpwQbkY7Zide1nMMADtCzUj
96cKkYSVU0zTcwPYk+HDlu6Yj06zpt1iWg2g0Yaqo6eTj16LXjW2ekH2Y5C6
+QZ7PoofqJx/0UHqQTWCv4R+F7GdFvToemsAJUJWoda/89BY9hP0ZcgA3vM9
zXq1JhdZch6ULRwm+1EkxxlWlYMKfSd+eX0j9Tb8+85zhxx01ECG+D5Grr8e
2GOVkY26W07LzcyQ/b2ofme1fBbS1+VfqJgj49Okjnyqz0SJt/O6gn8aQLFE
yfmjzplop0t73MKCAXzkFTzmlpGBip96eNctGkChgvLNkU0ZiEtjcXv4Etlv
W3gi8z4duSUmyZssk/195aayEpyOHs+p/llZMQDlZK/xZNF09D9yuU/o
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.617842718834229*^9, 3.617843788255891*^9, 3.617843933628545*^9, 
   3.6178439927169123`*^9, 3.6178441241267157`*^9, 3.617886979905313*^9, 
   3.617888129402413*^9, 3.617888221259598*^9, 3.6178884597536087`*^9, 
   3.6178887527322598`*^9, 3.617889045282378*^9, 3.617890625594408*^9, 
   3.617891647328875*^9, 3.6178917612367897`*^9, 3.6178918550950413`*^9, 
   3.6178920929262466`*^9, 3.617892388303286*^9, 3.617892672619812*^9, 
   3.617892797213018*^9, 3.617893591126491*^9, 3.6178936875383453`*^9, 
   3.6178985665424223`*^9, 3.617898987641794*^9, 3.617899025067812*^9, 
   3.6178990596394587`*^9, 3.61789910436474*^9, {3.6178991348406887`*^9, 
   3.617899160934649*^9}, 3.617899307213591*^9, 3.617899592075624*^9, 
   3.6178996315429363`*^9, 3.617899774195093*^9, 3.617900545690413*^9, 
   3.617900720663612*^9, 3.617900762958263*^9, 3.617909914489168*^9, 
   3.617910704403659*^9, 3.6179107643956957`*^9, 3.617910817454047*^9, 
   3.617910969492711*^9, 3.617911164155323*^9, 3.6179112444029703`*^9, 
   3.617911312813308*^9, 3.6179119896269083`*^9, 3.6179121188753767`*^9, 
   3.6179121690068808`*^9, 3.617912207467643*^9, 3.617912243418021*^9, 
   3.6179122784530907`*^9, 3.617912312419251*^9, 3.617912978391183*^9, 
   3.6179132115901213`*^9, 3.61791651271174*^9, 3.617919787719523*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SubscriptBox["x", "pp"], "[", "t", "]"}], "-", 
         RowBox[{
         "r", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], ")"}],
        "//.", "SDATA2"}], "/.", "Sola"}], ")"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "20"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.617899277420302*^9, 3.617899280958953*^9}, {
  3.6179005519820337`*^9, 3.617900554814844*^9}, {3.6179109898708*^9, 
  3.61791100733309*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
EQue9hWjjn9wQ2fXE1uOmIlR3z5oHZzZQFyqYb+SsosT0vOWIvZfskSUYopv
M14nTRzRfFKEehz/5nzGZmLHZc7ClFjCVUudLcQLp5oEqZiEnfZ9ssRyT1QE
KKXE38535Ij5Bb/xUcWJRY/4thFrfq3npY4meQdEbSeWPJq3jOpKMniJdhKH
xBrzUJYfxd/VKWyD+Z7loRY+9iVdViJW+789kz9k/90FvszDR4mkXC8O2EM8
wKvET71NQdWbEbFsYogAtT11SUseRawi0ylI5aZW9BxTIRZJZRaitNMCRkb2
EQdWcgtTrWmnZlz+I35i9kSIupy+nlF0P+y33UKImk4f4Ug4QPyd0hOkXDNS
BA+oE2dr7RSg+DPvrmo9RCzF+JWPCs/cL2V7mDhz/VteSjaLexubFnFCZS8P
lZXVsCdMG/LHMrgo9ezQ/Tt04Xt42MNBNWZf0CnTIz7vspedOo+3HDfRJzbL
aWSlJvCU6fRR4uHVnayUE42veBkS9/49zEZx57jdWGtEHLn9GwcVnKPllH6c
+KScDTcllSvkqX2CWKaNgY9SXnEhsPUkcfj5v3yUnm3yW/PTxM3aGQLUxc/M
KbNn4D0nGwSo25L6Be5niTmMZwUpn7sRNYLniGtHrQWp143jHRHniZf6yAlS
6Vv3jcpdhPksXi5AlT/0XaAvEXcLM/FTnV0dHFqX4XtzTuGlpnZvXfHVHObN
e9syisPfcePlK/D9M49zUatGKnbOXIXzFfZxUNsPiKu5WcHvx25Vdkr95ZUj
AjYwH0JprNTJ2SyTV7bw/hzWSykbPU6rrXbELGm8rJR7jPFdfB3mpdaElQpm
jnl0+Cacd20RBxV/ci7oiz3Mb8J/3FRhinr0pdvEngERvFQzT2Dq1B34/Xjx
7z5HLvUXutwlVv0WxU8x5SnU8d0jXiucz08Ji7p3vXQiNi7bJkBJX2v4seU+
sd2HRAFqb7nknywXYuX/vAWoo+vtuDTcoH7aOkHKzLFAtNmd2N3CQZByaOLf
dPEhseEhfyHKT85UcdIDzsewdDn11iNx//1HsD++u5zK7GY4yusN39s5SRGq
co+uaZgP/J7qbhGhevxfWsv4Euuurl9OzY6MOmb6EW+omxKhuA5S3upP4b7U
A1dQa8K9XzT6EystSVtBKcy1vjv/jNgrVmgFpXFEJn3iOfxeLuUSoc68v1Ps
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
jbU=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.617899281413534*^9, 3.617899309025524*^9}, 
   3.6178995950918627`*^9, 3.617899633398553*^9, 3.617899776108828*^9, 
   3.617900555315749*^9, 3.6179007223395233`*^9, 3.6179007663215933`*^9, 
   3.617909914542079*^9, 3.61791070662131*^9, 3.617910766880808*^9, 
   3.6179108196677017`*^9, {3.617910972205743*^9, 3.617911007690792*^9}, 
   3.617911167471765*^9, 3.617911246518497*^9, 3.617911315093491*^9, 
   3.61791198969701*^9, 3.617912121175345*^9, 3.6179121708343973`*^9, 
   3.61791220942142*^9, 3.6179122457734756`*^9, 3.617912280275794*^9, 
   3.617912314189077*^9, 3.617912978466524*^9, 3.617913211628223*^9, 
   3.617916512742572*^9, 
   3.6179197878221807`*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzVnQec1dWV+J9MBazRdLMxzX82xc2m7aYZ/8nGmN0kG5OYsvkbRQFpKiKi
wADjwNAZikiRIgqCgICo9DLUGWDoZUZ6GcoAQxsYZpj2/vd77jlvfu/xpuAm
aj4ffrx599137znnnnv6ve9XLTq3afV4i85tH21xx887tejYpu2jT99x75Od
XFPCdaHQdW1CodDKO0L8HXZ/6n9h9y/clv9CoXvkJSHUunVr+Use/r/zGj6X
j6/lW83kpWlquOL0C+umDd+Rmd5jT1pa+ouDp65tVnSl5iPhS/knBnXudee8
osrQTdK32SeqL+TtHtBj3A0Hy3S8cOXvz26atjUrI31Henpmj5Hv7E64VB2+
rYGpm/rh3P/Vfzm3bsiSbkNXpRZV1CSHK89O3jwhrWfvt080qagp/+KZk6eT
L1XWJEr35OvCNVe+X7zvZJPyGgarub3i7P4bT5TVJMnHzWOB+6eqM6v3Dkob
+el156qa1lQc27Cob9rPx+y8FKpxvW9tAEL3kZvhVyXbRhSlde4cSijq7P5v
vqLr4OXJpysN94onTi6bds+c3X5I13ZP6e6ha7oO2NKkxEGYLL1SmoWvHF++
cEj357IWHLyzpGjNnrFpvX84Y2+pfCcxLug1v7+waeDb3UcWXFcqmFa3PLu6
78zuY/aHyuoAvZdv+8rRUxdnjJy5Wd5N9pjcIC+JKTWVxRM3T0rL6jWjMHQl
HE6R5qSbai7vX/vWgM7FnZ/q+evXtl4IVdMaF6rKHkXvZAxJn3E0VOFnvfvy
nmG5XfvnJVyorheq3+blnwj/9fl5za5UVBlUzf30DPvk6aWDy59p12ZNxwHz
mxeW14Q8aJCv5s6KolV7x6Sl7RiQ3rX7kHkHm5TVhOuALq1oXkZWDHQ5Xftv
bHKhpl7o2izbeBjobrpcXmnQef5MBYLPVZzefVdBYRmEaVZzpSh7zeBuDwzd
KITSFW4eLj+y5Y3evX81dduFmyovH1g2Lyv9ZxPzPVc0kT43NAnXlN9TtHvH
g1tzZ+3v1S2y0r9zKz2/24hd112Sla5qU7wyc0b3sX6lUz2RksJV50blvdbv
aNcu3ZemZ03/9OZzlZ67kkCoh8ej15wVe8Djk+culhsefoun/Lh09+ictP5L
mx27UuNwOJ69evBzj/Rbc1YWO7mW2rdWXqowVk6uqSxNqKgOJ3j4E8LVlzrt
WTI1b1Tm08fad4lsss9Un11zYFC3oV9aebLipurLB7a9mdHt3jG7PO4e/uQf
Xt47fkH68JyUU5XV95XsnLIqfVB2UnGVLmTcRXnh1fk7QeZzp86VRiOTjJDI
2jgj63DP5549/uwz3V7uNym7+bHymo94QG+sKduf+1r/iVEiqnjTjPysXl0P
Pds1o+fIt/MTS6rDKntG78xMTw812Znu/m+2LT1j8F0zCssNmubV5SU3lJRV
83fTcMXxzbN7D/jMmrPV9QA+atK8HQD+9cKTJQb4dzzgTtAWD90wfWhB754Z
s/qPnrF9+vPp/zKt8Eo9o70yds5WRvv+niNnbbRv+zUF/gfP5WbN6Dk2L/lM
ZfW/lh1Zcmrg012/OflweaieIV8bPWsLQ/5w9+E4Q5ZPPDQp/ZeDt11k/Rzf
Fedm988UDfCeh6z+n3Prh8/oNTYv6WxVzVevHFu+Oav39OZHysONGfK+7XtP
xZAxxa3/0LzpWXvT09LyemSO+e7ig5cF2ogS1DHeGTI1jzH+a+uekzZGPJ34
vnRfMmDyerr/T86OY43ovjVtzCq6D5uycFcjum/r7rs/Pzt7zzV0f3jV1sKo
7kHy7e4ycgWd2i7LO9yIMfd2HpF9Dd33PPPCtYxu3TvPz9nfiO4G+3Nvr9nX
iO4HOw1ffg3djz2ZtSxu9yD5jmonxHIjxizsOFS695ux9N1GdD/ZYdDSa+h+
oXX/RdfQ/fxjvvuLr8zbeQ3dkX31dfemVcKnz5aUffPg8fPy7g++rfqhjPlx
h5AR9ItAT6ffb8g/YV/kfc1DGfMmjpu7rRFz2xCPrth8JDjElUf6LEDmRBsA
6L4rwwtf71bVrk27UEJ5u3btQomrOw3M++j5koht/DcwjWOAkz3RIHCYjjX3
Xto1ZknPoWuTzlSppk7A0jDDOfQ+Wc4xCDw9P+dALALTR76x2RCIa1w3jTGu
wyj6l/Mmpb+T9sK8O3YWVwRMivfHqI7BSrZ7AKuLrfstRAvEmLSO/mUPFeZM
Ozi4a4+Oo5cewmQ1S+7vam0ruMMnL9gFeJkzl70besCzyvVlV6poK2ndbxEg
R7sGt1SX7s1+Z3C3JwYvOx2qNLP2b29/i7X6RQ+l2UkikRRKLHDazrfpv2jx
wMnrrzbGf3KpYErvcW8ew4Gh9Xtl+8fkpvXPTThX/cEb4/GXwxAdMH1JQSyi
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
8ev054L9G3C0gl3lbxVeoev+P7g6aCw=\
\>"]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"(", "  ", 
         RowBox[{
          RowBox[{
           SubscriptBox["dx", "pp"], "[", "t", "]"}], "-", 
          RowBox[{
          "dr", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], " ", 
          "+", " ", 
          RowBox[{"\[Lambda]", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              SubscriptBox["x", "pp"], "[", "t", "]"}], "-", 
             RowBox[{
             "r", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
            ")"}]}]}], ")"}], "//.", "SDATA2"}], "/.", "Sola"}], "/.", 
      "CONTROLDATA"}], ")"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.617911044743541*^9, 3.6179110790889463`*^9}, {
   3.617912002113709*^9, 3.6179120051055326`*^9}, 3.617912126576795*^9, 
   3.617912175874844*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
zUvREssvkbmVXkdEf6Nbxx3ItL3Uq09LE6ibJVzIoFjW/OvqaAdwJe25By3k
balZXOvdSe3p7oLmMPQKEQ/ykdd16d08rF8a6kHgmbDjrh+Yl+R7kFT91Koh
gUT6+lgQ70Gi/+xdF6dMzbDa7kGCI5tvG5xGZ9q5E8/dV9q5fbE+YLMbcezi
2/E6HXMJAxaxuhMfZtGM9tjlRIw3MIfFeJ5QJ7+3I3q11dolCujVeVZE7ZpV
orMRuh9OEcVls2YquKHDyw8TucKIE9+eoNVrNYiE5abXAZ/RCqrbCT9/scCe
SXTR7U2E89Up6xHpp9QDTspk1GiiKH4/WlZpL+meClhuaI9OXXSQNMasdp79
EK0VdoiUqufVZb1H59UakLd9RhvPD6AbvfTIy4Bfd5aIJOH4I/tI/NbbXaU7
0YauhIQ1Su5mWaB15i4nPq6ZD9YHohnGb5VdZHTGWrPRrEeC5OKn77pB7WjP
ZiViZuOSrDovGZ8flg45vGgxz+/NaEOrE0QzK8U04QT64+BZonxSDYxuUbOq
xm3IuplNi+ekov222hOpxMsXc+rQJ9c7EkHteSVWM1Lo+NOl1wj3UOzKpavR
qm7OZPyeslu5LjXL8bEL6VWuanR1QrvuYJHmb5ZbN8ai3UJZpPImZ0B7MbUK
13cWKZC73xs8gnncCleSUb5h716JZzQf2e1KfLt71deoUTOc/+VnOB5rLrDG
PDqGRZhiJlqjwdQsnwUuRGiTmHYDYP1XIyfSr1V9ILcDnZdkT9rS3idUcqXi
6yPGlhx4E7vqnSj6its5kv3J9UmGPDr+mzFZWXdC7skutLi4Pgls354UYYAe
m61GpgeE1/pZoP1PKBPLvyPJrs7opOU7Se3sz/J2AWiHZG2yWyj12Zl4dHH3
EfJM6o6CURb6ovJpIrbO4vm+UnTIGWtyc/veDcxW9JrFdmRwr/QLhVF0bakD
OaE/Y9Ny3uf4fvnhGvlo3PRykQSa44QL2WKVvZlnA3p7iQuJvhqaPq6KjlC5
TvhuXt7aZ4QO/mhPHAN0M5ut0KJlZ0hn5Lptla7oBAFD0H06N6sgGH08yRnY
Gd1KGYnUrNiXfrC6oDA7ETCXFguFkPIY5YgK6lxll4fA8ZUFvh1o4ZFosO4+
znT9Qy35NDoO6keU3lyal0Y/v5vePAY1DmGVM8uoo9buTYQ0vpFcw81peH+b
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
eqDq5RAYz1iv/SMB74drLSf7pvHbv0PJ1FybWnnZSW8OJk+m4frCQ/nZnyVa
j83KpP7xVFaAPX794lw+oP44rryILfmVI0coj9pg2y8htppyoOXS99R2S02E
2efvLxeTLaa+Z5Egwg4Yf/FRoYL6T+FzUfZroz2O22qow1O2irFbMqtW7Wqg
fnVfUozNJXz6i2YL9RctPVH2misjnnod1G430oXZejU3FI/1UDvPXy/Edtws
1GX2kzr4deJC9r8fH/eshqm1n/PNZRcObdlr/wfv844Jg92r+37UeQrPq/7e
Z1iYdjj+Fmflf1Z+/G2QbFvQdcifh5opr8nBNLZxmBU2j7qo7CYP82YZz6tH
C6llzYPmMpPkw8yeLKb+eL+Fj1l5Z5XgC3FqqZlf5jPHel/nZy+j1l73Yz5z
qZbmpQIZ6vIoj/lMtaf1UiVy6LKF85nneS0rqxWoL84v52PGg1C65hZqwe2a
fMxmm7ywN9upI76ozmMKS1tf37STeuZazzlM3VoRk0Q16sqzNTxMH693eyS0
qD2TR2Yy3xFb2cCD1A5SBtNkakB8Ls9hav51V34Rxdiin9eOUTM+fnSHi4ft
Pv8yoY7qejwIT3klM86cpR7NWs5gt8On8Ibz1Lvu5M5kS9hecda5SK1/0Imb
bSi93PTdFWquqVge9t3aUlWl67ifUF8e9kcvx1XP3KjVN9/mZs9kysyT9qTO
+9Mxi838VTEQegdzkVFO9pXY61XzAqmHpaU52KmHV2W6heJ6PtxisHt4q+//
fkC9R63hL0izWS7nY6jXPNozDsdt15z6lkDdwtkxAiHSdWoGKdTtPYcGoLzW
ffWnF9TmnSatwOu9jk/lNZ5H1PMLsJvZ8OslmzrVpKKTXPt1s3pVAbXNsfYR
kh674XXkB2rjdL2/ZOBwU4RAGXXPvFkzmKvmeLE8q6jPnF7LwTRlbzb7+4Wa
11aLgxlh+23vxWZcT6r3DGaN9B257+3UasGCDOb8OsX5x3qodRjLJom6d/tg
+U/qgQtHfxM3pn+N6gi1x9yqQZLza3tW1jh13VX/PjIS+/3BOsZnup8E5U5i
PmfHaZE51DrhyytJNLtH3ZefOrchJJ002Ias4RSiZjXmZoPgil38DmLUKvu4
q0C7rm+oV5Ja/c/Av98T3mG1JjLUDhtvfIe3TNXsGjnqqDV8fTD+ayBy33rq
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
YwtcpXLfMf55/g/EfkozpIuhLLp4gI724IjhsuRYvB8/DTqaRO3aTw9+4vuJ
uURHW7KIO/BfEmXuSBU6WuqGywXDyZSZeAXpaC9i6fW/pmB/GlV/QEEzbPF6
Ot5f1e4/sGpc7f2OLJzfEZXfUOg8vbcpB/MvP7oETiKfsz3zcV4VvxdAo/j4
1TNFWK/+23nYcKd/hrWU8qxDzyzUsrg4F5RTFhRnmwGvr4d3v67C+d1fOQVX
Tjanydbi/G7mj0On7Z6JxCbMx/VwAEJ2lr+534rz21zTBbcyLfn3d+B76sxv
gb1622GwC+t96FAJo8uyz4b24nw2XcuEH75Gw3oDuN5bwhYsjq57vX0Y1+8f
TyESzYnbG0bRnPklZMlKJ8FjAt/7D/YakrqF8bTGNMZ53zaRl0nf+tbM4bxy
I9vIiQtnbPIWcJ56JzoJ8+w816vfOB8O925S5OH3Q2ZZO/V+yj17ifNBReXF
5ZTpbl3oJ5qVw50/V1IevVk3QDbee//k3irK6vu4h0gdu9RGkdWUTVr4h4l3
VHtk/1rKvsbTw+Sqmv2JYHbKMp/cRgjvsEjrtfWU2fp/j5Cut9WWWzdR1rqw
dZSE7nnCXrcZbcc/Sm7n831156bcO7NhlOy7mS+rvh3PW941QsYYTRtYeNEF
90dIbPAm8xx+yqJuLcPkgTxt9Ytd2J8J3zCR6NQPkhai3ConO0SWbFik54Up
W/+SGiSpO2Kq40QwrrJugLxI1bpreoByqlR2H1G4+odx70GMe5ztJat+B/n2
Hqb891PvJoXeykcCJXA+YSpdxElyouwqoRylvKyTaNR/vLVFBuv91NRONjyU
WV4ji/VxtLaR2k09Xq7yuP/PijbiFf9OTFUR78NCuZVcOStWtOoU1hul00J0
tqj4JqhQ1pnRaSbX2q7fu6FOmaf+73vQDXmqsFET53+yqZHo3/mwOess3k+l
UiO5/l/U4D0tjAcVNRCDudwU3kt4nq12AzFMaXMt08Z+W8bqyc1X89etdfC8
pOf15NapdUdE9NDJy+uJEbvw6ubruH+ncR25UyPX8tYQz6uOryXGn7VjJG9j
vrMVNcREz+JV/x10UkI1Md3tpPXRBPvLu1RFzEZC9ijew3h9VAUxj0v9PX0f
z+sJLyMWj+vKgizxftifF5MHx8YDzzzG/aMZucSSkcVy+VOsZ+3KdPKoiO9U
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
P+O/csL0n/ae78V4P++rmknvYHbpwTL8/moDukhusKhFcgXmH5ccIKE6n7Yc
r8bve2nLKLHjYkjLq8V5P1UdJ4aVdwzUG/C9TByeJIqONSw1Tfg+suqnyC7F
Y9HarZRDlY7MkJX04ec62/E9FZ+dJd2/1i/e6sL7djgwR7LvP/Ub68F+v5bN
kWCRXgXLfsqCpw7OE9u+04O/B/H3xfLqPDEI+OXyagTr268xTxS0dx5ePY73
p886T3Zucmp0naTsOe45RxjKZp9vnsH3FD46SzoddHf5zqFPc86STLnCQoFF
3P+BfYYE/j5o9u03ZXXe5inyMuHLJrFl/dQ8Xz6bJPpmqyBpOeVc+ZlxIid8
T/fYSsrWDQpjhL+7kTGXCX25ZZgw+Cp8U2WhLCrc3U86L0RpVK3BfEmB3SSg
6MXndg7KqU5B9eTt/oXLXzZQlrG4WkIs3ptxX+akTFflGUWuzvU1cG5B69In
g6L2Na+qrXje75FSOJBWe9GVB/dzRdXBlp3qXGp8lNW/BbYCg31OHYsA5daj
7R0wPCj9MVcQ61N93w016vFar/ag36T3QmrsXk7ZfZRLy4374StnUM1vUcpR
Ql8GwM2K+8Ov/7CfFK1BsGp1O2d5CNf3+Q6CgRzLxoNHKI/ufjIIaqE2VWOS
uH/3xACIr553j5TGfpKYBmCHiemZ28ewvtqMPmCu7F0nKIfzCRXqhcnDOhWd
Crj/4fFuaPKqcfU7iU5d3wnZf1Q1rihTNtka9Pf3Sy+bfYsaZZ6o6Saw2RPn
7H4Gz4sVKgcjJ2H10+fRU59z4OxEAOvai+imtliQPr+lJP8y2tDMhQj+cnV8
fRWdFpBI2Lczq8rpYn1tnllk3ub5mmXXcf6SIYWks3u2EG6gd7CVkSIlk7eP
bqE11lWQ+MieU4fvYH3ixpXEl+Mqy+Rd9Ov9VcTeojo/ygzn63+nipjVqzjc
uY/3/fFAFbksnXVSyBLr2etcSeT9pVb1PML5Fb6vIPtWxuYGPMG4h0Y54by1
x07HGvefqSoly4r9T2x9gXGWC8Wkfz8XY/0rrM+vMJ/AHJOt5hv0G9MMEqxt
Lc/miPtTo1KIc9oMQ5EzOrk5gTzceTfT3g1950sM0bXvfqHggfkDTnwlp4a0
jy//iB7j8iNip6voU73QyefcyLY45XQrH/Ro01PCuDnz+RE/tEybMoxaSR6b
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
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.6179110543571978`*^9, 3.617911079422399*^9}, 
   3.6179111697007227`*^9, 3.617911248516157*^9, 3.617911317027478*^9, {
   3.6179119897364817`*^9, 3.617912005362533*^9}, {3.6179121232424603`*^9, 
   3.617912126886284*^9}, {3.617912172876437*^9, 3.617912176317878*^9}, 
   3.617912211425848*^9, 3.6179122479253187`*^9, 3.617912282255371*^9, 
   3.617912316301105*^9, 3.617912978596897*^9, 3.6179132117660103`*^9, 
   3.617916512803877*^9, 3.6179197879478188`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SubscriptBox["\[Theta]", "11"], "[", "t", "]"}], "/.", "Sola"}], ")"}],
     "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "20"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6178441706726418`*^9, 3.6178441768132677`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 1.48},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.61784417829582*^9, 3.6178869799797897`*^9, 3.6178881295060472`*^9, 
   3.617888221300181*^9, 3.617888461224971*^9, 3.617888755514883*^9, 
   3.617889047201548*^9, 3.617890627307892*^9, 3.617891651578566*^9, 
   3.6178917628325167`*^9, 3.617892094590106*^9, 3.617892390243908*^9, 
   3.617892675360808*^9, 3.6178927986247063`*^9, 3.617893593370359*^9, 
   3.617893689052362*^9, 3.617898567889043*^9, 3.6178989893596773`*^9, 
   3.617899026629781*^9, 3.617899060974449*^9, 3.61789910595228*^9, {
   3.617899136467901*^9, 3.617899162829281*^9}, 3.617899324640449*^9, 
   3.617899597488843*^9, 3.6178996351970177`*^9, {3.6178997783948803`*^9, 
   3.617899780753593*^9}, 3.617900558406042*^9, 3.617900724388363*^9, 
   3.617900767968779*^9, 3.61790991458711*^9, 3.61791070868147*^9, 
   3.617910774975897*^9, 3.6179108222482643`*^9, 3.617911083295238*^9, 
   3.617911171701882*^9, 3.6179112506019697`*^9, 3.617911319069269*^9, 
   3.617911989760283*^9, 3.617912129008628*^9, 3.617912178344322*^9, 
   3.617912213576724*^9, 3.617912250084219*^9, 3.6179122844218693`*^9, 
   3.617912318248568*^9, 3.617912978627459*^9, 3.617913211786481*^9, 
   3.617916512825534*^9, 3.617919787997542*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SubscriptBox["\[Theta]", "21"], "[", "t", "]"}], "/.", "Sola"}], ")"}],
     "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "20"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.61784418708843*^9, 3.61784418721551*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
WZ71NLGFgkXPqbXPx8l6Cm+uDX6g4No5K44rT5D5DQpbszspGLsy5VMi0Z9L
7iw3Eemm4BA3reoB0afS4Xsk3H9S8Gmo/NWqKbLejnN9lb0UNAriny4jerbM
rKBWuZ/k7/zv9NtE7yZKtGUcH6LgrdAPYqFEH+/9xQ9pZVPQ9efw51VEPy+p
1nAyHaXgfa3RRROEpdPWmsfzKOhwqW75daK/fx05OL9fQMGUwaK5JkSfl29M
HrT+S8EPkyufFRJO1H38+rYQFef2G4VRiN73mum8MyNKxbbnsR6RhJd1CEe6
zqai5WhE/DvC8x/RXMslqCiz7AxFWpSsH79piaI0FU0cNFdYEa7Yf1T+6AIq
2p+fJbqTcDJe47yTp+KBkTmXvAnvU33WaKxMxYy/GtL7CC8b+5V3Xo2Kxbed
UrcSlmmWONunQUXbJ6/XmxHuzTXbs0aLipIXk+z+kf0ronasyNSl4iC/o7qK
cPKuMJW/+lQclm957kt436Lb4y7GVFQvzTohSTguUWF+uCkVNfIVRu4Qfx/8
jtXPZFLxvM6GbaaEW3F61YtFVIzsppYWkHjxrh3e1beEiquLDjA1CauO/jw2
14qKO7x+9Z4h8QW7HYnGQMWbz1YNdJJ8xP6zeh5oTcV0F/7m/SRf952KvqTa
UnHDM5u+NJLP90XaY2UbiX3XnRc/I/lW2StBm9lCxYMvYwJ/k/pYWRWOWo5U
/B31MLmfT+pVgeti7UzF5xJVLd2knvJft8dfcKMi/ai09l1Sb82UjTkP9lAR
p232h5F6HDlZ/azFi4oJP5Yw144KYLlx9oiSLxVDIv3qH3IE0Jgc6JwVRMVL
JZK3Zg8KgNPfe+R1CBWjz1h9i+oXgPwalwsD4VRczynw5v4WwO5xqDaLpiLf
9fTTol8CYLnM03maTPZ/pTVdTM6b7KPIFd8vUfGe/jydL50CsJQa2yF6lYry
WZX2Ex0COFX95fz6dFJPrlaz5Mn5ldHOY3+8S0X9blGbjiYBMIdWV7JqqUid
k6KZTe6LHdaPPyx4RcUnyVeXWZYLICTDgGXRQPx5Vni9+rEAXjjIUEPfUfFI
pUNwKbl/tpd+jZndReqpoyduRa4AgiKCt1LGSb70Yz6/TBaA/lCY1Dk+FTU/
bQ+7lCCAzy5Rr4anqGiTlKLoHEfOy6K4ZZUiWqjqvz741RkB8Aeva+2Q0ULT
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
DMeAxTz4HxBA6Mo=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.92},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.617844187720093*^9, 3.6178869800555964`*^9, 3.617888129587069*^9, 
   3.617888221338929*^9, 3.6178884627346354`*^9, 3.6178887575242147`*^9, 
   3.617889049826503*^9, 3.6178906289772263`*^9, 3.617891653493938*^9, 
   3.617891764304257*^9, 3.6178920962647953`*^9, 3.617892392083845*^9, 
   3.617892676937602*^9, 3.617892800401466*^9, 3.617893595174111*^9, 
   3.6178936910068903`*^9, 3.617898569606139*^9, 3.617898991803113*^9, 
   3.6178990290246687`*^9, 3.6178990625643682`*^9, 3.617899107344224*^9, {
   3.617899139726659*^9, 3.6178991653759193`*^9}, 3.6178993269936533`*^9, 
   3.617899599212823*^9, 3.617899636685318*^9, 3.617899783005637*^9, 
   3.617900559925087*^9, 3.617900725850844*^9, 3.617900769478017*^9, 
   3.6179099146240387`*^9, 3.617910710614705*^9, 3.617910777592348*^9, 
   3.617910824523624*^9, 3.6179110858373957`*^9, 3.617911173839546*^9, 
   3.617911252395851*^9, 3.617911320919408*^9, 3.61791198978961*^9, 
   3.617912130634865*^9, 3.617912180185082*^9, 3.61791221611899*^9, 
   3.617912252094842*^9, 3.617912286409932*^9, 3.617912320845583*^9, 
   3.617912978656542*^9, 3.61791321180962*^9, 3.6179165128554077`*^9, 
   3.617919788051635*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
       "\[DoubleStruckF]Control", "\[LeftDoubleBracket]", "1", 
        "\[RightDoubleBracket]"}], "//.", "SDATA2"}], "/.", "CONTROLDATA"}], "/.",
      "Sola"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "20"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6178432905808907`*^9, 3.617843310812179*^9}, 
   3.617843984033798*^9, {3.6178996536678553`*^9, 3.617899666859922*^9}, {
   3.617899757435238*^9, 3.617899758530698*^9}, {3.617900604685948*^9, 
   3.617900624118897*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1:eJwVmnk4lG8Xx4mftNjJvhRjG2XGiJR6TpSiTUqLqAgVkbRQSaSIUKlQmTF2
JUu2bDmSbSZrSkgpW5I9W0Lv8/411/c6c+77bHM/9+e5ZqXDWSunRTw8PKf4
eHj+/8n0dRCgOz7dFGpEmW3+kossm8H1B1UuEyGjgzXf8nOxbVeIp4pKMPHk
+emDf+7mote2w8L/qTwmvj4KLdAzyUWzCrCdVn5GHBgbpexNzsFTtbfuT5i+
IBTCLKhG13Pwzgdu1djJTGK294Ke+CHS7vlcZupTNuFZfevNoyU5mH5DP2BU
uZAo30u92O2ajaUCnxRHXhYRxywkgvZuycbGkMsFQ6YlhESvxnCWQjaOR5QO
DZxEwmCsPXtz3Uu8cYdWMeFTRnhdXFh8NuklhtT5i01sfUN0B0vM+l17iQ9E
mo/+Fi4nFt/6PGJr/RJj9qq9GP9UTjx7V//TQ+clJj64+GeM/ZaI+aUxMqOd
hekfq8zGTlcQ8z6KkebdmZgvLfNwVK+SCBfPtS7OyMTSw6e/j/ytJOZPP/3v
yZVMrH5atGakooo45pFd2WuWiY1flvkMh1UTCSvzJp5IZOJ3+4wVQ8ocIqdz
206DjAwcSPh3YrCfQziP+LZJ+2TgeK/ly18vucTE6uFFhy0ykN/l944B01qi
Q9XBePxHOqp7rvP/cbKBEO1+dtRSIx0NNn+fHP30nqjjD6LfyEvDq3tdj/9S
biNMrobt/b3kGS4EGMh2hrYRnk9EfPS+pqJfPu/793/aiMqcmIDy7FS8KR9t
WtTcTrh73ux9Z5uK4b0V6sFBHYRYsbIrJzcF2ZeVhtRHOolnZ+6+HD+fjGIt
E1ZCa74R5UYbLmzflYxWZ210gxy/EcEef3pG1ZPxYxyl/0rTN0L/wkKu0eck
bBcoOeyQ9p3woowuLd6WhN2N/cb0Y92EfG6aVgktEdVcdsumPeomCOd7lw+L
JKIzX+6kWm038Zsx2LVvOAH7117PkDHqIdj8vH/PpCfg4BMpFR6JXqKdaHLN
1k3AKUcTvoaqPsJs/9Kmqa3xaLiQ0rl9vo/In7m/6rx2PHpHCZWUM34QoURH
6k6RePzLab2Qz/5B8Fmeu01rj0Me3bN9zCv9hL7Nhcc5F+JwyZ+nnDNrBohL
dqFRF1+zcV1Q2xUL+wGiIP7Gx/fP2HhKSlpH8+EA8cL3v3WRkWysokeEd/8Z
IN5sL841PcfGmy6399lU/iJm78ynWFDZmDtTyb9u5hdR/vQ/Va4cG7sD+fKl
qIOEtdXN11lL2WiS4CvTdG+QuOYgQXH9FIs8HRe+bLMdIu7uqo097RSLNJfs
cMrdIcL8QPYfvh2xeGxmhOArHyJWPIyy8aXHYqmka3ypxjBxlTKbwscbi0Px
qftibIaJJa6/f4kMsFCB3sd/JWyYWM2JiRpvZuHVXfYn1/4eJg6auypffc7C
559ZMhLqI8TVt4umJaNY2H66gzN6aISo2b/9za2bLFwXeFDnRekIET96+ynD
gYWnJB99CR4bIbQd9zPdrVi4c+/paob4KPFR4ad/tCm5fmeyt9jWUeL5RTok
aLIwInnrXr+jo4TX0e7wMAVyP7cerRGvUUImfvGfU2IsLNcPWHT0/ijh9jhA
aPNicv+/Kz/XPh8l6keTaiQXmDheXpazoWKUmNgrIlg9ycQlIcdCn38ZJRI3
aG5zGWaiyt4FR9npUUKR38NFpp+J62SYG2+LjhFjrcLGb7qYaNm5YcW01hgx
K0kVOfmViaeS24edTMeIz86zEYPtTPRzu1z9wXaMSFa+33m5lYlR+jJs00tj
xPKhDyPKn5iY8TffO/vuGCG99YRRfgsTq8qt9658NkZc/+J+3JS0fw2e0LpX
PkYIaFeXNJP+U5YPFv37TOobf4fdPjNRWEbvs9vkGPFu0HmoldxfvbMxp0N4
nHgx63U3ppuJm5LPhu7QHCdC19PHNH8y0dpN2Klo8zjBz730rHaEiWf00zdq
HRknrgm7qp+fZuLNvztWRF8YJ9pHzq9R4WFhTPnAsED4OMEp3N/SvISFucHB
1RdTxomCNaHydyVZWGupye4pGyfCFPVrrVRY2C1d7b2vfZyYOjjfpbSahbNf
nfaW/x4nutb2WE2sZ6F4Mr82Xeg38f5l8eVmcxZquyUsYqv/Jg4a3dxTcpiF
Jvomn4XhN+Gn+Kky04WF58qvhw56/iZqNz++kX+XhTNiD9M/3/lNlPl3LD2R
wEJf+9R6buJvovOByWbRAhaG8jSJPmv5TdT43ljq3sNCCcteevTIb+KsTp2T
8hwLn8T+sQoSnCBE5I7W1EvGYuqmVY+c1k8Q0idWOumZx6JuuEH+/n0TxOGo
v7PdjrGY/8Xik+mZCWJcqirxoX8sVvicl13FmiCEu05Y/Xkdi9+KKphfeScJ
29W+mw6sZOPJpW2ldXKTRHOrs5sWg43Dh4c6SxiTxPH9OoFXt7JxbkZq1VOn
SaJGaI1SpCsbZQxPJh/kTBJRecqFSeR5EBt4tdqsa5LwvCI6crSZjeotd/vX
/p0k/rv24t39n2zUv1igLbl6iiiRMv90UjoOLXOWZDbemyKq1sulFnrH4adF
So34bIo409cqtS4iDo9a6Y1llJN2mid39Ys4PDNmwwibmCJk8jexLn6Pw9u6
L16ZH5omhIITBjz3xiOm7S4rV54hhm4e9nE1S0Czvw7fX66bIZbfP2H82zkB
ay28FsXtnSE8xu3e9wQlYPvP2C3XA2aInFsZlxa9I89LjbGaDT9miPOqPGJi
BxJxTeKDptyMP8RCcrBvmm8SSkbTpss4f4jglSyd1NQk/HunTqGu5w9hv/rf
eZXmJKw5v/hUr9wsIb7h2fddWsnoYHp1QSpoluiM5UYGtCfjoy4Hqtexv0Ta
nY5LB/ak4pyK3i0j0XlCb/nskZYradgl2fB8K3We2K5L16BmpSFH8EzjXrN5
YvGWce+a3jSMHE2Sd/GZJ8SU7jNb975AWpls9pP+eaKwui129ep0PHGMt/Nv
2QKxrpGt/GEkA3t3n1LoXMcD3t0rD0rteYmSVWfUfLfywBoxG3kz15dosvGc
jqIVD2zPXfbudtBLZFOvGB9x5YGAtwXeBmUv0VYw1PYTkwe+2TV9iNDLxvdv
MmMaFvHCpWnz8WHZHCzVn1Yoq+WFlByBTI+xXIySC1SMO84Hj274f6G9LEAj
z4JMvloBsLiapNNlXoZvPz21PKuxFN75EcKOBW+RHrqwScZcCPSPWXz296tC
vdNzjukHhOBGiYlB9Z0q1DebDTFxFIIUOYVWgagqNOCZajlzXQiabx/b451e
hcYXhtzf5AmBVaLe1dm2Ktxu28FyWSUMRvVTv7Lp1Xhcp2ih5K8wXPqUb0D5
XI0OSwrUrJaIwAyvQujZ3mo80Zdn8WOFCCj0ZK7KGqlGZ/bLSDE9ETii6qMh
wV+DZySfrXE+JQLLFinFHNKpQa+5qKMiH0WgkBEYk32lBrf1re+kHRSFgkyb
yufLOejc/GEwyE4Uzr2JKkuV5ODNMvfZrydEYX9V8MJDBQ6+eRIvFeYhCqqp
zy6t0+Hghj1Ld/4MFoVui3n+TAsO6ha0FcSVkPZJP4OWAA7uTjpfNVMuCobK
y/iehnDwTITQhz0cUeDbmtJnfp+Dz85sHpn/KAqldxPYx1gcVF35jGIzIgr/
5Z2QdnzFQRNhU8bLSVH4eTjmsfNrDh7/2wGCc6KwzJ8RsestB5kfRW3zBcWg
nWF5hlvPQekQ7wjxVWLQ2hIbdbGHgwZe4uzTmmJgdudiSNRPDu53fJFetkYM
woRBPmaYg/c3fatx3yAGDVtY+ttnOJhFvdJSuVkMpp3MoofnOFgvI9mjsF0M
TqnLeV3k5eKy39v+cfeLgY2x9xrVpVzU/vZ9+aojYiC4kHdsmzAXt9ddlbts
LwbLvTaYmYtz8VZK5loNdzEwUOWo/JDlYuJDc1PfC2KwfiG/31+Ri+X+3ZYf
r4iB+aE68xkVLv47In0mIEgMNrz0PuulwUUl85eX28PEgHyU8vhpc9HYYEcQ
/aEY6Ea86XdYzUUb1d6Ht5+IwbLwaH1lGhcvi16P72SLQYctf0muHhej52Wy
DFLEYAF2q6iu5WL+QPbrsHQx2Px5UayLIRd/V/S1bigSg3Orvqzx38BF8Wy/
vogyMah6W/xq90Yu0mLlJn5WicEbnb0N45u4uDs0l3dznRh8Tdve7gZcdLu8
WyS6WQzKo6+q4GYuhjr3K4y0icEh8eo1vSZcfL7vhrbZNzH4/vHEr05TLtaA
wjpmnxjc2avDk7mFiz9W52+dGBSDFv+94VZbubjqmpsT9TeZ3+gXlRpS29aq
3XL4Iwb5rjM7xM24GCnfkfj4nxiwW3pmaaRudHlQ0fifOIQU571TJfXSIoue
xcvFoUzF/dsA6b91ySJ+Qlwc3kbtWhFIar9DhaqXZMThj3Sx8QS5f1GKh2m6
kjiotkS365N6YkrjRI+aOGwue/x2GxnvGrPOG/JUUr/nKKwm8zn1KDLeii4O
Elu3dPaQ+Sf07CoPNhSHCdVfKu4EF78y/usq2ygOu15yr9eQ9ZMJKOGdMRWH
PqWA6d9kfa3en1+payEOizZPa48akfVaSd3sbCkOh1T30V6T/ajy6DrOPCAO
FfZvLtuQ/eIpe+z3wVYcgqSVTlST/Vwvspe97IQ4vDJs7+Uj+33xqGCZyWlx
eLNOol2EnIesdOy8fJb8vs7T3F9aXByYu/Qv66I4TMWkiEapc/Ho095NyjfE
YcsrXv3DyuR8DMQcPXBbHApSJ/+dledis9F+37BwcWiIjgy3libnubX89d8n
4mCfqZBxh5xvuhTbuDVHHNKy1h6MnSV/z44HbUWKxCGqvjJPfZKDyTnCPmZl
4tDdeczk6ggH5ayuFefWisNaQ9X7od0c5L9rs/5+rzgIuxSl7+NwcNNXMZua
X+LQvoxPYVs5B71Xcy7/GxOHYfJgFyzm4NA7w0K3BXG4KaEmOJHGwRZBqXUW
0hJgenKh6twdDooeqj3orygBOQ/14z7c4KBFSoBXgaoEnLAzWSRwhYO4dTxf
nSYBCr9T4j6c5GDqjYa1fOYSsL98z36NzRy8OhfMKLkiAf6b9hxsHajB+gsn
Hl7xl4DumHWam77WoMqQ8eS62xLgl+pT4N5UgxVfRvLzHklAncftIPqrGlyO
1uszsySAM/qdx9yvBln+KzfH90lA3IOvxRuW1ODon9m440MSsD1n+bmgP9Vo
4vlhkfKEBCzhf3wt+Wc1/nAIqnjKKwmZvaXr7DnVSNsytO2RgiTU/r3Z1BpY
jW8ECnfftpKEAas/Ye6zVSh5PSLT7LAkxPceP7upvwqdp11F/zsuCcfFX7gP
fqzCpf1K7/3dJKGg+fXGvqwqtOLctL56WxLGl1ZscnCqwp47lrbupZIgfIY/
aBWnEheL9Z/ery0FLxYrSeb7VeBUkO3WWJoUeKG6iqRbBfYtNKoMGEiB4c3l
oycPV2DVYOGn66ZSsDc7Q3iSXoGBNXe2ptlKwev/bn9O6HqLAn66KxfdlYJZ
kQH1dhNSj1xqzfwtBWO7J+/n85bjf3X/bVv2egW8vmrGIyqDuNwt5sSXtyvg
1n9WRdHDpSgpxPDL5K6AzXHbXxlVlqLaruOF+1pXgGnDWimuZyluqSuixvxe
AcW9GT+0G17jjbqzoqu1paHooIuLUVgJ8tS3te2OkoanPh+PHVQpQkF3jykV
ljRohfM9Ys4WoqjwYonfidKQXfx3nO9jIars1t8ZlS0NRtsGBhghhUjUh5d2
1klD87IiM+2pAvStN03w4JcB64cOZQEfXuHf+vQzEedkYKNAa49+Wh4qNdk/
3eItA9FTobLOIXlo0izFnfKVAeclK2OLTudhyKdrGkdCZeCru+j7Ks08lPm2
q0s1RQZ29qllXkjNRYOxoYN5HTJw+KlhoHZGDnpIrDFt3SYLXndXbxx9/xIf
SnWdC9ktC0ejuhuO5L/EV9KRbGNrWVg+ZnKl//FLXJBfmGc7yEJzXcHtk/Yv
MUytvuD0NVn4K8/zcWYsC5+vdV/zN1sW2gwHBM/KZmHvwQxZJSU5uLQiknmS
Lx2TD82X26rJQefqO1p/Pr7AU4d3nnmqLQf8qwn9qtQXOGAzUCpjKAcTSksu
iu95gaN26o4SlnIwapfXeJOVhnMnWBmCN+RAdvz+SOz25yjhEW76u1cOtgSe
erruXQp+8PgySB+Ug/pX0TpXk1Iw8pxOpMe4HPyNHAyZv56CMue5/UMLciAc
GLaZszYFlS4JhPdLy8OXFS/wQmIyavv4tn4xl4f0y33De8OTcPNtd7eadHlw
vWdXlRCZgHLZnQfDc+XhcesiS3WvBJz4bGmyv1gejBTddvMeSsBkXYb0txp5
uLDral+tXAIu/zRdNt1NrhfzZTo9MR57eU6nvR6Qh4PH1PyEbsdjqXb7o4Ax
efJ5UEitd43Hc74lLiL/5KGBTpPx0I/HFoq/pIacAhBrPgiZcuMwc8/4wqCK
ApjtlpFPzyLv85dP/MzWUICNH3gbr0fF4Ya6raWb1ipAcUZN5gHnOGRfWHrq
gKUCbChjHmkUjMMrrKtWCgcVINqAR9hznI37agaNu+wUoBReP7jdwUYBhQYx
d1cFmDwmdUMkm42ubx8U3wpUgLw41fvLHdi4ZYg/eUcYGU9xrJ/WHjYqSV+6
J/ZQAWyCKCa5xmzy+XjIiRmnAPUNdo5asmx8/pCz50SqAvzU9lQTF2RjQOn6
9VqZCmCkcFW5ezgWDcQVRfJKFODl3LNQncxYFDEO/3PlrQI0Obr/eXUvFvud
/nUDVwHaH0RPGJyPxaeF3wtqPylA5zeRDzIbYpHHPtmhZ1wB9IK1FEJaWNgW
Ir3r+R8FsIu3M+9EFmbn3jb04FGEOw7xxeues9BJ0HX5nJAicH57CPLeYOEm
vY6pN5KKcLNL85/7WRbK2O76HiSvCM5LL1f02rGQm6mbL6GlCGfOddM6NrIw
sY3NbtNVhDVF04ccdFl4jU/8TqyBIvh8f39gfiULD6wOuOi0URGm698RWVIs
pB2cOEbdoggOqfde3FjKwiX+ThZjFoqw6HdOxE2St7uet+i/2qsIU4Y6gUEk
j5d82KZ87ZAiNPAdvG9P8vqjhYIlpscUwV3A1/xaPxOXa1S6P3JSBAnvtRKG
JO/f3NPU/MNVERRc5RwrvzLxr9eXdes9FYGYa1vY8JmJnuyfzFBvRdDp1L72
upWJP2smF3X6KsI56tFYxicmHh/jPUW/pQhXbQeOpLcw8ZOscF3AHTKeI2p7
tUj7bhM5vZb7ipDavE0zmvSvdFGP0oxWBN/o75n85PrGD/TmrrAUITC+3+s0
uX9O8Sb7ukRFEMsUUmzuYqJ2j0WVcpoiJAtQSnaT8cctP0j1fKkIxVdSrr8d
ZqLM2hP3Kl4pQtOK2jX6U0y8a3d2ckUp2S/T7SuTF5goEHjV5nSFIjzbcVFJ
QpCsd0YQFnMV4ZKH7ZdIcRZOtDxQE25ShB9XnstpKrHQ9V9s8PFPiqCZXsR9
qU3WV+PFcPYXRfi4mOu5eR0LD1sW7PuvRxH2H4zYWWPGwkbvioKDA4rgbfpR
3e4AC5HTcWNuShGyPo7dKPZmocF4/4/d84qw02DQ3uMOCzPkJnfG8SnBynal
DdRYFsa4CkmbiSrByGjAjVccFko8lPWJXqEElfuaykK/sTCkhPJ9QEEJfGsF
KCdnWOgttCntrpYSnHL6dciQGosjay1Eu3SV4MGXU3XaZrHofPTARX0DJQjS
NX6v5hCL+zPdiTYTJXhN57moz4xF+t7Y5lW2SrBqX0NSvQgbUy+nrbvooATt
4v7tR1eyUSX+FbP6lBKU/VaR8WSwUfh3w8kzF5VgsaL+6VWH2TjwkGcuL1wJ
xn9GGgQ+Z6P96+X2go+U4GfQHkHFMja29spU2TxVgsCWywlGLWysMqDf+5dC
6tcLzzr44jC+1V7N/I0SnJ+R/s7vFIdHFN7u7PitBFtKun4pbYrHAbex8bxZ
JcCMNfL1dvHojcqP7/IqQ675BzEB33iMdPDpNRFRBhtfu+NLyuLxfepa32fa
ylCnJvl2i0UCWqxNzbxkrwzD144JRl1KxLbAFmvLU8pw1FOvezsrEU+18s9p
nVUGkaiPQmerEjHwqv32Lz7KsP7H2ZtyMklY/kbuu2m0MiT/CjV/V5aE63eH
iYs1KEPki9DwG+opyIktLhj4qAxNhlstllmn4KGxn0crOpSBnu8XPhmQghcf
mqV5DSjDnfaSJaNdpH3o38qRRSrQ357ddjgpFR8yCouslVTgxqjG5+n1z3F5
GXVwlbUKHOZf6XY9Lh27Hu+tuX5IBf756WyhtaXjq/NeiR1HVCBKYPslJbEM
dNB4axvpoAKbH7/jzfHPwFfhNnVLPFTAuz7maIRTJjrYBWeMhqjAec1Yk5Sn
WVgw2+dRWqYCN1/IR9N9s9FpbfzkYZ2VsNM16Psy93z08vW2UplcCWqlDlf/
Nb7GWwMPmuvrV8GM0a0DK+6V405tkdTlT1SBvp/vtURQJR6uOZuqxVSFtpe9
hYP3K9HZuTHVjK1K9kPrLcZUol/8/Wd+yarwkPb+7YHsSsyVk0ybyFYFlRv7
F2/5UokKy2QzOt6pQomZd6+EXhUO/lqV+2JeFWjMoLCgT1X4Jzggl8OjBkZl
FSXp36tQQLMnt49PDS6u9JOp/1WFKo5JeSpL1cA2793s3L8q3N+h8erhCjVY
2G1BiGpWY0mtTpGPrhr0qH9s5fGqxrB0g7Kd9moQ3dhGdRCpQfXjmvbpjmog
v9zriqtsDZaKyy0SPqUGjrKSe06rkvdfr3nTBnc18CtKOAaGNbjfpKJ6r48a
rH03u+Tk0RpU+LS34UCUGrRmvJ8zf16DecGmHq+eqEFvjLNEYE4N7jZeKybD
UgPe0ydu55TUoF+czL62RDWI+njAq7O+BntcO1uOZKuBj8hoxcXxGnzB4/b1
eJ0aUCtEgzYYcHBrztHrbxrVgN/dt89mEwe/OlmqrPqgBgLHslsczUh+eMdw
6G5Xg+DQpIh1Bzh44dFsr1O/GthYfhV+d4GDQtsHA6t+qYHo93Iehg/JN7Nf
NDRG1GDkzVDtjQAOth57c7p/Ug2+GC4RbrvPwQ3at4dc+CjQIrdidn06Bz90
XA5/J0CB9U2use9ySF6666qrs5QCgQ5f30MRB1kTu88NiVJgv8f0xY9VHFyE
UpNnlSggsH7iTMBXDj49tziycSUFHNU8Tiv1cFBf7Y8BnUKBvI+bnP7/PsM5
uMN7nEqBF7TSLasmOMjdlzB3wYgCrNvJA2GLuZh9q6v9qTEFFqZbm3EZF5+8
WllYTlDg/CdzgSYRLrrIsy+KmlHg1saX2vdI3rPa1bnP0JwCYT5/AjaQPLj+
upLe0Z0UGKi7lfRWiYtLumOG06wocDXMWPEUhYujkh21760pIJ+WR7upycVW
M/m0P4cowMMWnrlK5WKZt02wii0FhJO+Suxew8XU549PbjtGAcWgw4N/SH69
19G61d2BAsEaF0OuM7joLSyj9siJAqEH0rW+kvy73TPyW5crBVTuhU9T1nOR
lvixdMlZCthNZy8IGZN83SLJpHlS4NPXwcN1JG/zCO6/evAiBdz3qck4kjz+
w+jBYV9vcr1oJYcmktfrXd8bJl2lgIHL8vuSJM/nM8VW1PpS4NilrpjVJO+z
Giwnxv3J+qmmpMtv4WIg7733srcokL3ZeutXUrszGrLgNgUu3PvncnErFw84
Cd89eYcColHdu7+RelPULrfwcAq86peoVzLjojondEfefdLf5NhVOqmF/77T
6nhIxvczckKa1FM6ywT5oikgWTHf0Ej6fz1q0af1lAJxwqnCtqSuvBdcYcmi
gOBB6dBCcv8X5TXxXnEUiArs/PmDjPfhxGJ/ViIFHK500/vIfHzUtx2rTKGA
vX37lpzNXHQ8FLhx8DkFMgMPKVmS+e8MqZSXyKDAg43uPriJi/ol/LNGLynw
UPSWCi9ZP4Vh09bjuRQoPC/1WnwDF/lVAvKDXlHAtnXDk/F1XBzcW/4wo4gC
O1quXI0z4OKHAN7zH19TIOJ5NaGsz8WSPNg7V0aBryU9F13oXEz4cV1XtYIC
ibxrFvmT/Q+RRSGLagpIa1pKOZPz4blj4ZcHl0LeT4d55cn5Mcn0SS1tpMB8
8PeIERUuan8vDuxtpoClc12viCIXxSX+Oi7/RIGkx0/y5mW42HXp8kqbL2R9
3ReXrRXlIje14J/fNzL+zZHqt8h5z26f/pLSTQHPBP0X8QJc9N906cnkTwo8
zZBrNpnj4CmPPG+FIQr8Ddb5XD3FQcv4iQOmoxTAO/MW0mMcVBE4L3F/igI7
Z9fbyvRysKzubKgOnzp8miN+pnHJ36MkLIsSUIeDh11lpso5mGojGsK7VB0E
73WG8BVz8O6PrKAWUXVI1w99eew5B4/yjt/wU1KH+rrC0j2BHHy/rZz310p1
cOZUxGWT54tZeISfNUUdZDMHfrV5cnC1PMNXW0cd/knzHbh0lINz+hcufzBS
h+DBrzZ/9DjocXXLzKaN6uD9zCfrpgYHe95Iej0DdVB9WiXXLs/Bd7vzLvhu
U4dl2+SS2vg4+OTU1FlNa3U49K9ys35TDRrFeDv7eKiDh+Z8b689eX52be/t
O68O7W11uhL7alBFS9Zxr5c6bFBsviSypQYF8wvt1X1JO59q7EVKDbY2zNo2
3lGHzd1vwpb2VeMlvmv71FLUgd5+xHrgaDVmu/hD7Rd1mFZiU6/qV6G+w/Ea
9e/qUBK5+BJlZRXmHyYs/XvUYcs460ueUBUWbp8/ZvBLHezuVXve6avEMvXL
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
H6EGm6xxJpb+Vv/z7x85z0VWBil/mfg/0voSDA==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, -0.21},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.617843316201661*^9, 3.61784378836267*^9, 3.6178439337727013`*^9, 
   3.617843995398952*^9, 3.6178441243705606`*^9, 3.61788698024971*^9, 
   3.617888130671205*^9, 3.617888222352319*^9, 3.617888464762048*^9, 
   3.617888760156204*^9, 3.6178890527614603`*^9, 3.617890630863002*^9, 
   3.617891655964385*^9, 3.617891767261509*^9, 3.617892098535277*^9, 
   3.6178923942611103`*^9, 3.617892678888913*^9, 3.6178928024684668`*^9, 
   3.617893597285417*^9, 3.617893693470936*^9, 3.617898571779191*^9, 
   3.6178989939371977`*^9, 3.617899030767048*^9, 3.617899064234194*^9, 
   3.6178991089335527`*^9, {3.617899142521146*^9, 3.6178991673679943`*^9}, 
   3.617899328894678*^9, 3.61789956843008*^9, 3.617899601102037*^9, {
   3.6178996384851017`*^9, 3.617899667856863*^9}, {3.6178997590868196`*^9, 
   3.61789978514139*^9}, 3.617900562364534*^9, {3.6179006077775297`*^9, 
   3.6179006246412582`*^9}, 3.617900727441193*^9, 3.617900771335567*^9, 
   3.617909914826995*^9, 3.617910712573077*^9, 3.617910779934985*^9, 
   3.617910826649418*^9, 3.617911088838873*^9, 3.617911179774198*^9, 
   3.617911254465354*^9, 3.617911323569152*^9, 3.617911990009109*^9, 
   3.6179121328593607`*^9, 3.617912182341275*^9, 3.617912218041553*^9, 
   3.6179122541005793`*^9, 3.617912289339087*^9, 3.617912323020859*^9, 
   3.617912978855753*^9, 3.617913211971243*^9, 3.617916512998303*^9, 
   3.617919788441143*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
       "\[DoubleStruckF]Control", "\[LeftDoubleBracket]", "2", 
        "\[RightDoubleBracket]"}], "//.", "SDATA2"}], "/.", "CONTROLDATA"}], "/.",
      "Sola"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "20"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.617843329062439*^9, 3.6178439857472*^9, {3.617899678979925*^9, 
   3.6178996803636007`*^9}, {3.6178997540499277`*^9, 3.617899754259919*^9}, {
   3.617900575861053*^9, 3.6179005846221037`*^9}, {3.617900627500842*^9, 
   3.61790062765193*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.02},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.6178433297198267`*^9, 3.617843788475688*^9, 3.617843933935199*^9, 
   3.6178439976970787`*^9, 3.617844124583467*^9, 3.6178869805062532`*^9, 
   3.61788813184051*^9, 3.61788822337985*^9, 3.6178884665968847`*^9, 
   3.617888763495162*^9, 3.6178890546707993`*^9, 3.6178906330487843`*^9, 
   3.617891658105839*^9, 3.6178917704101458`*^9, 3.617892101137663*^9, 
   3.617892397160562*^9, 3.617892680504787*^9, 3.617892804534268*^9, 
   3.6178935991961727`*^9, 3.617893695548019*^9, 3.617898574058077*^9, 
   3.617898996084074*^9, 3.617899032967012*^9, 3.6178990661927767`*^9, 
   3.61789911069324*^9, 3.6178991450574417`*^9, 3.6178991754166203`*^9, 
   3.617899330902169*^9, 3.617899570254277*^9, 3.6178996045402308`*^9, 
   3.6178996445925198`*^9, 3.617899681106531*^9, 3.617899754796679*^9, 
   3.617899788020236*^9, {3.617900564885646*^9, 3.617900584996085*^9}, 
   3.617900628122409*^9, 3.617900730745606*^9, 3.61790077604987*^9, 
   3.617909915129223*^9, 3.617910714759314*^9, 3.617910782079012*^9, 
   3.6179108289820127`*^9, 3.617911090678255*^9, 3.617911181934525*^9, 
   3.617911256459696*^9, 3.617911326575596*^9, 3.617911990314185*^9, 
   3.617912135474614*^9, 3.617912184229884*^9, 3.6179122202688513`*^9, 
   3.6179122559432573`*^9, 3.617912291525551*^9, 3.617912327145653*^9, 
   3.617912979048922*^9, 3.6179132121211233`*^9, 3.617916513196781*^9, 
   3.617919788797043*^9}]
}, Open  ]]
},
WindowSize->{1440, 841},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"10.0 for Linux x86 (64-bit) (June 27, 2014)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[557, 20, 1517, 45, 99, "Input"],
Cell[2077, 67, 330, 6, 32, "Input"],
Cell[2410, 75, 1108, 30, 99, "Input"],
Cell[3521, 107, 1236, 35, 77, "Input"],
Cell[4760, 144, 2269, 57, 122, "Input"],
Cell[CellGroupData[{
Cell[7054, 205, 127, 2, 32, "Input"],
Cell[7184, 209, 1491, 44, 138, "Output"]
}, Open  ]],
Cell[8690, 256, 305, 8, 32, "Input"],
Cell[8998, 266, 2490, 75, 101, "Input"],
Cell[11491, 343, 928, 25, 55, "Input"],
Cell[12422, 370, 470, 15, 32, "Input"],
Cell[12895, 387, 565, 18, 32, "Input"],
Cell[13463, 407, 427, 13, 32, "Input"],
Cell[13893, 422, 963, 30, 55, "Input"],
Cell[14859, 454, 4714, 121, 275, "Input"],
Cell[CellGroupData[{
Cell[19598, 579, 127, 2, 32, "Input"],
Cell[19728, 583, 3185, 83, 144, "Output"]
}, Open  ]],
Cell[22928, 669, 752, 16, 32, "Input"],
Cell[23683, 687, 610, 14, 32, "Input"],
Cell[24296, 703, 1865, 52, 143, "Input"],
Cell[26164, 757, 2208, 58, 88, "Input"],
Cell[28375, 817, 1216, 39, 104, "Input"],
Cell[29594, 858, 2035, 54, 209, "Input"],
Cell[CellGroupData[{
Cell[31654, 916, 158, 3, 32, "Input"],
Cell[31815, 921, 1674, 33, 60, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[33526, 959, 173, 4, 32, "Input"],
Cell[33702, 965, 1957, 45, 135, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[35696, 1015, 153, 3, 32, "Input"],
Cell[35852, 1020, 2092, 47, 101, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[37981, 1072, 129, 3, 32, "Input"],
Cell[38113, 1077, 1393, 36, 134, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[39543, 1118, 170, 4, 32, "Input"],
Cell[39716, 1124, 1105, 32, 128, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[40858, 1161, 131, 3, 32, "Input"],
Cell[40992, 1166, 2121, 50, 132, "Output"]
}, Open  ]],
Cell[43128, 1219, 1447, 41, 265, "Input"],
Cell[44578, 1262, 419, 8, 55, "Input"],
Cell[45000, 1272, 3052, 92, 258, "Input"],
Cell[48055, 1366, 1234, 37, 56, "Input"],
Cell[CellGroupData[{
Cell[49314, 1407, 227, 4, 32, "Input"],
Cell[49544, 1413, 5505, 99, 227, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[55086, 1517, 227, 4, 32, "Input"],
Cell[55316, 1523, 5033, 91, 222, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[60386, 1619, 10988, 315, 685, "Input"],
Cell[71377, 1936, 1519, 33, 94, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[72933, 1974, 170, 4, 32, "Input"],
Cell[73106, 1980, 3315, 87, 98, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[76458, 2072, 701, 17, 32, "Input"],
Cell[77162, 2091, 3999, 118, 192, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[81198, 2214, 414, 10, 32, "Input"],
Cell[81615, 2226, 4429, 118, 162, "Output"]
}, Open  ]],
Cell[86059, 2347, 743, 21, 77, "Input"],
Cell[86805, 2370, 719, 20, 77, "Input"],
Cell[CellGroupData[{
Cell[87549, 2394, 262, 5, 32, "Input"],
Cell[87814, 2401, 1753, 44, 135, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[89604, 2450, 262, 5, 32, "Input"],
Cell[89869, 2457, 1756, 44, 135, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[91662, 2506, 283, 8, 32, "Input"],
Cell[91948, 2516, 1106, 28, 128, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[93091, 2549, 1460, 35, 55, "Input"],
Cell[94554, 2586, 10241, 292, 402, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[104832, 2883, 1171, 32, 55, "Input"],
Cell[106006, 2917, 1551, 34, 128, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[107594, 2956, 243, 6, 34, "Input"],
Cell[107840, 2964, 3270, 86, 98, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[111147, 3055, 216, 5, 32, "Input"],
Cell[111366, 3062, 1783, 45, 101, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[113186, 3112, 265, 6, 32, "Input"],
Cell[113454, 3120, 1740, 44, 101, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[115231, 3169, 294, 7, 32, "Input"],
Cell[115528, 3178, 1702, 45, 169, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[117267, 3228, 293, 8, 32, "Input"],
Cell[117563, 3238, 1892, 48, 169, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[119492, 3291, 562, 16, 32, "Input"],
Cell[120057, 3309, 2508, 61, 176, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[122602, 3375, 175, 5, 34, "Input"],
Cell[122780, 3382, 3233, 85, 98, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[126050, 3472, 1055, 28, 34, "Input"],
Cell[127108, 3502, 4909, 128, 248, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[132054, 3635, 749, 18, 34, "Input"],
Cell[132806, 3655, 5976, 157, 238, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[138819, 3817, 324, 8, 32, "Input"],
Cell[139146, 3827, 6094, 172, 250, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[145277, 4004, 350, 9, 32, "Input"],
Cell[145630, 4015, 1318, 35, 230, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[146985, 4055, 414, 12, 34, "Input"],
Cell[147402, 4069, 1073, 25, 66, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[148512, 4099, 217, 5, 32, "Input"],
Cell[148732, 4106, 1407, 34, 134, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[150176, 4145, 219, 5, 32, "Input"],
Cell[150398, 4152, 1376, 33, 134, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[151811, 4190, 861, 25, 32, "Input"],
Cell[152675, 4217, 4025, 121, 304, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[156737, 4343, 563, 14, 35, "Input"],
Cell[157303, 4359, 2530, 54, 282, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[159870, 4418, 294, 8, 34, "Input"],
Cell[160167, 4428, 1066, 27, 63, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[161270, 4460, 219, 5, 32, "Input"],
Cell[161492, 4467, 2004, 55, 132, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[163533, 4527, 217, 5, 32, "Input"],
Cell[163753, 4534, 2030, 55, 132, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[165820, 4594, 404, 9, 32, "Input"],
Cell[166227, 4605, 3144, 91, 275, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[169408, 4701, 1189, 27, 32, "Input"],
Cell[170600, 4730, 15743, 422, 420, "Output"]
}, Open  ]],
Cell[186358, 5155, 461, 10, 32, "Input"],
Cell[186822, 5167, 974, 25, 32, "Input"],
Cell[187799, 5194, 426, 12, 32, "Input"],
Cell[188228, 5208, 344, 9, 32, "Input"],
Cell[188575, 5219, 864, 24, 32, "Input"],
Cell[189442, 5245, 476, 14, 32, "Input"],
Cell[189921, 5261, 1614, 44, 288, "Input"],
Cell[CellGroupData[{
Cell[191560, 5309, 117, 1, 32, "Input"],
Cell[191680, 5312, 3054, 88, 59, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[194771, 5405, 328, 10, 52, "Input"],
Cell[195102, 5417, 451, 6, 32, "Output"]
}, Open  ]],
Cell[195568, 5426, 1423, 33, 167, "Input"],
Cell[196994, 5461, 707, 21, 32, "Input"],
Cell[197704, 5484, 347, 10, 32, "Input"],
Cell[CellGroupData[{
Cell[198076, 5498, 127, 2, 32, "Input"],
Cell[198206, 5502, 2728, 81, 290, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[200971, 5588, 246, 6, 32, "Input"],
Cell[201220, 5596, 3548, 109, 402, "Output"]
}, Open  ]],
Cell[204783, 5708, 269, 7, 32, "Input"],
Cell[CellGroupData[{
Cell[205077, 5719, 532, 14, 34, "Input"],
Cell[205612, 5735, 2866, 75, 92, "Output"]
}, Open  ]],
Cell[208493, 5813, 572, 13, 32, "Input"],
Cell[CellGroupData[{
Cell[209090, 5830, 638, 15, 34, "Input"],
Cell[209731, 5847, 24168, 680, 426, "Output"]
}, Open  ]],
Cell[233914, 6530, 588, 13, 32, "Input"],
Cell[234505, 6545, 464, 11, 32, "Input"],
Cell[234972, 6558, 1424, 23, 143, "Input"],
Cell[236399, 6583, 466, 8, 32, "Input"],
Cell[236868, 6593, 889, 23, 77, "Input"],
Cell[237760, 6618, 3880, 84, 99, "Input"],
Cell[241643, 6704, 1410, 32, 55, "Input"],
Cell[CellGroupData[{
Cell[243078, 6740, 608, 15, 34, "Input"],
Cell[243689, 6757, 22082, 367, 233, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[265808, 7129, 697, 19, 34, "Input"],
Cell[266508, 7150, 6314, 113, 212, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[272859, 7268, 1056, 29, 34, "Input"],
Cell[273918, 7299, 12797, 219, 218, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[286752, 7523, 376, 10, 34, "Input"],
Cell[287131, 7535, 21302, 357, 221, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[308470, 7897, 693, 19, 34, "Input"],
Cell[309166, 7918, 66280, 1098, 208, 49396, 821, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[375483, 9021, 1058, 29, 34, "Input"],
Cell[376544, 9052, 49131, 815, 199, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[425712, 9872, 423, 12, 32, "Input"],
Cell[426138, 9886, 21130, 355, 236, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[447305, 10246, 417, 12, 32, "Input"],
Cell[447725, 10260, 19735, 333, 236, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[467497, 10598, 685, 17, 32, "Input"],
Cell[468185, 10617, 20404, 343, 227, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[488626, 10965, 709, 18, 32, "Input"],
Cell[489338, 10985, 19382, 326, 266, "Output"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
