(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    933728,      18795]
NotebookOptionsPosition[    923774,      18481]
NotebookOutlinePosition[    924107,      18496]
CellTagsIndexPosition[    924064,      18493]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{"ClearAll", ";"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Fun\[CCedilla]\[OTilde]es", " ", "Auxiliares"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Zeros", "[", 
      RowBox[{"i_", ",", "j_"}], "]"}], ":=", " ", 
     RowBox[{"ConstantArray", "[", 
      RowBox[{"0", ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "j"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Eye", "[", "n_", "]"}], ":=", " ", 
     RowBox[{"IdentityMatrix", "[", "n", "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"NRow", "[", "M_", "]"}], ":=", " ", 
     RowBox[{
      RowBox[{"Dimensions", "[", "M", "]"}], "\[LeftDoubleBracket]", "1", 
      "\[RightDoubleBracket]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"NCol", "[", "M_", "]"}], ":=", " ", 
     RowBox[{
      RowBox[{"Dimensions", "[", "M", "]"}], "\[LeftDoubleBracket]", "2", 
      "\[RightDoubleBracket]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"NVec", "[", "v_", "]"}], ":=", " ", 
     RowBox[{
      RowBox[{"Dimensions", "[", "v", "]"}], "\[LeftDoubleBracket]", "1", 
      "\[RightDoubleBracket]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Inv", "[", "M_", "]"}], ":=", " ", 
     RowBox[{"Inverse", "[", "M", "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Diag", "[", 
      RowBox[{"M1_", ",", "M2_"}], "]"}], " ", ":=", " ", 
     RowBox[{"Join", "[", " ", 
      RowBox[{
       RowBox[{"Join", "[", 
        RowBox[{"M1", ",", 
         RowBox[{"Zeros", "[", 
          RowBox[{
           RowBox[{"NRow", "@", "M2"}], ",", 
           RowBox[{"NCol", "@", "M1"}]}], "]"}]}], "]"}], ",", 
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"Zeros", "[", 
          RowBox[{
           RowBox[{"NRow", "@", "M1"}], ",", 
           RowBox[{"NCol", "@", "M2"}]}], "]"}], ",", "M2"}], "]"}], "  ", 
       ",", "2"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Diag", "[", 
      RowBox[{"M1_", ",", "M2_", ",", "M3_"}], "]"}], " ", ":=", " ", 
     RowBox[{"Diag", "[", 
      RowBox[{
       RowBox[{"Diag", "[", 
        RowBox[{"M1", ",", "M2"}], "]"}], ",", "M3"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Diag", "[", 
      RowBox[{"M1_", ",", "M2_", ",", "M3_", ",", "M4_"}], "]"}], " ", ":=", 
     " ", 
     RowBox[{"Diag", "[", 
      RowBox[{
       RowBox[{"Diag", "[", 
        RowBox[{"M1", ",", "M2", ",", "M3"}], "]"}], ",", "M4"}], "]"}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.619986888858355*^9, 3.619986937742791*^9}, {
  3.6208622510697403`*^9, 3.620862251320599*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[ScriptR]", " ", "=", " ", "\"\<RR\>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.619988241975613*^9, 3.619988276852051*^9}, {
   3.619988350280943*^9, 3.619988373628128*^9}, {3.61998933591542*^9, 
   3.6199893375671043`*^9}, 3.6199897649617853`*^9, {3.619989950468712*^9, 
   3.619989952676086*^9}, {3.619990313907851*^9, 3.619990329298974*^9}, 
   3.620647261148293*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SubscriptBox["\[Nu]\[NumberSign]", "\[ScriptR]"], "=", "2"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.619987493743024*^9, 3.6199875213242283`*^9}, {
   3.6199875948214073`*^9, 3.619987612326543*^9}, 3.6199899315093727`*^9, {
   3.620000100029065*^9, 3.620000104947908*^9}, {3.62064387405824*^9, 
   3.6206438941854258`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   SubscriptBox["N\[CapitalOmega]", "\[NumberSign]"], "=", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["N\[CapitalOmega]", "o"], "=", 
   RowBox[{"Complement", "[", 
    RowBox[{
     RowBox[{"Range", "[", 
      SubscriptBox["\[Nu]\[NumberSign]", "\[ScriptR]"], "]"}], ",", 
     SubscriptBox["N\[CapitalOmega]", "\[NumberSign]"]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["NV", "\[NumberSign]"], "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["NV", "o"], "=", 
   RowBox[{"Complement", "[", 
    RowBox[{
     RowBox[{"Range", "[", 
      RowBox[{"2", 
       SubscriptBox["\[Nu]\[NumberSign]", "\[ScriptR]"]}], "]"}], ",", 
     SubscriptBox["NV", "\[NumberSign]"]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.619987817182276*^9, 3.619987822124941*^9}, 
   3.619987911985024*^9, 3.61998887145755*^9, {3.6199890245856657`*^9, 
   3.619989026527156*^9}, {3.619989083638814*^9, 3.619989235292613*^9}, {
   3.620000131257608*^9, 3.620000133258144*^9}, {3.6206455615166807`*^9, 
   3.6206455637380323`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   SubscriptBox["\[DoubleStruckQ]\[NumberSign]", "\[ScriptR]"], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["\[Theta]", 
       RowBox[{"\[ScriptR]", ",", "1"}]], "[", "t", "]"}], ",", 
     RowBox[{
      SubscriptBox["\[Theta]", 
       RowBox[{"\[ScriptR]", ",", "2"}]], "[", "t", "]"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["\[DoubleStruckQ]\.ba", "\[ScriptR]"], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["x", 
       RowBox[{"\[ScriptR]", ",", "1"}]], "[", "t", "]"}], ",", 
     RowBox[{
      SubscriptBox["y", 
       RowBox[{"\[ScriptR]", ",", "1"}]], "[", "t", "]"}], ",", 
     RowBox[{
      SubscriptBox["x", 
       RowBox[{"\[ScriptR]", ",", "2"}]], "[", "t", "]"}], ",", 
     RowBox[{
      SubscriptBox["y", 
       RowBox[{"\[ScriptR]", ",", "2"}]], "[", "t", "]"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["\[DoubleStruckQ]", "\[ScriptR]"], "=", 
   RowBox[{"Join", "[", 
    RowBox[{
     SubscriptBox["\[DoubleStruckQ]\[NumberSign]", "\[ScriptR]"], ",", 
     SubscriptBox["\[DoubleStruckQ]\.ba", "\[ScriptR]"]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["\[Nu]\.ba", 
    RowBox[{"q", ",", "\[ScriptR]"}]], "=", 
   RowBox[{"NVec", "@", 
    SubscriptBox["\[DoubleStruckQ]\.ba", "\[ScriptR]"]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.619987930981162*^9, 3.619987944094617*^9}, {
  3.6199880154057302`*^9, 3.6199881005739727`*^9}, {3.61998815641471*^9, 
  3.6199881630225887`*^9}, {3.619988214597332*^9, 3.619988215171255*^9}, {
  3.619988284935587*^9, 3.6199883303426113`*^9}, {3.619988384876814*^9, 
  3.619988413428207*^9}, {3.619989958933701*^9, 3.619989983194068*^9}, {
  3.6199903360531693`*^9, 3.619990359869707*^9}, {3.620000085607553*^9, 
  3.62000008932543*^9}, {3.6200001611159973`*^9, 3.620000206970707*^9}, {
  3.6203323276808767`*^9, 3.6203323278734093`*^9}, {3.620643914008573*^9, 
  3.620644031948002*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   SubscriptBox["\[DoubleStruckW]", 
    RowBox[{"\[Omega]", ",", "\[ScriptR]"}]], " ", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["\[Omega]", 
       RowBox[{"\[ScriptR]", ",", "z1"}]], "[", "t", "]"}], ",", 
     RowBox[{
      SubscriptBox["\[Omega]", 
       RowBox[{"\[ScriptR]", ",", "z2"}]], "[", "t", "]"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["\[DoubleStruckW]", 
    RowBox[{"v", ",", "\[ScriptR]"}]], " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["v", 
       RowBox[{"\[ScriptR]", ",", "x1"}]], "[", "t", "]"}], ",", 
     RowBox[{
      SubscriptBox["v", 
       RowBox[{"\[ScriptR]", ",", "y1"}]], "[", "t", "]"}], ",", 
     RowBox[{
      SubscriptBox["v", 
       RowBox[{"\[ScriptR]", ",", "x2"}]], "[", "t", "]"}], ",", 
     RowBox[{
      SubscriptBox["v", 
       RowBox[{"\[ScriptR]", ",", "y2"}]], "[", "t", "]"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["\[DoubleStruckP]\[NumberSign]", "\[ScriptR]"], "=", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{
      SubscriptBox["\[DoubleStruckW]", 
       RowBox[{"\[Omega]", ",", "\[ScriptR]"}]], "\[LeftDoubleBracket]", 
      SubscriptBox["N\[CapitalOmega]", "\[NumberSign]"], 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      SubscriptBox["\[DoubleStruckW]", 
       RowBox[{"v", ",", "\[ScriptR]"}]], "\[LeftDoubleBracket]", 
      SubscriptBox["NV", "\[NumberSign]"], "\[RightDoubleBracket]"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["\[DoubleStruckP]\.ba", "\[ScriptR]"], "=", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{
      SubscriptBox["\[DoubleStruckW]", 
       RowBox[{"\[Omega]", ",", "\[ScriptR]"}]], "\[LeftDoubleBracket]", 
      SubscriptBox["N\[CapitalOmega]", "o"], "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      SubscriptBox["\[DoubleStruckW]", 
       RowBox[{"v", ",", "\[ScriptR]"}]], "\[LeftDoubleBracket]", 
      SubscriptBox["NV", "o"], "\[RightDoubleBracket]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["\[DoubleStruckP]", "\[ScriptR]"], "=", 
   RowBox[{"Join", "[", 
    RowBox[{
     SubscriptBox["\[DoubleStruckP]\[NumberSign]", "\[ScriptR]"], ",", 
     SubscriptBox["\[DoubleStruckP]\.ba", "\[ScriptR]"]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["\[Nu]\.ba", 
    RowBox[{"p", ",", "\[ScriptR]"}]], "=", 
   RowBox[{"NVec", "@", 
    SubscriptBox["\[DoubleStruckP]\.ba", "\[ScriptR]"]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.619988569697084*^9, 3.619988636908499*^9}, {
   3.619988691267239*^9, 3.619988800428926*^9}, {3.619988970731729*^9, 
   3.619988993534202*^9}, {3.619989245275338*^9, 3.619989250716702*^9}, {
   3.619989991126631*^9, 3.619990042631958*^9}, {3.619990259774776*^9, 
   3.6199902627814283`*^9}, {3.6199903683031807`*^9, 
   3.6199904079694843`*^9}, {3.6200002713249273`*^9, 
   3.6200003196033697`*^9}, {3.620000358521228*^9, 3.62000036359785*^9}, {
   3.620000397925127*^9, 3.6200004203618727`*^9}, {3.620332335674347*^9, 
   3.6203323358827353`*^9}, 3.620337943548522*^9, {3.620644057000268*^9, 
   3.6206441306419573`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"s2Sin", " ", "=", " ", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      SubscriptBox["c", "1"], "\[Rule]", 
      RowBox[{"Cos", "[", 
       RowBox[{
        SubscriptBox["\[Theta]", 
         RowBox[{"\[ScriptR]", ",", "1"}]], "[", "t", "]"}], "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["s", "1"], "\[Rule]", 
      RowBox[{"Sin", "[", 
       RowBox[{
        SubscriptBox["\[Theta]", 
         RowBox[{"\[ScriptR]", ",", "1"}]], "[", "t", "]"}], "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["c", "2"], "\[Rule]", 
      RowBox[{"Cos", "[", 
       RowBox[{
        SubscriptBox["\[Theta]", 
         RowBox[{"\[ScriptR]", ",", "2"}]], "[", "t", "]"}], "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["s", "2"], "\[Rule]", 
      RowBox[{"Sin", "[", 
       RowBox[{
        SubscriptBox["\[Theta]", 
         RowBox[{"\[ScriptR]", ",", "2"}]], "[", "t", "]"}], "]"}]}]}], " ", 
    "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6203324213997498`*^9, 3.620332528333754*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Sin2s", " ", "=", " ", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"Cos", "[", 
       RowBox[{
        SubscriptBox["\[Theta]", 
         RowBox[{"\[ScriptR]", ",", "1"}]], "[", "t", "]"}], "]"}], "\[Rule]",
       " ", 
      SubscriptBox["c", "1"]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Sin", "[", 
       RowBox[{
        SubscriptBox["\[Theta]", 
         RowBox[{"\[ScriptR]", ",", "1"}]], "[", "t", "]"}], "]"}], "\[Rule]",
       " ", 
      SubscriptBox["s", "1"]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Cos", "[", 
       RowBox[{
        SubscriptBox["\[Theta]", 
         RowBox[{"\[ScriptR]", ",", "2"}]], "[", "t", "]"}], "]"}], "\[Rule]",
       " ", 
      SubscriptBox["c", "2"]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Sin", "[", 
       RowBox[{
        SubscriptBox["\[Theta]", 
         RowBox[{"\[ScriptR]", ",", "2"}]], "[", "t", "]"}], "]"}], "\[Rule]",
       " ", 
      SubscriptBox["s", "2"]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Cos", "[", 
       RowBox[{
        RowBox[{
         SubscriptBox["\[Theta]", 
          RowBox[{"\[ScriptR]", ",", "1"}]], "[", "t", "]"}], "+", 
        RowBox[{
         SubscriptBox["\[Theta]", 
          RowBox[{"\[ScriptR]", ",", "2"}]], "[", "t", "]"}]}], "]"}], 
      "\[Rule]", " ", 
      SubscriptBox["c", "12"]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Sin", "[", 
       RowBox[{
        RowBox[{
         SubscriptBox["\[Theta]", 
          RowBox[{"\[ScriptR]", ",", "1"}]], "[", "t", "]"}], "+", 
        RowBox[{
         SubscriptBox["\[Theta]", 
          RowBox[{"\[ScriptR]", ",", "2"}]], "[", "t", "]"}]}], "]"}], 
      "\[Rule]", " ", 
      SubscriptBox["s", "12"]}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.620332851453024*^9, 3.620332894363069*^9}, {
  3.620332955133265*^9, 3.62033303818083*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   SubscriptBox["\[DoubleStruckCapitalZ]", "1"], "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        SubscriptBox["c", "1"], ",", 
        RowBox[{"-", 
         SubscriptBox["s", "1"]}], ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        SubscriptBox["s", "1"], ",", 
        SubscriptBox["c", "1"], ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], "/.", "s2Sin"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["\[DoubleStruckCapitalZ]", "2"], "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        SubscriptBox["c", "2"], ",", 
        RowBox[{"-", 
         SubscriptBox["s", "2"]}], ",", 
        SubscriptBox["l", "1"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        SubscriptBox["s", "2"], ",", 
        SubscriptBox["c", "2"], ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], "/.", "s2Sin"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["\[DoubleStruckD]", "1"], "=", 
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["l", "g1"], ",", "0", ",", "1"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["\[DoubleStruckD]", "2"], "=", 
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["l", "g2"], ",", "0", ",", "1"}], "}"}]}], ";"}]}], "Input",\

 CellChangeTimes->{{3.620332341806857*^9, 3.620332411303391*^9}, {
  3.6203325400373983`*^9, 3.620332645743388*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   SubscriptBox["\[DoubleStruckCapitalH]", "1"], "=", 
   SubscriptBox["\[DoubleStruckCapitalZ]", "1"]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SubscriptBox["\[DoubleStruckCapitalH]", "#"], "=", 
       RowBox[{"FullSimplify", "@", 
        RowBox[{"Dot", "[", 
         RowBox[{
          SubscriptBox["\[DoubleStruckCapitalH]", 
           RowBox[{"#", "-", "1"}]], ",", 
          SubscriptBox["\[DoubleStruckCapitalZ]", "#"]}], "]"}]}]}], ";"}], 
     ")"}], "&"}], "/@", 
   RowBox[{"Range", "[", 
    RowBox[{"2", ",", 
     SubscriptBox["\[Nu]\[NumberSign]", "\[ScriptR]"]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SubscriptBox["\[DoubleStruckCapitalR]", "#"], "=", 
       RowBox[{
        SubscriptBox["\[DoubleStruckCapitalH]", "#"], "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{"1", ";;", "2"}], ",", 
          RowBox[{"1", ";;", "2"}]}], "]"}], "]"}]}], ";"}], ")"}], "&"}], "/@", 
   RowBox[{"Range", "[", 
    SubscriptBox["\[Nu]\[NumberSign]", "\[ScriptR]"], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SubscriptBox["\[DoubleStruckCapitalR]", "#"], "=", 
       RowBox[{
        SubscriptBox["\[DoubleStruckCapitalH]", "#"], "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{"1", ";;", "2"}], ",", 
          RowBox[{"1", ";;", "2"}]}], "]"}], "]"}]}], ";"}], ")"}], "&"}], "/@", 
   RowBox[{"Range", "[", 
    SubscriptBox["\[Nu]\[NumberSign]", "\[ScriptR]"], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SubscriptBox["\[DoubleStruckCapitalS]", "#"], "=", 
       RowBox[{"FullSimplify", "@", 
        RowBox[{"Dot", "[", 
         RowBox[{
          RowBox[{
           SubscriptBox["\[DoubleStruckCapitalR]", "#"], "\[Transpose]"}], 
          ",", 
          RowBox[{
           SubscriptBox["\[PartialD]", "t"], 
           SubscriptBox["\[DoubleStruckCapitalR]", "#"]}]}], "]"}]}]}], ";"}],
      ")"}], "&"}], "/@", 
   RowBox[{"Range", "[", 
    SubscriptBox["\[Nu]\[NumberSign]", "\[ScriptR]"], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SubscriptBox["\[Omega]", "#"], "=", 
       RowBox[{
        SubscriptBox["\[DoubleStruckCapitalS]", "#"], "\[LeftDoubleBracket]", 
        
        RowBox[{"2", ",", "1"}], "\[RightDoubleBracket]"}]}], ";"}], ")"}], 
    "&"}], "/@", 
   RowBox[{"Range", "[", 
    SubscriptBox["\[Nu]\[NumberSign]", "\[ScriptR]"], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SubscriptBox[
        OverscriptBox["\[Xi]", "\[RightVector]"], "#"], "=", 
       RowBox[{"FullSimplify", "@", 
        RowBox[{"Dot", "[", 
         RowBox[{
          SubscriptBox["\[DoubleStruckCapitalH]", "#"], ",", 
          SubscriptBox["\[DoubleStruckD]", "#"]}], "]"}]}]}], ";"}], ")"}], 
    "&"}], "/@", 
   RowBox[{"Range", "[", 
    SubscriptBox["\[Nu]\[NumberSign]", "\[ScriptR]"], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SubscriptBox[
        OverscriptBox[
         OverscriptBox["\[Xi]", "\[RightVector]"], "."], "#"], "=", 
       RowBox[{"FullSimplify", "@", 
        RowBox[{
         SubscriptBox["\[PartialD]", "t"], 
         RowBox[{
          SubscriptBox[
           OverscriptBox["\[Xi]", "\[RightVector]"], "#"], 
          "\[LeftDoubleBracket]", 
          RowBox[{"1", ";;", "2"}], "\[RightDoubleBracket]"}]}]}]}], ";"}], 
     ")"}], "&"}], "/@", 
   RowBox[{"Range", "[", 
    SubscriptBox["\[Nu]\[NumberSign]", "\[ScriptR]"], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SubscriptBox[
        OverscriptBox["v", "\[RightVector]"], "#"], "=", 
       RowBox[{"FullSimplify", "@", 
        RowBox[{"Dot", "[", 
         RowBox[{
          RowBox[{
           SubscriptBox["\[DoubleStruckCapitalR]", "#"], "\[Transpose]"}], 
          ",", 
          SubscriptBox[
           OverscriptBox[
            OverscriptBox["\[Xi]", "\[RightVector]"], "."], "#"]}], "]"}]}]}],
       ";"}], ")"}], "&"}], "/@", 
   RowBox[{"Range", "[", 
    SubscriptBox["\[Nu]\[NumberSign]", "\[ScriptR]"], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.6203327237403708`*^9, 3.620332808850526*^9}, {
  3.620333093466914*^9, 3.620333112539384*^9}, {3.620334493746182*^9, 
  3.6203346915224743`*^9}, {3.620334732011705*^9, 3.620334762008421*^9}, {
  3.620335990248398*^9, 3.6203359904743547`*^9}, {3.62033613180028*^9, 
  3.62033617424502*^9}, {3.6203363315371037`*^9, 3.620336333038354*^9}, {
  3.6206451306331873`*^9, 3.620645139269877*^9}, {3.62064533403902*^9, 
  3.6206453384677258`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SubscriptBox[
        OverscriptBox["a", "\[RightVector]"], "#"], "=", " ", 
       RowBox[{
        RowBox[{
         SubscriptBox["\[PartialD]", "t"], 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            SubscriptBox["\[DoubleStruckW]", 
             RowBox[{"v", ",", "\[ScriptR]"}]], "\[LeftDoubleBracket]", 
            RowBox[{
             RowBox[{"2", "#"}], "-", "1"}], "\[RightDoubleBracket]"}], ",", 
           RowBox[{
            SubscriptBox["\[DoubleStruckW]", 
             RowBox[{"v", ",", "\[ScriptR]"}]], "\[LeftDoubleBracket]", 
            RowBox[{"2", "#"}], "\[RightDoubleBracket]"}], ",", "0"}], 
          "}"}]}], "+", 
        RowBox[{"Cross", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", 
            RowBox[{
             SubscriptBox["\[DoubleStruckW]", 
              RowBox[{"\[Omega]", ",", "\[ScriptR]"}]], 
             "\[LeftDoubleBracket]", "#", "\[RightDoubleBracket]"}]}], "}"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             SubscriptBox["\[DoubleStruckW]", 
              RowBox[{"v", ",", "\[ScriptR]"}]], "\[LeftDoubleBracket]", 
             RowBox[{
              RowBox[{"2", "#"}], "-", "1"}], "\[RightDoubleBracket]"}], ",", 
            
            RowBox[{
             SubscriptBox["\[DoubleStruckW]", 
              RowBox[{"v", ",", "\[ScriptR]"}]], "\[LeftDoubleBracket]", 
             RowBox[{"2", "#"}], "\[RightDoubleBracket]"}], ",", "0"}], 
           "}"}]}], "]"}]}]}], ";"}], ")"}], "&"}], "/@", 
   RowBox[{"Range", "[", 
    SubscriptBox["\[Nu]\[NumberSign]", "\[ScriptR]"], "]"}]}], ";"}]], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   OverscriptBox["V", "\[RightVector]"], "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{
      SubscriptBox[
       OverscriptBox["v", "\[RightVector]"], "#"], "&"}], "/@", 
     RowBox[{"Range", "[", 
      SubscriptBox["\[Nu]\[NumberSign]", "\[ScriptR]"], "]"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   OverscriptBox["\[CapitalOmega]", "\[RightVector]"], "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       SubscriptBox["\[Omega]", "#"], "}"}], "&"}], "/@", 
     RowBox[{"Range", "[", 
      SubscriptBox["\[Nu]\[NumberSign]", "\[ScriptR]"], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["\[DoubleStruckP]\[NumberSign]", "\[FivePointedStar]"], "=", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{
      OverscriptBox["\[CapitalOmega]", "\[RightVector]"], 
      "\[LeftDoubleBracket]", 
      SubscriptBox["N\[CapitalOmega]", "\[NumberSign]"], 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      OverscriptBox["V", "\[RightVector]"], "\[LeftDoubleBracket]", 
      SubscriptBox["NV", "\[NumberSign]"], "\[RightDoubleBracket]"}]}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   SubscriptBox["\[DoubleStruckP]\.ba", "\[FivePointedStar]"], "=", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{
      OverscriptBox["\[CapitalOmega]", "\[RightVector]"], 
      "\[LeftDoubleBracket]", 
      SubscriptBox["N\[CapitalOmega]", "o"], "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      OverscriptBox["V", "\[RightVector]"], "\[LeftDoubleBracket]", 
      SubscriptBox["NV", "o"], "\[RightDoubleBracket]"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.620336343653058*^9, 3.6203363438782787`*^9}, {
  3.620336416311893*^9, 3.6203366360506067`*^9}, {3.620645122216875*^9, 
  3.620645125276985*^9}, {3.620645673296217*^9, 3.62064572356929*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   SubscriptBox["\[DoubleStruckCapitalR]\[DoubleStruckCapitalR]aux", "1"], 
   "=", 
   SubscriptBox["\[DoubleStruckCapitalR]", "1"]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SubscriptBox["\[DoubleStruckCapitalR]\[DoubleStruckCapitalR]aux", "#"],
        "=", 
       RowBox[{"Diag", "[", 
        RowBox[{
         SubscriptBox["\[DoubleStruckCapitalR]\[DoubleStruckCapitalR]aux", 
          RowBox[{"#", "-", "1"}]], ",", 
         SubscriptBox["\[DoubleStruckCapitalR]", "#"]}], "]"}]}], ";"}], 
     ")"}], "&"}], "/@", 
   RowBox[{"Range", "[", 
    RowBox[{"2", ",", 
     SubscriptBox["\[Nu]\[NumberSign]", "\[ScriptR]"]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[DoubleStruckCapitalR]\[DoubleStruckCapitalR]", " ", "=", 
    SubscriptBox["\[DoubleStruckCapitalR]\[DoubleStruckCapitalR]aux", 
     SubscriptBox["\[Nu]\[NumberSign]", "\[ScriptR]"]]}], ";"}], 
  " "}]}], "Input",
 CellChangeTimes->{{3.620336932924377*^9, 3.620337017784919*^9}, 
   3.620645119914412*^9, {3.6206467155916233`*^9, 3.620646716105597*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   SubscriptBox["\[Psi]", "\[ScriptR]"], "=", 
   RowBox[{
    SubscriptBox["\[PartialD]", 
     RowBox[{"{", 
      RowBox[{
       SubscriptBox["\[PartialD]", "t"], 
       SubscriptBox["\[DoubleStruckQ]\[NumberSign]", "\[ScriptR]"]}], "}"}]], 
    
    SubscriptBox["\[DoubleStruckP]\[NumberSign]", "\[FivePointedStar]"]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[CapitalUpsilon]", "=", 
   RowBox[{
    SubscriptBox["\[PartialD]", 
     RowBox[{"{", 
      RowBox[{
       SubscriptBox["\[PartialD]", "t"], 
       SubscriptBox["\[DoubleStruckQ]\[NumberSign]", "\[ScriptR]"]}], "}"}]], 
    
    SubscriptBox["\[DoubleStruckP]\.ba", "\[FivePointedStar]"]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["\[DoubleStruckCapitalC]", "\[ScriptR]"], "=", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"Eye", "[", 
      SubscriptBox["\[Nu]\[NumberSign]", "\[ScriptR]"], "]"}], ",", 
     RowBox[{"FullSimplify", "@", 
      RowBox[{"Dot", "[", 
       RowBox[{"\[CapitalUpsilon]", ",", 
        RowBox[{"Inv", "@", 
         SubscriptBox["\[Psi]", "\[ScriptR]"]}]}], "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox[
    OverscriptBox["\[DoubleStruckQ]", "."], "\[FivePointedStar]"], "=", " ", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"Dot", "[", 
      RowBox[{
       RowBox[{"Inv", "@", 
        SubscriptBox["\[Psi]", "\[ScriptR]"]}], ",", 
       SubscriptBox["\[DoubleStruckP]\[NumberSign]", "\[ScriptR]"]}], "]"}], 
     ",", 
     RowBox[{"Dot", "[", 
      RowBox[{"\[DoubleStruckCapitalR]\[DoubleStruckCapitalR]", ",", 
       SubscriptBox["\[DoubleStruckW]", 
        RowBox[{"v", ",", "\[ScriptR]"}]]}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["\[CapitalGamma]", "\[ScriptR]"], " ", "=", " ", 
   RowBox[{
    SubscriptBox["\[PartialD]", 
     RowBox[{"{", 
      SubscriptBox["\[DoubleStruckP]", "\[ScriptR]"], "}"}]], 
    SubscriptBox[
     OverscriptBox["\[DoubleStruckQ]", "."], "\[FivePointedStar]"]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["\[DoubleStruckCapitalA]", "\[ScriptR]"], "=", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"FullSimplify", "@", 
      RowBox[{"Dot", "[", 
       RowBox[{"\[CapitalUpsilon]", ",", 
        RowBox[{"Inv", "@", 
         SubscriptBox["\[Psi]", "\[ScriptR]"]}]}], "]"}]}], ",", 
     RowBox[{"-", 
      RowBox[{"Eye", "[", 
       SubscriptBox["\[Nu]\.ba", 
        RowBox[{"p", ",", "\[ScriptR]"}]], "]"}]}], ",", "2"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox[
    OverscriptBox["\[DoubleStruckCapitalA]", "."], "\[ScriptR]"], "=", 
   RowBox[{"Dot", "[", 
    RowBox[{
     RowBox[{
      SubscriptBox["\[PartialD]", 
       RowBox[{"{", 
        SubscriptBox["\[DoubleStruckQ]", "\[ScriptR]"], "}"}]], 
      SubscriptBox["\[DoubleStruckCapitalA]", "\[ScriptR]"]}], ",", 
     SubscriptBox["\[CapitalGamma]", "\[ScriptR]"], ",", 
     SubscriptBox["\[DoubleStruckP]", "\[ScriptR]"]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.6203371209712563`*^9, 3.620337170369768*^9}, {
   3.6203372296197968`*^9, 3.620337274084833*^9}, {3.6203373043280888`*^9, 
   3.6203373603728237`*^9}, {3.6203374089642344`*^9, 3.620337475178484*^9}, {
   3.620337523657598*^9, 3.620337552771225*^9}, {3.6203376489189177`*^9, 
   3.6203376756111097`*^9}, {3.620337780579699*^9, 3.620337970009921*^9}, {
   3.620338002788083*^9, 3.6203380842081738`*^9}, {3.6203381863313828`*^9, 
   3.620338212800129*^9}, {3.62064677491855*^9, 3.620646903154414*^9}, {
   3.6206474668066807`*^9, 3.620647480092843*^9}, {3.6206477730899553`*^9, 
   3.620647837548867*^9}, {3.620648527717402*^9, 3.620648635659906*^9}, 
   3.62064866930827*^9, {3.620933581101832*^9, 3.620933616770784*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SubscriptBox["\[DoubleStruckB]", "\[ScriptR]"], "=", " ", 
   RowBox[{"FullSimplify", "@", 
    RowBox[{"Dot", "[", 
     RowBox[{
      SubscriptBox[
       OverscriptBox["\[DoubleStruckCapitalA]", "."], "\[ScriptR]"], ",", 
      SubscriptBox["\[DoubleStruckP]", "\[ScriptR]"]}], "]"}]}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.621530260744094*^9, 3.621530303606904*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[GothicCapitalS]", " ", "=", 
   RowBox[{
    FractionBox["1", "2"], 
    RowBox[{
     SubsuperscriptBox["\[Sum]", 
      RowBox[{"i", "=", "1"}], 
      SubscriptBox["\[Nu]\[NumberSign]", "\[ScriptR]"]], 
     RowBox[{"(", " ", 
      RowBox[{
       RowBox[{
        SubscriptBox["\[ScriptM]", "i"], 
        RowBox[{"(", 
         RowBox[{
          SubscriptBox[
           OverscriptBox["a", "\[RightVector]"], "i"], ".", 
          SubscriptBox[
           OverscriptBox["a", "\[RightVector]"], "i"]}], ")"}]}], " ", "+", 
       " ", 
       RowBox[{
        SubscriptBox["Jz", "i"], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["\[PartialD]", "t"], 
           RowBox[{
            SubscriptBox["\[DoubleStruckW]", 
             RowBox[{"\[Omega]", ",", "\[ScriptR]"}]], "\[LeftDoubleBracket]",
             "i", "\[RightDoubleBracket]"}]}], ")"}], "2"]}]}], ")"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["\[GothicCapitalE]", "p"], " ", "=", " ", 
   RowBox[{
    SubsuperscriptBox["\[Sum]", 
     RowBox[{"i", "=", "1"}], 
     SubscriptBox["\[Nu]\[NumberSign]", "\[ScriptR]"]], 
    RowBox[{"(", " ", 
     RowBox[{
      SubscriptBox["\[ScriptM]", "i"], "g", " ", 
      RowBox[{
       SubscriptBox["\[DoubleStruckQ]\.ba", "\[ScriptR]"], 
       "\[LeftDoubleBracket]", 
       RowBox[{"2", "i"}], "\[RightDoubleBracket]"}]}], ")"}]}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.620648859620528*^9, 3.620648880042248*^9}, {
   3.6206489306323557`*^9, 3.6206489313973923`*^9}, {3.620648991602337*^9, 
   3.620649036172331*^9}, {3.6209284167137012`*^9, 3.6209284807951117`*^9}, 
   3.6209318977938128`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   SubscriptBox["\[DoubleStruckCapitalM]", "\[ScriptR]"], "=", 
   RowBox[{
    SubscriptBox["\[PartialD]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        SubscriptBox["\[PartialD]", "t"], 
        SubscriptBox["\[DoubleStruckP]", "\[ScriptR]"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        SubscriptBox["\[PartialD]", "t"], 
        SubscriptBox["\[DoubleStruckP]", "\[ScriptR]"]}], "}"}]}]], 
    "\[GothicCapitalS]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    SubscriptBox["\[DoubleStruckV]", "\[ScriptR]"], " ", "=", " ", 
    RowBox[{"Simplify", "[", 
     RowBox[{
      RowBox[{
       SubscriptBox["\[PartialD]", 
        RowBox[{"{", 
         RowBox[{
          SubscriptBox["\[PartialD]", "t"], 
          SubscriptBox["\[DoubleStruckP]", "\[ScriptR]"]}], "}"}]], 
       "\[GothicCapitalS]"}], "-", 
      RowBox[{"Dot", "[", 
       RowBox[{
        SubscriptBox["\[DoubleStruckCapitalM]", "\[ScriptR]"], ",", 
        RowBox[{
         SubscriptBox["\[PartialD]", "t"], 
         SubscriptBox["\[DoubleStruckP]", "\[ScriptR]"]}]}], "]"}]}], "]"}]}],
    ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["\[DoubleStruckG]", "\[ScriptR]"], "=", " ", 
   RowBox[{"FullSimplify", "@", 
    RowBox[{"Dot", "[", 
     RowBox[{
      RowBox[{
       SubscriptBox["\[CapitalGamma]", "\[ScriptR]"], "\[Transpose]"}], ",", 
      RowBox[{
       SubscriptBox["\[PartialD]", 
        RowBox[{"{", 
         SubscriptBox["\[DoubleStruckQ]", "\[ScriptR]"], "}"}]], 
       SubscriptBox["\[GothicCapitalE]", "p"]}]}], " ", "]"}]}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.6208447019913054`*^9, 3.620844846510961*^9}, 
   3.620844894463624*^9, {3.620933702107156*^9, 3.6209337138832693`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   SubscriptBox["\[DoubleStruckCapitalC]", "\[ScriptR]"], "/.", "Sin2s"}], "//",
   "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.620845025578516*^9, 3.6208450329912043`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "0"},
     {"0", "1"},
     {"0", "0"},
     {
      SubscriptBox["l", "g1"], "0"},
     {
      RowBox[{
       SubscriptBox["l", "1"], " ", 
       SubscriptBox["s", "2"]}], "0"},
     {
      RowBox[{
       SubscriptBox["c", "2"], " ", 
       SubscriptBox["l", "1"]}], 
      SubscriptBox["l", "g2"]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.620845033232448*^9, 3.620846210306429*^9, 3.620846905566083*^9, {
   3.620849651155501*^9, 3.620849667367764*^9}, 3.620852585566947*^9, 
   3.620858235194722*^9, 3.6208583178588753`*^9, 3.620858401183984*^9, 
   3.620862257981023*^9, 3.620928494932234*^9, 3.620929263290791*^9, 
   3.620931901943671*^9, 3.620934102760339*^9, 3.621162535273384*^9, {
   3.621167362884623*^9, 3.621167371776389*^9}, 3.621167417481748*^9, 
   3.621528451937545*^9, 3.6215287686352453`*^9, 3.6215293878070517`*^9, 
   3.621532541587283*^9, 3.622128391197371*^9, 3.622128716885569*^9, 
   3.62212882223732*^9, 3.622129025143792*^9, 3.622129422849049*^9, 
   3.622130332173079*^9, 3.622130440206567*^9, 3.622131863838963*^9, 
   3.6221320892332067`*^9, 3.6221349975938*^9, 3.62213999276798*^9, 
   3.622405251412312*^9, 3.6224069704988623`*^9, 3.622411612970207*^9, 
   3.622649263935861*^9, 3.622650673522792*^9, 3.622655983952478*^9, 
   3.622656090838571*^9, 3.622656513181065*^9, 3.622657322429401*^9, 
   3.622657561850917*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   SubscriptBox["\[DoubleStruckCapitalM]", "\[ScriptR]"], "/.", "Sin2s"}], "//",
   "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.620845050842938*^9, 3.6208450707802896`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      SubscriptBox["Jz", "1"], "0", "0", "0", "0", "0"},
     {"0", 
      SubscriptBox["Jz", "2"], "0", "0", "0", "0"},
     {"0", "0", 
      SubscriptBox["\[ScriptM]", "1"], "0", "0", "0"},
     {"0", "0", "0", 
      SubscriptBox["\[ScriptM]", "1"], "0", "0"},
     {"0", "0", "0", "0", 
      SubscriptBox["\[ScriptM]", "2"], "0"},
     {"0", "0", "0", "0", "0", 
      SubscriptBox["\[ScriptM]", "2"]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.620845051433339*^9, 3.62084507144724*^9}, 
   3.6208462103324823`*^9, 3.620846905599833*^9, {3.620849651199913*^9, 
   3.620849667401299*^9}, 3.620852585607658*^9, 3.6208582352699966`*^9, 
   3.620858317909194*^9, 3.6208584012216063`*^9, 3.62086225820555*^9, 
   3.620928494976569*^9, 3.6209292633434153`*^9, 3.620931901983835*^9, 
   3.620934102783297*^9, 3.6211625353179283`*^9, {3.621167362916024*^9, 
   3.621167371818701*^9}, 3.621167417519081*^9, 3.621528452010827*^9, 
   3.621528768707411*^9, 3.621529387844377*^9, 3.6215325416335583`*^9, 
   3.622128391246924*^9, 3.622128716961369*^9, 3.62212882234897*^9, 
   3.622129025196645*^9, 3.622129422964663*^9, 3.6221303322518787`*^9, 
   3.6221304402812147`*^9, 3.6221318638760242`*^9, 3.622132089268979*^9, 
   3.622134997625641*^9, 3.622139992794648*^9, 3.622405251455577*^9, 
   3.622406970562495*^9, 3.622411613016917*^9, 3.622649263977683*^9, 
   3.6226506736896343`*^9, 3.622655983956102*^9, 3.622656090842444*^9, 
   3.622656513187331*^9, 3.622657322516439*^9, 3.622657561893634*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   SubscriptBox["\[DoubleStruckV]", "\[ScriptR]"], " ", "/.", "Sin2s"}], "//",
   "MatrixForm"}]], "Input",
 CellChangeTimes->{3.620845078418705*^9, 3.620933725573167*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {"0"},
      {"0"},
      {
       RowBox[{
        RowBox[{"-", 
         SubscriptBox["\[ScriptM]", "1"]}], " ", 
        RowBox[{
         SubscriptBox["v", 
          RowBox[{"\<\"RR\"\>", ",", "y1"}]], "[", "t", "]"}], " ", 
        RowBox[{
         SubscriptBox["\[Omega]", 
          RowBox[{"\<\"RR\"\>", ",", "z1"}]], "[", "t", "]"}]}]},
      {
       RowBox[{
        SubscriptBox["\[ScriptM]", "1"], " ", 
        RowBox[{
         SubscriptBox["v", 
          RowBox[{"\<\"RR\"\>", ",", "x1"}]], "[", "t", "]"}], " ", 
        RowBox[{
         SubscriptBox["\[Omega]", 
          RowBox[{"\<\"RR\"\>", ",", "z1"}]], "[", "t", "]"}]}]},
      {
       RowBox[{
        RowBox[{"-", 
         SubscriptBox["\[ScriptM]", "2"]}], " ", 
        RowBox[{
         SubscriptBox["v", 
          RowBox[{"\<\"RR\"\>", ",", "y2"}]], "[", "t", "]"}], " ", 
        RowBox[{
         SubscriptBox["\[Omega]", 
          RowBox[{"\<\"RR\"\>", ",", "z2"}]], "[", "t", "]"}]}]},
      {
       RowBox[{
        SubscriptBox["\[ScriptM]", "2"], " ", 
        RowBox[{
         SubscriptBox["v", 
          RowBox[{"\<\"RR\"\>", ",", "x2"}]], "[", "t", "]"}], " ", 
        RowBox[{
         SubscriptBox["\[Omega]", 
          RowBox[{"\<\"RR\"\>", ",", "z2"}]], "[", "t", "]"}]}]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.620845078994631*^9, 3.620846210361802*^9, 3.620846905629305*^9, {
   3.6208496512419767`*^9, 3.6208496674330378`*^9}, 3.6208525856454763`*^9, 
   3.620858235317912*^9, 3.620858317962818*^9, 3.620858401253208*^9, 
   3.620862258254303*^9, 3.620928495018098*^9, 3.6209292633907747`*^9, 
   3.620931902022408*^9, 3.620934102807722*^9, 3.621162535356658*^9, {
   3.621167362942993*^9, 3.621167371870009*^9}, 3.621167417561306*^9, 
   3.621528452084635*^9, 3.621528768804227*^9, 3.621529387875845*^9, 
   3.621532541679282*^9, 3.622128391346402*^9, 3.622128717009177*^9, 
   3.622128822396257*^9, 3.6221290252530823`*^9, 3.622129423012288*^9, 
   3.622130332297037*^9, 3.6221304404205303`*^9, 3.622131863915362*^9, 
   3.622132089304906*^9, 3.622134997658266*^9, 3.622139992815135*^9, 
   3.622405251499071*^9, 3.622406970623827*^9, 3.622411613060564*^9, 
   3.622649264024982*^9, 3.622650673750211*^9, 3.622655984022187*^9, 
   3.622656090922955*^9, 3.6226565132674503`*^9, 3.622657322591209*^9, 
   3.622657561940339*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   SubscriptBox["\[DoubleStruckG]", "\[ScriptR]"], "/.", "Sin2s"}], "//", 
  "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.620845088666794*^9, 3.620845090010941*^9}, {
   3.620865427517112*^9, 3.620865428890539*^9}, 3.6209337297571087`*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {"0"},
      {"0"},
      {
       RowBox[{"g", " ", 
        SubscriptBox["s", "1"], " ", 
        SubscriptBox["\[ScriptM]", "1"]}]},
      {
       RowBox[{"g", " ", 
        SubscriptBox["c", "1"], " ", 
        SubscriptBox["\[ScriptM]", "1"]}]},
      {
       RowBox[{"g", " ", 
        SubscriptBox["s", "12"], " ", 
        SubscriptBox["\[ScriptM]", "2"]}]},
      {
       RowBox[{"g", " ", 
        SubscriptBox["c", "12"], " ", 
        SubscriptBox["\[ScriptM]", "2"]}]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.620845090322235*^9, 3.6208462103908167`*^9, 3.620846905659289*^9, {
   3.6208496512871637`*^9, 3.620849667466118*^9}, 3.620852585685305*^9, 
   3.620858235577767*^9, 3.620858317970077*^9, 3.620858401289805*^9, 
   3.6208622583020077`*^9, 3.620928495060451*^9, 3.62092926344897*^9, 
   3.620931902059114*^9, 3.620934102830217*^9, 3.62116253543522*^9, {
   3.6211673629698963`*^9, 3.621167371908409*^9}, 3.6211674176084957`*^9, 
   3.621528452161551*^9, 3.621528768884145*^9, 3.62152938791256*^9, 
   3.621532541729167*^9, 3.6221283913970737`*^9, 3.622128717057128*^9, 
   3.6221288224438133`*^9, 3.62212902525867*^9, 3.622129423061471*^9, 
   3.6221303323802967`*^9, 3.622130440575466*^9, 3.622131863953351*^9, 
   3.622132089335985*^9, 3.6221349976925*^9, 3.6221399928396072`*^9, 
   3.622405251546344*^9, 3.622406970681241*^9, 3.622411613103755*^9, 
   3.6226492640748568`*^9, 3.622650673759898*^9, 3.622655984093796*^9, 
   3.622656091011817*^9, 3.622656513350852*^9, 3.622657322664781*^9, 
   3.62265756198107*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   SubscriptBox["\[Psi]", "\[ScriptR]"], "/.", "Sin2s"}], "//", 
  "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.6208451394983873`*^9, 3.62084514580239*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "0"},
     {"1", "1"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.620845146557919*^9, 3.620846210416582*^9, 3.62084690569132*^9, {
   3.620849651334238*^9, 3.620849667498708*^9}, 3.6208525857265177`*^9, 
   3.620858235631888*^9, 3.620858318021833*^9, 3.620858401324047*^9, 
   3.620862258411501*^9, 3.620928495065844*^9, 3.6209292634527197`*^9, 
   3.620931902065186*^9, 3.620934102859434*^9, 3.621162535503179*^9, {
   3.6211673629993763`*^9, 3.621167371952119*^9}, 3.621167417616344*^9, 
   3.621528452323197*^9, 3.6215287689578733`*^9, 3.6215293879417267`*^9, 
   3.62153254177455*^9, 3.62212839144449*^9, 3.622128717098711*^9, 
   3.622128822451562*^9, 3.622129025309833*^9, 3.622129423069091*^9, 
   3.62213033245926*^9, 3.622130440624995*^9, 3.622131863992895*^9, 
   3.622132089371002*^9, 3.622134997724408*^9, 3.622139992859803*^9, 
   3.622405251592306*^9, 3.62240697074434*^9, 3.622411613146204*^9, 
   3.62264926412568*^9, 3.622650674021002*^9, 3.6226559840984993`*^9, 
   3.6226560912651157`*^9, 3.622656513354638*^9, 3.622657322832518*^9, 
   3.622657562022299*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   SubscriptBox["\[DoubleStruckCapitalA]", "\[ScriptR]"], "/.", "Sin2s"}], "//",
   "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.621530207638492*^9, 3.621530209470695*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0", 
      RowBox[{"-", "1"}], "0", "0", "0"},
     {
      SubscriptBox["l", "g1"], "0", "0", 
      RowBox[{"-", "1"}], "0", "0"},
     {
      RowBox[{
       SubscriptBox["l", "1"], " ", 
       SubscriptBox["s", "2"]}], "0", "0", "0", 
      RowBox[{"-", "1"}], "0"},
     {
      RowBox[{
       SubscriptBox["c", "2"], " ", 
       SubscriptBox["l", "1"]}], 
      SubscriptBox["l", "g2"], "0", "0", "0", 
      RowBox[{"-", "1"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.6215302105759497`*^9, 3.621532541819564*^9, 
  3.622128391495886*^9, 3.6221287171433163`*^9, 3.622128822526723*^9, 
  3.622129025355753*^9, 3.6221294231169662`*^9, 3.6221303325945873`*^9, 
  3.622130440676643*^9, 3.622131864000163*^9, 3.622132089400505*^9, 
  3.622134997757633*^9, 3.622139992880333*^9, 3.622405251637652*^9, 
  3.6224069708873262`*^9, 3.6224116131880083`*^9, 3.622649264176119*^9, 
  3.622650674082439*^9, 3.622655984165844*^9, 3.6226560913457327`*^9, 
  3.622656513425905*^9, 3.622657322911578*^9, 3.622657562063222*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   SubscriptBox["\[DoubleStruckB]", "\[ScriptR]"], "/.", "Sin2s"}], "//", 
  "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.6215303205081177`*^9, 3.621530337294362*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {"0"},
      {"0"},
      {
       RowBox[{
        SubscriptBox["c", "2"], " ", 
        SubscriptBox["l", "1"], " ", 
        RowBox[{
         SubscriptBox["\[Omega]", 
          RowBox[{"\<\"RR\"\>", ",", "z1"}]], "[", "t", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{
            SubscriptBox["\[Omega]", 
             RowBox[{"\<\"RR\"\>", ",", "z1"}]], "[", "t", "]"}]}], "+", 
          RowBox[{
           SubscriptBox["\[Omega]", 
            RowBox[{"\<\"RR\"\>", ",", "z2"}]], "[", "t", "]"}]}], ")"}]}]},
      {
       RowBox[{
        SubscriptBox["l", "1"], " ", 
        SubscriptBox["s", "2"], " ", 
        RowBox[{
         SubscriptBox["\[Omega]", 
          RowBox[{"\<\"RR\"\>", ",", "z1"}]], "[", "t", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SubscriptBox["\[Omega]", 
            RowBox[{"\<\"RR\"\>", ",", "z1"}]], "[", "t", "]"}], "-", 
          RowBox[{
           SubscriptBox["\[Omega]", 
            RowBox[{"\<\"RR\"\>", ",", "z2"}]], "[", "t", "]"}]}], ")"}]}]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.62153032803928*^9, 3.621530337883119*^9}, 
   3.6215325418613653`*^9, 3.622128391540942*^9, 3.6221287172222443`*^9, 
   3.622128822672014*^9, 3.6221290254061623`*^9, 3.6221294232294683`*^9, 
   3.622130332672473*^9, 3.622130440729673*^9, 3.622131864033104*^9, 
   3.622132089406315*^9, 3.622134997763229*^9, 3.62213999290071*^9, 
   3.622405251741762*^9, 3.6224069708957787`*^9, 3.622411613239086*^9, 
   3.622649264286269*^9, 3.622650674088903*^9, 3.6226559844312057`*^9, 
   3.622656091352634*^9, 3.622656513503347*^9, 3.622657322988296*^9, 
   3.6226575620680437`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Inv", "@", 
   SubscriptBox["\[Psi]", "\[ScriptR]"]}], "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.6215309658408127`*^9, 3.6215309708053703`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "0"},
     {
      RowBox[{"-", "1"}], "1"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.621530971058494*^9, 3.621532541910192*^9, 
  3.622128391617588*^9, 3.6221287173335333`*^9, 3.6221288226808767`*^9, 
  3.622129025454801*^9, 3.6221294232768583`*^9, 3.622130332713194*^9, 
  3.6221304407790737`*^9, 3.622131864070442*^9, 3.622132089436108*^9, 
  3.622134997790216*^9, 3.6221399929204483`*^9, 3.622405251750155*^9, 
  3.622406970965598*^9, 3.622411613254731*^9, 3.622649264292776*^9, 
  3.622650674340519*^9, 3.62265598449642*^9, 3.62265609142598*^9, 
  3.6226565136692133`*^9, 3.622657323063479*^9, 3.622657562105035*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 SubscriptBox["\[DoubleStruckP]", "\[ScriptR]"]], "Input",
 CellChangeTimes->{{3.621531138203662*^9, 3.621531146481071*^9}, 
   3.621532532015152*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    SubscriptBox["\[Omega]", 
     RowBox[{"\<\"RR\"\>", ",", "z1"}]], "[", "t", "]"}], ",", 
   RowBox[{
    SubscriptBox["\[Omega]", 
     RowBox[{"\<\"RR\"\>", ",", "z2"}]], "[", "t", "]"}], ",", 
   RowBox[{
    SubscriptBox["v", 
     RowBox[{"\<\"RR\"\>", ",", "x1"}]], "[", "t", "]"}], ",", 
   RowBox[{
    SubscriptBox["v", 
     RowBox[{"\<\"RR\"\>", ",", "y1"}]], "[", "t", "]"}], ",", 
   RowBox[{
    SubscriptBox["v", 
     RowBox[{"\<\"RR\"\>", ",", "x2"}]], "[", "t", "]"}], ",", 
   RowBox[{
    SubscriptBox["v", 
     RowBox[{"\<\"RR\"\>", ",", "y2"}]], "[", "t", "]"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.621531147102333*^9, {3.621532532561179*^9, 3.6215325419622097`*^9}, 
   3.622128391657031*^9, 3.6221287173416777`*^9, 3.62212882272073*^9, 
   3.6221290255086412`*^9, 3.622129423318926*^9, 3.6221303327539682`*^9, 
   3.622130440785286*^9, 3.62213186410824*^9, 3.622132089469203*^9, 
   3.622134997823481*^9, 3.622139992927266*^9, 3.622405251789731*^9, 
   3.622406971029006*^9, 3.622411613293705*^9, 3.6226492643427973`*^9, 
   3.6226506743976994`*^9, 3.62265598450254*^9, 3.62265609150981*^9, 
   3.6226565137423773`*^9, 3.622657323069222*^9, 3.6226575621479397`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ReplaceP", "=", " ", 
   RowBox[{"Inner", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"#1", " ", "\[Rule]", " ", "#2"}], " ", "&"}], ",", 
     SubscriptBox["\[DoubleStruckP]", "\[ScriptR]"], ",", 
     RowBox[{"FullSimplify", "@", 
      RowBox[{"Dot", "[", 
       RowBox[{
        SubscriptBox["\[DoubleStruckCapitalC]", "\[ScriptR]"], ",", 
        SubscriptBox["\[Psi]", "\[ScriptR]"], ",", 
        RowBox[{
         SubscriptBox["\[PartialD]", "t"], 
         SubscriptBox["\[DoubleStruckQ]\[NumberSign]", "\[ScriptR]"]}]}], 
       "]"}]}], ",", "List"}], "]"}]}], ";", 
  RowBox[{"ReplaceP", "//", "MatrixForm"}]}]], "Input",
 CellChangeTimes->{{3.6209289917847757`*^9, 3.620929097191875*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {
       RowBox[{
        RowBox[{
         SubscriptBox["\[Omega]", 
          RowBox[{"\<\"RR\"\>", ",", "z1"}]], "[", "t", "]"}], "\[Rule]", 
        RowBox[{
         SuperscriptBox[
          SubscriptBox["\[Theta]", 
           RowBox[{"\<\"RR\"\>", ",", "1"}]], "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}]}]},
      {
       RowBox[{
        RowBox[{
         SubscriptBox["\[Omega]", 
          RowBox[{"\<\"RR\"\>", ",", "z2"}]], "[", "t", "]"}], "\[Rule]", 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           SubscriptBox["\[Theta]", 
            RowBox[{"\<\"RR\"\>", ",", "1"}]], "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], "+", 
         RowBox[{
          SuperscriptBox[
           SubscriptBox["\[Theta]", 
            RowBox[{"\<\"RR\"\>", ",", "2"}]], "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}]}]},
      {
       RowBox[{
        RowBox[{
         SubscriptBox["v", 
          RowBox[{"\<\"RR\"\>", ",", "x1"}]], "[", "t", "]"}], "\[Rule]", 
        "0"}]},
      {
       RowBox[{
        RowBox[{
         SubscriptBox["v", 
          RowBox[{"\<\"RR\"\>", ",", "y1"}]], "[", "t", "]"}], "\[Rule]", 
        RowBox[{
         SubscriptBox["l", "g1"], " ", 
         RowBox[{
          SuperscriptBox[
           SubscriptBox["\[Theta]", 
            RowBox[{"\<\"RR\"\>", ",", "1"}]], "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}]}]},
      {
       RowBox[{
        RowBox[{
         SubscriptBox["v", 
          RowBox[{"\<\"RR\"\>", ",", "x2"}]], "[", "t", "]"}], "\[Rule]", 
        RowBox[{
         RowBox[{"Sin", "[", 
          RowBox[{
           SubscriptBox["\[Theta]", 
            RowBox[{"\<\"RR\"\>", ",", "2"}]], "[", "t", "]"}], "]"}], " ", 
         SubscriptBox["l", "1"], " ", 
         RowBox[{
          SuperscriptBox[
           SubscriptBox["\[Theta]", 
            RowBox[{"\<\"RR\"\>", ",", "1"}]], "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}]}]},
      {
       RowBox[{
        RowBox[{
         SubscriptBox["v", 
          RowBox[{"\<\"RR\"\>", ",", "y2"}]], "[", "t", "]"}], "\[Rule]", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"Cos", "[", 
              RowBox[{
               SubscriptBox["\[Theta]", 
                RowBox[{"\<\"RR\"\>", ",", "2"}]], "[", "t", "]"}], "]"}], 
             " ", 
             SubscriptBox["l", "1"]}], "+", 
            SubscriptBox["l", "g2"]}], ")"}], " ", 
          RowBox[{
           SuperscriptBox[
            SubscriptBox["\[Theta]", 
             RowBox[{"\<\"RR\"\>", ",", "1"}]], "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}]}], "+", 
         RowBox[{
          SubscriptBox["l", "g2"], " ", 
          RowBox[{
           SuperscriptBox[
            SubscriptBox["\[Theta]", 
             RowBox[{"\<\"RR\"\>", ",", "2"}]], "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}]}]}]}]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.6209290981460238`*^9, 3.620929263546411*^9, 3.6209319021467237`*^9, 
   3.620934102934671*^9, 3.621162535606245*^9, {3.62116736307305*^9, 
   3.621167372058333*^9}, 3.6211674177161217`*^9, 3.621528452412425*^9, 
   3.6215287690845423`*^9, 3.62152938799934*^9, 3.6215325421097593`*^9, 
   3.622128391762233*^9, 3.622128717438485*^9, 3.622128822812152*^9, 
   3.622129025606822*^9, 3.622129423421317*^9, 3.622130332847804*^9, 
   3.6221304410295258`*^9, 3.622131864193214*^9, 3.622132089555605*^9, 
   3.6221349979066772`*^9, 3.622139993015799*^9, 3.6224052518933992`*^9, 
   3.622406971137352*^9, 3.622411613401803*^9, 3.622649264444518*^9, 
   3.622650674500823*^9, 3.6226559846150093`*^9, 3.6226560916432867`*^9, 
   3.622656513870829*^9, 3.6226573231931963`*^9, 3.622657562244446*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.62086368279033*^9, 3.620863718550641*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FullSimplify", "@", 
    RowBox[{"Dot", "[", 
     RowBox[{
      RowBox[{
       SubscriptBox["\[Psi]", "\[ScriptR]"], "\[Transpose]"}], ",", 
      RowBox[{
       SubscriptBox["\[DoubleStruckCapitalC]", "\[ScriptR]"], 
       "\[Transpose]"}], ",", 
      SubscriptBox["\[DoubleStruckCapitalM]", "\[ScriptR]"], ",", 
      RowBox[{"Dot", "[", 
       RowBox[{
        SubscriptBox["\[DoubleStruckCapitalC]", "\[ScriptR]"], ",", 
        SubscriptBox["\[Psi]", "\[ScriptR]"]}], "]"}]}], "]"}]}], "/.", 
   "Sin2s"}], "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.620863730079338*^9, 3.6208637380614758`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       SubscriptBox["Jz", "1"], "+", 
       SubscriptBox["Jz", "2"], "+", 
       RowBox[{
        SubsuperscriptBox["l", "g1", "2"], " ", 
        SubscriptBox["\[ScriptM]", "1"]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          SubsuperscriptBox["l", "1", "2"], "+", 
          RowBox[{"2", " ", 
           SubscriptBox["c", "2"], " ", 
           SubscriptBox["l", "1"], " ", 
           SubscriptBox["l", "g2"]}], "+", 
          SubsuperscriptBox["l", "g2", "2"]}], ")"}], " ", 
        SubscriptBox["\[ScriptM]", "2"]}]}], 
      RowBox[{
       SubscriptBox["Jz", "2"], "+", 
       RowBox[{
        SubscriptBox["l", "g2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SubscriptBox["c", "2"], " ", 
           SubscriptBox["l", "1"]}], "+", 
          SubscriptBox["l", "g2"]}], ")"}], " ", 
        SubscriptBox["\[ScriptM]", "2"]}]}]},
     {
      RowBox[{
       SubscriptBox["Jz", "2"], "+", 
       RowBox[{
        SubscriptBox["l", "g2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SubscriptBox["c", "2"], " ", 
           SubscriptBox["l", "1"]}], "+", 
          SubscriptBox["l", "g2"]}], ")"}], " ", 
        SubscriptBox["\[ScriptM]", "2"]}]}], 
      RowBox[{
       SubscriptBox["Jz", "2"], "+", 
       RowBox[{
        SubsuperscriptBox["l", "g2", "2"], " ", 
        SubscriptBox["\[ScriptM]", "2"]}]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.620863741213393*^9, 3.620928495242445*^9, 3.6209292637490377`*^9, 
   3.620931902326125*^9, 3.620934103101447*^9, 3.6211625358831453`*^9, {
   3.6211673632595654`*^9, 3.6211673722786837`*^9}, 3.6211674179435253`*^9, 
   3.62152845262206*^9, 3.6215287693039837`*^9, 3.621529388168686*^9, 
   3.6215325423078527`*^9, 3.6221283919497757`*^9, 3.622128717619171*^9, 
   3.622128823201673*^9, 3.62212902579464*^9, 3.622129423874083*^9, 
   3.622130333291452*^9, 3.6221304414101477`*^9, 3.622131864379784*^9, 
   3.622132089737631*^9, 3.622134998091267*^9, 3.6221399932190533`*^9, 
   3.622405252156086*^9, 3.622406971336556*^9, 3.622411613677142*^9, 
   3.622649264633306*^9, 3.6226506748318253`*^9, 3.622655984825101*^9, 
   3.622656091847183*^9, 3.622656514087237*^9, 3.622657323405554*^9, 
   3.622657562467527*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Expand", "@", 
    RowBox[{"FullSimplify", "@", 
     RowBox[{"Dot", "[", 
      RowBox[{
       RowBox[{
        SubscriptBox["\[Psi]", "\[ScriptR]"], "\[Transpose]"}], ",", 
       RowBox[{
        SubscriptBox["\[DoubleStruckCapitalC]", "\[ScriptR]"], 
        "\[Transpose]"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"Dot", "[", 
          RowBox[{
           SubscriptBox["\[DoubleStruckCapitalM]", "\[ScriptR]"], ",", 
           RowBox[{
            SubscriptBox["\[PartialD]", "t"], 
            RowBox[{"Dot", "[", 
             RowBox[{
              SubscriptBox["\[DoubleStruckCapitalC]", "\[ScriptR]"], ",", 
              SubscriptBox["\[Psi]", "\[ScriptR]"]}], "]"}]}], ",", 
           RowBox[{
            SubscriptBox["\[PartialD]", "t"], 
            SubscriptBox["\[DoubleStruckQ]\[NumberSign]", "\[ScriptR]"]}]}], 
          "]"}], " ", "+", " ", 
         SubscriptBox["\[DoubleStruckV]", "\[ScriptR]"]}], "/.", 
        "ReplaceP"}]}], "]"}]}]}], "/.", "Sin2s"}], "//", 
  "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.620860317677486*^9, 3.620860373933782*^9}, {
  3.6208636674792347`*^9, 3.620863674828795*^9}, {3.620863709328596*^9, 
  3.6208637146810293`*^9}, {3.6209285111007566`*^9, 3.6209285914035807`*^9}, {
  3.6209286980036783`*^9, 3.620928701419375*^9}, {3.620929110370079*^9, 
  3.620929112041029*^9}, {3.6209321291016397`*^9, 3.620932131159951*^9}, {
  3.620933782769527*^9, 3.6209337854006023`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], " ", 
         SubscriptBox["l", "1"], " ", 
         SubscriptBox["l", "g2"], " ", 
         SubscriptBox["s", "2"], " ", 
         SubscriptBox["\[ScriptM]", "2"], " ", 
         RowBox[{
          SuperscriptBox[
           SubscriptBox["\[Theta]", 
            RowBox[{"\<\"RR\"\>", ",", "1"}]], "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox[
           SubscriptBox["\[Theta]", 
            RowBox[{"\<\"RR\"\>", ",", "2"}]], "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{
         SubscriptBox["l", "1"], " ", 
         SubscriptBox["l", "g2"], " ", 
         SubscriptBox["s", "2"], " ", 
         SubscriptBox["\[ScriptM]", "2"], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox[
            SubscriptBox["\[Theta]", 
             RowBox[{"\<\"RR\"\>", ",", "2"}]], "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}]}]},
      {
       RowBox[{
        SubscriptBox["l", "1"], " ", 
        SubscriptBox["l", "g2"], " ", 
        SubscriptBox["s", "2"], " ", 
        SubscriptBox["\[ScriptM]", "2"], " ", 
        SuperscriptBox[
         RowBox[{
          SuperscriptBox[
           SubscriptBox["\[Theta]", 
            RowBox[{"\<\"RR\"\>", ",", "1"}]], "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], "2"]}]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.620860374210863*^9, 3.620862258486629*^9, 3.620863675424836*^9, 
   3.620863715585264*^9, 3.6209284952987633`*^9, 3.62092859531118*^9, 
   3.6209287027289963`*^9, 3.620929112809103*^9, 3.6209292637938433`*^9, 
   3.620931902465263*^9, 3.6209321315084333`*^9, 3.6209341031504707`*^9, 
   3.6211625360064096`*^9, {3.621167363326486*^9, 3.621167372330657*^9}, 
   3.621167417997196*^9, 3.621528452727069*^9, 3.621528769409893*^9, 
   3.621529388228517*^9, 3.621532542354795*^9, 3.622128391991581*^9, 
   3.622128717687622*^9, 3.622128823407095*^9, 3.6221290258409567`*^9, 
   3.622129424348083*^9, 3.6221303334984083`*^9, 3.622130441545205*^9, 
   3.622131864418333*^9, 3.622132089775835*^9, 3.6221349981280823`*^9, 
   3.622139993275317*^9, 3.622405252250182*^9, 3.622406971413005*^9, 
   3.6224116137538223`*^9, 3.622649264710318*^9, 3.62265067487719*^9, 
   3.62265598489176*^9, 3.622656091956643*^9, 3.622656514187717*^9, 
   3.622657323485817*^9, 3.62265756253649*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FullSimplify", "@", 
    RowBox[{"Dot", "[", 
     RowBox[{
      RowBox[{
       SubscriptBox["\[Psi]", "\[ScriptR]"], "\[Transpose]"}], ",", 
      RowBox[{
       SubscriptBox["\[DoubleStruckCapitalC]", "\[ScriptR]"], 
       "\[Transpose]"}], ",", 
      SubscriptBox["\[DoubleStruckG]", "\[ScriptR]"]}], "]"}]}], "/.", 
   "Sin2s"}], "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.620863759970715*^9, 3.6208637726902943`*^9}, {
  3.620933790030644*^9, 3.620933791888723*^9}, {3.621535897457285*^9, 
  3.621535920473218*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {
       RowBox[{"g", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SubscriptBox["c", "1"], " ", 
           SubscriptBox["l", "g1"], " ", 
           SubscriptBox["\[ScriptM]", "1"]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              SubscriptBox["c", "1"], " ", 
              SubscriptBox["l", "1"]}], "+", 
             RowBox[{
              SubscriptBox["c", "12"], " ", 
              SubscriptBox["l", "g2"]}]}], ")"}], " ", 
           SubscriptBox["\[ScriptM]", "2"]}]}], ")"}]}]},
      {
       RowBox[{"g", " ", 
        SubscriptBox["c", "12"], " ", 
        SubscriptBox["l", "g2"], " ", 
        SubscriptBox["\[ScriptM]", "2"]}]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.620863774019854*^9, 3.620928495453465*^9, 3.620929263930735*^9, 
   3.620931902600935*^9, 3.6209341033061657`*^9, 3.6211625362077*^9, {
   3.6211673635080137`*^9, 3.621167372534793*^9}, 3.6211674181951857`*^9, 
   3.6215284528851767`*^9, 3.621528769570368*^9, 3.621529388364317*^9, 
   3.621532542502343*^9, {3.6215359011731777`*^9, 3.621535920834024*^9}, 
   3.6221283921373243`*^9, 3.622128717851746*^9, 3.622128823628255*^9, 
   3.62212902598328*^9, 3.622129424892139*^9, 3.622130333926937*^9, 
   3.622130441685546*^9, 3.622131864581365*^9, 3.622132089943688*^9, 
   3.622134998288884*^9, 3.622139993476284*^9, 3.622405252449203*^9, 
   3.622406971563333*^9, 3.622411613923389*^9, 3.622649264883779*^9, 
   3.622650675168983*^9, 3.622655985050707*^9, 3.622656092111041*^9, 
   3.62265651438393*^9, 3.6226573236422777`*^9, 3.622657562677689*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Massa", " ", "pontual"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", "0", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"\[ScriptCapitalM]", " ", "=", " ", "\"\<M\>\""}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[Nu]\[NumberSign]", "\[ScriptCapitalM]"], "=", "2"}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[DoubleStruckQ]", "\[ScriptCapitalM]"], "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        SubscriptBox["x", "\[ScriptCapitalM]"], "[", "t", "]"}], ",", 
       RowBox[{
        SubscriptBox["y", "\[ScriptCapitalM]"], "[", "t", "]"}]}], "}"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[DoubleStruckP]\[NumberSign]", "\[ScriptCapitalM]"], "=", 
     
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        SubscriptBox["v", 
         RowBox[{"\[ScriptCapitalM]", ",", "x"}]], "[", "t", "]"}], ",", 
       RowBox[{
        SubscriptBox["v", 
         RowBox[{"\[ScriptCapitalM]", ",", "y"}]], "[", "t", "]"}]}], "}"}]}],
     ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[DoubleStruckP]\.ba", "\[ScriptCapitalM]"], "=", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[DoubleStruckP]", "\[ScriptCapitalM]"], "=", 
     RowBox[{"Join", "[", 
      RowBox[{
       SubscriptBox["\[DoubleStruckP]\[NumberSign]", "\[ScriptCapitalM]"], 
       ",", 
       SubscriptBox["\[DoubleStruckP]\.ba", "\[ScriptCapitalM]"]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[DoubleStruckF]", "\[ScriptCapitalM]"], "=", 
     RowBox[{"{", 
      RowBox[{
       SubscriptBox["F", "x"], ",", 
       SubscriptBox["F", "y"]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[DoubleStruckCapitalC]", "\[ScriptCapitalM]"], " ", "=", 
     " ", 
     RowBox[{"Eye", "[", 
      SubscriptBox["\[Nu]\[NumberSign]", "\[ScriptCapitalM]"], "]"}]}], ";"}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[Psi]", "\[ScriptCapitalM]"], "=", " ", 
     RowBox[{"Eye", "[", 
      SubscriptBox["\[Nu]\[NumberSign]", "\[ScriptCapitalM]"], "]"}]}], ";"}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[DoubleStruckCapitalM]", "\[ScriptCapitalM]"], "=", " ", 
     RowBox[{"Diag", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"{", 
         SubscriptBox["M", "\[ScriptCapitalM]"], "}"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"{", 
         SubscriptBox["M", "\[ScriptCapitalM]"], "}"}], "}"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[DoubleStruckV]", "\[ScriptCapitalM]"], "=", " ", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[DoubleStruckG]", "\[ScriptCapitalM]"], "=", " ", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{
        SubscriptBox["M", "\[ScriptCapitalM]"], " ", "g"}]}], "}"}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.620852192165141*^9, 3.6208522868569393`*^9}, {
  3.620852632416431*^9, 3.620852642745082*^9}, {3.6208535121482897`*^9, 
  3.620853518911435*^9}, {3.6208538336354322`*^9, 3.620853856846962*^9}, {
  3.620933800769239*^9, 3.6209338077923822`*^9}}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"Sub", "-", "sistemas"}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.6208455020151854`*^9, 3.620845513311357*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "0", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     SubscriptBox["\[Nu]\[NumberSign]", "0"], "=", 
     RowBox[{
      SubscriptBox["\[Nu]\[NumberSign]", "\[ScriptR]"], "/.", " ", 
      RowBox[{"\"\<RR\>\"", "\[Rule]", " ", "0"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[DoubleStruckQ]", "0"], "=", 
     RowBox[{
      SubscriptBox["\[DoubleStruckQ]\[NumberSign]", "\[ScriptR]"], "/.", " ", 
      
      RowBox[{"\"\<RR\>\"", "\[Rule]", " ", "0"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[DoubleStruckP]\[NumberSign]", "0"], "=", 
     RowBox[{
      SubscriptBox["\[DoubleStruckP]\[NumberSign]", "\[ScriptR]"], "/.", " ", 
      
      RowBox[{"\"\<RR\>\"", "\[Rule]", " ", "0"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[DoubleStruckP]\.ba", "0"], "=", 
     RowBox[{
      SubscriptBox["\[DoubleStruckP]\.ba", "\[ScriptR]"], "/.", " ", 
      RowBox[{"\"\<RR\>\"", "\[Rule]", " ", "0"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[DoubleStruckP]", "0"], "=", 
     RowBox[{
      SubscriptBox["\[DoubleStruckP]", "\[ScriptR]"], "/.", " ", 
      RowBox[{"\"\<RR\>\"", "\[Rule]", " ", "0"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[DoubleStruckCapitalC]", "0"], " ", "=", " ", 
     RowBox[{
      SubscriptBox["\[DoubleStruckCapitalC]", "\[ScriptR]"], "/.", " ", 
      RowBox[{"\"\<RR\>\"", "\[Rule]", " ", "0"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[Psi]", "0"], "=", " ", 
     RowBox[{
      SubscriptBox["\[Psi]", "\[ScriptR]"], "/.", " ", 
      RowBox[{"\"\<RR\>\"", "\[Rule]", " ", "0"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[DoubleStruckCapitalM]", "0"], "=", "  ", 
     RowBox[{
      SubscriptBox["\[DoubleStruckCapitalM]", "\[ScriptR]"], "/.", " ", 
      RowBox[{"\"\<RR\>\"", "\[Rule]", " ", "0"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[DoubleStruckV]", "0"], "=", " ", 
     RowBox[{
      SubscriptBox["\[DoubleStruckV]", "\[ScriptR]"], "/.", " ", 
      RowBox[{"\"\<RR\>\"", "\[Rule]", " ", "0"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[DoubleStruckG]", "0"], "=", " ", 
     RowBox[{
      SubscriptBox["\[DoubleStruckG]", "\[ScriptR]"], "/.", " ", 
      RowBox[{"\"\<RR\>\"", "\[Rule]", "0"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[DoubleStruckCapitalA]", "0"], " ", "=", " ", 
     RowBox[{
      SubscriptBox["\[DoubleStruckCapitalA]", "\[ScriptR]"], "/.", " ", 
      RowBox[{"\"\<RR\>\"", "\[Rule]", " ", "0"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox[
      OverscriptBox["\[DoubleStruckCapitalA]", "."], "0"], " ", "=", " ", 
     RowBox[{
      SubscriptBox[
       OverscriptBox["\[DoubleStruckCapitalA]", "."], "\[ScriptR]"], "/.", 
      " ", 
      RowBox[{"\"\<RR\>\"", "\[Rule]", " ", "0"}]}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.6208524736068077`*^9, 3.620852514216386*^9}, {
  3.6208526877507257`*^9, 3.6208526890602093`*^9}, {3.620933836840012*^9, 
  3.620933888057*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "1", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     SubscriptBox["\[Nu]\[NumberSign]", "1"], "=", 
     RowBox[{
      SubscriptBox["\[Nu]\[NumberSign]", "\[ScriptCapitalM]"], "/.", " ", 
      RowBox[{"\"\<M\>\"", "\[Rule]", "1"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[DoubleStruckQ]", "1"], "=", 
     RowBox[{
      SubscriptBox["\[DoubleStruckQ]", "\[ScriptCapitalM]"], "/.", " ", 
      RowBox[{"\"\<M\>\"", "\[Rule]", " ", "1"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[DoubleStruckP]\[NumberSign]", "1"], "=", 
     RowBox[{
      SubscriptBox["\[DoubleStruckP]\[NumberSign]", "\[ScriptCapitalM]"], "/.",
       " ", 
      RowBox[{"\"\<M\>\"", "\[Rule]", " ", "1"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[DoubleStruckP]\.ba", "1"], "=", 
     RowBox[{
      SubscriptBox["\[DoubleStruckP]\.ba", "\[ScriptCapitalM]"], "/.", " ", 
      RowBox[{"\"\<M\>\"", "\[Rule]", " ", "1"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[DoubleStruckP]", "1"], "=", 
     RowBox[{
      SubscriptBox["\[DoubleStruckP]", "\[ScriptCapitalM]"], "/.", " ", 
      RowBox[{"\"\<M\>\"", "\[Rule]", " ", "1"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[DoubleStruckCapitalC]", "1"], " ", "=", " ", 
     RowBox[{
      SubscriptBox["\[DoubleStruckCapitalC]", "\[ScriptCapitalM]"], "/.", " ", 
      RowBox[{"\"\<M\>\"", "\[Rule]", " ", "1"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[Psi]", "1"], "=", " ", 
     RowBox[{
      SubscriptBox["\[Psi]", "\[ScriptCapitalM]"], "/.", " ", 
      RowBox[{"\"\<M\>\"", "\[Rule]", " ", "1"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[DoubleStruckCapitalM]", "1"], "=", "  ", 
     RowBox[{
      SubscriptBox["\[DoubleStruckCapitalM]", "\[ScriptCapitalM]"], "/.", " ", 
      RowBox[{"\"\<M\>\"", "\[Rule]", " ", "1"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[DoubleStruckV]", "1"], "=", " ", 
     RowBox[{
      SubscriptBox["\[DoubleStruckV]", "\[ScriptCapitalM]"], "/.", " ", 
      RowBox[{"\"\<M\>\"", "\[Rule]", " ", "1"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[DoubleStruckG]", "1"], "=", " ", 
     RowBox[{
      SubscriptBox["\[DoubleStruckG]", "\[ScriptCapitalM]"], "/.", " ", 
      RowBox[{"\"\<M\>\"", "\[Rule]", " ", "1"}]}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.620845907109441*^9, 3.620846008374854*^9}, {
   3.620846117110306*^9, 3.6208461853975763`*^9}, {3.620846700207478*^9, 
   3.62084679359289*^9}, {3.6208468236808662`*^9, 3.6208468351535187`*^9}, {
   3.6208468685062447`*^9, 3.620846875505931*^9}, 3.620852388133439*^9, {
   3.6208524273137903`*^9, 3.620852454033319*^9}, {3.6208527404812317`*^9, 
   3.62085276954318*^9}, {3.6208529500070333`*^9, 3.62085296327796*^9}, {
   3.620933933279353*^9, 3.620933948005631*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "2", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     SubscriptBox["\[Nu]\[NumberSign]", "2"], "=", 
     RowBox[{
      SubscriptBox["\[Nu]\[NumberSign]", "\[ScriptCapitalM]"], "/.", " ", 
      RowBox[{"\"\<M\>\"", "\[Rule]", "2"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[DoubleStruckQ]", "2"], "=", 
     RowBox[{
      SubscriptBox["\[DoubleStruckQ]", "\[ScriptCapitalM]"], "/.", " ", 
      RowBox[{"\"\<M\>\"", "\[Rule]", " ", "2"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[DoubleStruckP]\[NumberSign]", "2"], "=", 
     RowBox[{
      SubscriptBox["\[DoubleStruckP]\[NumberSign]", "\[ScriptCapitalM]"], "/.",
       " ", 
      RowBox[{"\"\<M\>\"", "\[Rule]", " ", "2"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[DoubleStruckP]\.ba", "2"], "=", 
     RowBox[{
      SubscriptBox["\[DoubleStruckP]\.ba", "\[ScriptCapitalM]"], "/.", " ", 
      RowBox[{"\"\<M\>\"", "\[Rule]", " ", "2"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[DoubleStruckP]", "2"], "=", 
     RowBox[{
      SubscriptBox["\[DoubleStruckP]", "\[ScriptCapitalM]"], "/.", " ", 
      RowBox[{"\"\<M\>\"", "\[Rule]", " ", "2"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[DoubleStruckCapitalC]", "2"], " ", "=", " ", 
     RowBox[{
      SubscriptBox["\[DoubleStruckCapitalC]", "\[ScriptCapitalM]"], "/.", " ", 
      RowBox[{"\"\<M\>\"", "\[Rule]", " ", "2"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[Psi]", "2"], "=", " ", 
     RowBox[{
      SubscriptBox["\[Psi]", "\[ScriptCapitalM]"], "/.", " ", 
      RowBox[{"\"\<M\>\"", "\[Rule]", " ", "2"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[DoubleStruckCapitalM]", "2"], "=", "  ", 
     RowBox[{
      SubscriptBox["\[DoubleStruckCapitalM]", "\[ScriptCapitalM]"], "/.", " ", 
      RowBox[{"\"\<M\>\"", "\[Rule]", " ", "2"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[DoubleStruckV]", "2"], "=", " ", 
     RowBox[{
      SubscriptBox["\[DoubleStruckV]", "\[ScriptCapitalM]"], "/.", " ", 
      RowBox[{"\"\<M\>\"", "\[Rule]", " ", "2"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[DoubleStruckG]", "2"], "=", " ", 
     RowBox[{
      SubscriptBox["\[DoubleStruckG]", "\[ScriptCapitalM]"], "/.", " ", 
      RowBox[{"\"\<M\>\"", "\[Rule]", " ", "2"}]}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.620846056805616*^9, 3.6208460795027113`*^9}, {
  3.620846194646349*^9, 3.6208462071655273`*^9}, {3.62084685317572*^9, 
  3.620846853473901*^9}, {3.6208468836642*^9, 3.6208468997052402`*^9}, {
  3.620852538226345*^9, 3.620852573079031*^9}, {3.620852773408955*^9, 
  3.620852785006016*^9}, {3.6208529658514557`*^9, 3.620852966134179*^9}, {
  3.620933967550639*^9, 3.62093398026161*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Novas", " ", "coordenadas"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     SubscriptBox["\[Nu]\[NumberSign]", "\[SixPointedStar]"], "=", " ", "2"}],
     ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[DoubleStruckQ]", "\[SixPointedStar]"], "=", " ", 
     RowBox[{"Join", "[", 
      RowBox[{
       SubscriptBox["\[DoubleStruckQ]", "0"], ",", 
       SubscriptBox["\[DoubleStruckQ]", "1"], ",", 
       SubscriptBox["\[DoubleStruckQ]", "2"]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[DoubleStruckQ]\[NumberSign]", "\[SixPointedStar]"], "=", 
     " ", 
     SubscriptBox["\[DoubleStruckQ]", "0"]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[DoubleStruckP]", "\[SixPointedStar]"], "=", " ", 
     RowBox[{"Join", "[", 
      RowBox[{
       SubscriptBox["\[DoubleStruckP]", "0"], ",", 
       SubscriptBox["\[DoubleStruckP]", "1"], ",", 
       SubscriptBox["\[DoubleStruckP]", "2"]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[DoubledGamma]\[NumberSign]", "\[SixPointedStar]"], " ", 
     "=", " ", 
     SubscriptBox["\[DoubleStruckP]\[NumberSign]", "0"]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[DoubledGamma]\.ba", "\[SixPointedStar]"], "=", " ", 
     RowBox[{"Join", "[", 
      RowBox[{
       SubscriptBox["\[DoubleStruckP]\[NumberSign]", "1"], ",", 
       SubscriptBox["\[DoubleStruckP]\[NumberSign]", "2"]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[DoubledGamma]", "\[SixPointedStar]"], "=", " ", 
     RowBox[{"Join", "[", 
      RowBox[{
       SubscriptBox["\[DoubledGamma]\[NumberSign]", "\[SixPointedStar]"], " ",
        ",", 
       SubscriptBox["\[DoubledGamma]\.ba", "\[SixPointedStar]"]}], "]"}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.620849551443541*^9, 3.6208496431476994`*^9}, {
  3.6208496763461943`*^9, 3.620849686713825*^9}, {3.6208497533484*^9, 
  3.6208497615142813`*^9}, {3.620849792615149*^9, 3.6208498437107773`*^9}, {
  3.620849879601047*^9, 3.620849952013385*^9}, {3.620850019310648*^9, 
  3.620850036751934*^9}, {3.620850067510366*^9, 3.620850118031556*^9}, {
  3.6208501500132923`*^9, 3.6208502470312366`*^9}, {3.62085048583352*^9, 
  3.6208504966885157`*^9}, {3.6208583978212347`*^9, 3.620858398070155*^9}, {
  3.622128504722054*^9, 3.622128536345882*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SubscriptBox["\[Phi]", "\[SixPointedStar]"], " ", "=", " ", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       SubscriptBox["x", "1"], "[", "t", "]"}], "-", 
      RowBox[{"(", "  ", 
       RowBox[{
        SubscriptBox["L", "1"], 
        RowBox[{"Cos", "[", 
         RowBox[{
          SubscriptBox["\[Theta]", 
           RowBox[{"0", ",", "1"}]], "[", "t", "]"}], "]"}]}], ")"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       SubscriptBox["y", "1"], "[", "t", "]"}], "-", 
      RowBox[{"(", " ", 
       RowBox[{
        SubscriptBox["L", "1"], 
        RowBox[{"Sin", "[", 
         RowBox[{
          SubscriptBox["\[Theta]", 
           RowBox[{"0", ",", "1"}]], "[", "t", "]"}], "]"}]}], ")"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       SubscriptBox["x", "2"], "[", "t", "]"}], "-", 
      RowBox[{"(", "  ", 
       RowBox[{
        RowBox[{
         SubscriptBox["l", "1"], 
         RowBox[{"Cos", "[", 
          RowBox[{
           SubscriptBox["\[Theta]", 
            RowBox[{"0", ",", "1"}]], "[", "t", "]"}], "]"}]}], "+", 
        RowBox[{
         SubscriptBox["L", "2"], 
         RowBox[{"Cos", "[", 
          RowBox[{
           RowBox[{
            SubscriptBox["\[Theta]", 
             RowBox[{"0", ",", "1"}]], "[", "t", "]"}], "+", 
           RowBox[{
            SubscriptBox["\[Theta]", 
             RowBox[{"0", ",", "2"}]], "[", "t", "]"}]}], "]"}]}]}], ")"}]}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       SubscriptBox["y", "2"], "[", "t", "]"}], "-", 
      RowBox[{"(", " ", 
       RowBox[{
        RowBox[{
         SubscriptBox["l", "1"], 
         RowBox[{"Sin", "[", 
          RowBox[{
           SubscriptBox["\[Theta]", 
            RowBox[{"0", ",", "1"}]], "[", "t", "]"}], "]"}]}], "+", 
        RowBox[{
         SubscriptBox["L", "2"], 
         RowBox[{"Sin", "[", 
          RowBox[{
           RowBox[{
            SubscriptBox["\[Theta]", 
             RowBox[{"0", ",", "1"}]], "[", "t", "]"}], "+", 
           RowBox[{
            SubscriptBox["\[Theta]", 
             RowBox[{"0", ",", "2"}]], "[", "t", "]"}]}], "]"}]}]}], 
       ")"}]}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.620847000211062*^9, 3.620847038124125*^9}, {
   3.620853127938273*^9, 3.620853222635573*^9}, {3.620853376509413*^9, 
   3.62085339487204*^9}, 3.6208535685563993`*^9, {3.622128550362714*^9, 
   3.622128555604743*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   SubscriptBox["\[CapitalLambda]", "\[SixPointedStar]"], " ", "=", " ", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{
     RowBox[{"Dot", "[", 
      RowBox[{
       RowBox[{
        SubscriptBox["\[PartialD]", 
         RowBox[{"{", 
          SubscriptBox["\[DoubleStruckQ]", "0"], "}"}]], 
        SubscriptBox["\[Phi]", "\[SixPointedStar]"]}], ",", 
       RowBox[{"Inv", "@", 
        SubscriptBox["\[Psi]", "0"]}], ",", 
       SubscriptBox["\[DoubleStruckP]\[NumberSign]", "0"]}], " ", "]"}], "+", 
     
     RowBox[{"Dot", "[", 
      RowBox[{
       RowBox[{
        SubscriptBox["\[PartialD]", 
         RowBox[{"{", 
          SubscriptBox["\[DoubleStruckQ]", "1"], "}"}]], 
        SubscriptBox["\[Phi]", "\[SixPointedStar]"]}], ",", 
       RowBox[{"Inv", "@", 
        SubscriptBox["\[Psi]", "1"]}], ",", 
       SubscriptBox["\[DoubleStruckP]\[NumberSign]", "1"]}], " ", "]"}], "+", 
     
     RowBox[{"Dot", "[", 
      RowBox[{
       RowBox[{
        SubscriptBox["\[PartialD]", 
         RowBox[{"{", 
          SubscriptBox["\[DoubleStruckQ]", "2"], "}"}]], 
        SubscriptBox["\[Phi]", "\[SixPointedStar]"]}], ",", 
       RowBox[{"Inv", "@", 
        SubscriptBox["\[Psi]", "2"]}], ",", 
       SubscriptBox["\[DoubleStruckP]\[NumberSign]", "2"]}], " ", "]"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["\[DoubleStruckCapitalA]\[NumberSign]", "\[SixPointedStar]"], 
   "=", " ", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{
     SubscriptBox["\[PartialD]", 
      RowBox[{"{", 
       SubscriptBox["\[DoubledGamma]\[NumberSign]", "\[SixPointedStar]"], 
       "}"}]], 
     SubscriptBox["\[CapitalLambda]", "\[SixPointedStar]"]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["\[DoubleStruckCapitalA]\.ba", "\[SixPointedStar]"], "=", " ", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{
     SubscriptBox["\[PartialD]", 
      RowBox[{"{", 
       SubscriptBox["\[DoubledGamma]\.ba", "\[SixPointedStar]"], "}"}]], 
     SubscriptBox["\[CapitalLambda]", "\[SixPointedStar]"]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   OverscriptBox[
    SubscriptBox["\[DoubleStruckCapitalC]", "\[SixPointedStar]"], "_"], " ", 
   "=", 
   RowBox[{"FullSimplify", "@", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"Eye", "[", 
       SubscriptBox["\[Nu]\[NumberSign]", "\[SixPointedStar]"], "]"}], ",", 
      RowBox[{"Dot", "[", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"Inv", "@", 
          
          SubscriptBox["\[DoubleStruckCapitalA]\.ba", 
           "\[SixPointedStar]"]}]}], ",", 
        SubscriptBox["\[DoubleStruckCapitalA]\[NumberSign]", 
         "\[SixPointedStar]"]}], "]"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["\[DoubleStruckCapitalC]", "\[SixPointedStar]"], " ", "=", 
   RowBox[{"FullSimplify", "@", 
    RowBox[{"Dot", "[", 
     RowBox[{
      RowBox[{"Diag", "[", 
       RowBox[{
        SubscriptBox["\[DoubleStruckCapitalC]", "0"], ",", 
        SubscriptBox["\[DoubleStruckCapitalC]", "1"], ",", 
        SubscriptBox["\[DoubleStruckCapitalC]", "2"]}], "]"}], ",", 
      OverscriptBox[
       SubscriptBox["\[DoubleStruckCapitalC]", "\[SixPointedStar]"], "_"]}], 
     "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["\[Psi]", "\[SixPointedStar]"], "=", " ", 
   RowBox[{"Diag", "[", 
    RowBox[{
     SubscriptBox["\[Psi]", "0"], ",", 
     SubscriptBox["\[Psi]", "1"], ",", 
     SubscriptBox["\[Psi]", "2"]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.620850419238078*^9, 3.620850471639621*^9}, {
   3.620850505096641*^9, 3.620850517919739*^9}, {3.6208509218409967`*^9, 
   3.6208509473486032`*^9}, 3.620853603334571*^9, {3.620858314693316*^9, 
   3.620858315012209*^9}, {3.622128573950732*^9, 3.622128693767749*^9}, {
   3.6221302039778957`*^9, 3.622130223492834*^9}, {3.6221304164637527`*^9, 
   3.622130429018632*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   SubscriptBox["\[DoubleStruckCapitalM]", "\[SixPointedStar]"], "=", " ", 
   RowBox[{"Diag", "[", 
    RowBox[{
     SubscriptBox["\[DoubleStruckCapitalM]", "0"], ",", 
     SubscriptBox["\[DoubleStruckCapitalM]", "1"], ",", 
     SubscriptBox["\[DoubleStruckCapitalM]", "2"]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["\[DoubleStruckV]", "\[SixPointedStar]"], "=", " ", 
   RowBox[{"Join", "[", 
    RowBox[{
     SubscriptBox["\[DoubleStruckV]", "0"], ",", 
     SubscriptBox["\[DoubleStruckV]", "1"], ",", 
     SubscriptBox["\[DoubleStruckV]", "2"]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["\[DoubleStruckG]", "\[SixPointedStar]"], "=", " ", 
   RowBox[{"Join", "[", 
    RowBox[{
     SubscriptBox["\[DoubleStruckG]", "0"], ",", 
     SubscriptBox["\[DoubleStruckG]", "1"], ",", 
     SubscriptBox["\[DoubleStruckG]", "2"]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6209340008556337`*^9, 3.620934032589695*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubscriptBox["\[DoubleStruckCapitalC]", "\[SixPointedStar]"], " ", "//", 
  "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.62093415901792*^9, 3.6209341608698463`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "0"},
     {"0", "1"},
     {"0", "0"},
     {
      SubscriptBox["l", "g1"], "0"},
     {
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{
         SubscriptBox["\[Theta]", 
          RowBox[{"0", ",", "2"}]], "[", "t", "]"}], "]"}], " ", 
       SubscriptBox["l", "1"]}], "0"},
     {
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{
         SubscriptBox["\[Theta]", 
          RowBox[{"0", ",", "2"}]], "[", "t", "]"}], "]"}], " ", 
       SubscriptBox["l", "1"]}], 
      SubscriptBox["l", "g2"]},
     {
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Sin", "[", 
         RowBox[{
          SubscriptBox["\[Theta]", 
           RowBox[{"0", ",", "1"}]], "[", "t", "]"}], "]"}]}], " ", 
       SubscriptBox["L", "1"]}], "0"},
     {
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{
         SubscriptBox["\[Theta]", 
          RowBox[{"0", ",", "1"}]], "[", "t", "]"}], "]"}], " ", 
       SubscriptBox["L", "1"]}], "0"},
     {
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Sin", "[", 
         RowBox[{
          SubscriptBox["\[Theta]", 
           RowBox[{"0", ",", "1"}]], "[", "t", "]"}], "]"}]}], " ", 
       SubscriptBox["l", "1"]}], 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Sin", "[", 
         RowBox[{
          RowBox[{
           SubscriptBox["\[Theta]", 
            RowBox[{"0", ",", "1"}]], "[", "t", "]"}], "+", 
          RowBox[{
           SubscriptBox["\[Theta]", 
            RowBox[{"0", ",", "2"}]], "[", "t", "]"}]}], "]"}]}], " ", 
       SubscriptBox["L", "2"]}]},
     {
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{
         SubscriptBox["\[Theta]", 
          RowBox[{"0", ",", "1"}]], "[", "t", "]"}], "]"}], " ", 
       SubscriptBox["l", "1"]}], 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{
         RowBox[{
          SubscriptBox["\[Theta]", 
           RowBox[{"0", ",", "1"}]], "[", "t", "]"}], "+", 
         RowBox[{
          SubscriptBox["\[Theta]", 
           RowBox[{"0", ",", "2"}]], "[", "t", "]"}]}], "]"}], " ", 
       SubscriptBox["L", "2"]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.620934161173921*^9, 3.6211625365531282`*^9, {3.621167363837566*^9, 
   3.621167372890544*^9}, 3.621167418548203*^9, 3.621528453327503*^9, 
   3.621528770039556*^9, 3.621529388688279*^9, 3.621532542787476*^9, 
   3.622128392414915*^9, 3.622128718307263*^9, 3.6221288247859983`*^9, 
   3.622129026334568*^9, 3.622129426128038*^9, 3.622130335668901*^9, 
   3.6221304421507463`*^9, 3.6221318648852453`*^9, 3.622132090259897*^9, 
   3.6221349986095037`*^9, 3.622139993978195*^9, 3.622405252912436*^9, 
   3.6224069720052967`*^9, 3.6224116143444147`*^9, 3.62264926528279*^9, 
   3.6226506756596117`*^9, 3.62265598552293*^9, 3.622656092587726*^9, 
   3.622656514841051*^9, 3.622657324064526*^9, 3.622657562995433*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubscriptBox["\[DoubleStruckCapitalM]", "\[SixPointedStar]"], "//", 
  "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.620853728902211*^9, 3.6208537300894823`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      SubscriptBox["Jz", "1"], "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", 
      SubscriptBox["Jz", "2"], "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", 
      SubscriptBox["\[ScriptM]", "1"], "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", 
      SubscriptBox["\[ScriptM]", "1"], "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", 
      SubscriptBox["\[ScriptM]", "2"], "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", 
      SubscriptBox["\[ScriptM]", "2"], "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", 
      SubscriptBox["M", "1"], "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", 
      SubscriptBox["M", "1"], "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", 
      SubscriptBox["M", "2"], "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", 
      SubscriptBox["M", "2"]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.620853730308722*^9, 3.6208538719657307`*^9, 3.620858236252983*^9, 
   3.620858318355443*^9, 3.6208584016615057`*^9, 3.6208622590785017`*^9, 
   3.6209284962806664`*^9, 3.620929264790681*^9, 3.620931903453965*^9, 
   3.620934103573826*^9, 3.621162536601152*^9, {3.621167363862*^9, 
   3.62116737294309*^9}, 3.6211674185918207`*^9, 3.621528453331388*^9, 
   3.621528770113304*^9, 3.6215293887192707`*^9, 3.621532542850943*^9, 
   3.6221283924584017`*^9, 3.622128718312366*^9, 3.622128824825748*^9, 
   3.622129026383749*^9, 3.6221294265186977`*^9, 3.6221303362567873`*^9, 
   3.622130442196828*^9, 3.6221318649199667`*^9, 3.622132090264101*^9, 
   3.622134998637747*^9, 3.6221399940025473`*^9, 3.622405252967124*^9, 
   3.622406972047022*^9, 3.6224116143845787`*^9, 3.622649265326507*^9, 
   3.622650675722793*^9, 3.622655985527267*^9, 3.622656092591967*^9, 
   3.622656514913241*^9, 3.6226573241408052`*^9, 3.6226575630353603`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubscriptBox["\[DoubleStruckV]", "\[SixPointedStar]"], "//", 
  "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.6208537542945538`*^9, 3.620853756766674*^9}, {
  3.620934037275806*^9, 3.620934038882803*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {"0"},
      {"0"},
      {
       RowBox[{
        RowBox[{"-", 
         SubscriptBox["\[ScriptM]", "1"]}], " ", 
        RowBox[{
         SubscriptBox["v", 
          RowBox[{"0", ",", "y1"}]], "[", "t", "]"}], " ", 
        RowBox[{
         SubscriptBox["\[Omega]", 
          RowBox[{"0", ",", "z1"}]], "[", "t", "]"}]}]},
      {
       RowBox[{
        SubscriptBox["\[ScriptM]", "1"], " ", 
        RowBox[{
         SubscriptBox["v", 
          RowBox[{"0", ",", "x1"}]], "[", "t", "]"}], " ", 
        RowBox[{
         SubscriptBox["\[Omega]", 
          RowBox[{"0", ",", "z1"}]], "[", "t", "]"}]}]},
      {
       RowBox[{
        RowBox[{"-", 
         SubscriptBox["\[ScriptM]", "2"]}], " ", 
        RowBox[{
         SubscriptBox["v", 
          RowBox[{"0", ",", "y2"}]], "[", "t", "]"}], " ", 
        RowBox[{
         SubscriptBox["\[Omega]", 
          RowBox[{"0", ",", "z2"}]], "[", "t", "]"}]}]},
      {
       RowBox[{
        SubscriptBox["\[ScriptM]", "2"], " ", 
        RowBox[{
         SubscriptBox["v", 
          RowBox[{"0", ",", "x2"}]], "[", "t", "]"}], " ", 
        RowBox[{
         SubscriptBox["\[Omega]", 
          RowBox[{"0", ",", "z2"}]], "[", "t", "]"}]}]},
      {"0"},
      {"0"},
      {"0"},
      {"0"}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.620853757338829*^9, 3.62085387522554*^9, 3.620858236309189*^9, 
   3.620858318401394*^9, 3.620858401696281*^9, 3.6208622591189003`*^9, 
   3.620928496316989*^9, 3.620929264835252*^9, 3.6209319035049686`*^9, 
   3.620934103600976*^9, 3.621162536642578*^9, {3.621167363887752*^9, 
   3.621167372993782*^9}, 3.621167418636137*^9, 3.6215284534054337`*^9, 
   3.621528770191571*^9, 3.6215293887500772`*^9, 3.621532542910633*^9, 
   3.6221283925061293`*^9, 3.6221287183526173`*^9, 3.62212882495998*^9, 
   3.622129026435894*^9, 3.6221294270003138`*^9, 3.6221303366741056`*^9, 
   3.622130442244978*^9, 3.622131864926656*^9, 3.622132090294944*^9, 
   3.62213499867213*^9, 3.622139994022464*^9, 3.622405252975833*^9, 
   3.622406972055052*^9, 3.6224116144305487`*^9, 3.622649265378995*^9, 
   3.62265067572676*^9, 3.622655985598473*^9, 3.6226560926721497`*^9, 
   3.622656514918888*^9, 3.622657324214899*^9, 3.622657563078143*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubscriptBox["\[DoubleStruckG]", "\[SixPointedStar]"], "//", 
  "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.6208537726385612`*^9, 3.620853774174127*^9}, {
  3.6209340418826923`*^9, 3.620934043419117*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {"0"},
      {"0"},
      {
       RowBox[{"g", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{
          SubscriptBox["\[Theta]", 
           RowBox[{"0", ",", "1"}]], "[", "t", "]"}], "]"}], " ", 
        SubscriptBox["\[ScriptM]", "1"]}]},
      {
       RowBox[{"g", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{
          SubscriptBox["\[Theta]", 
           RowBox[{"0", ",", "1"}]], "[", "t", "]"}], "]"}], " ", 
        SubscriptBox["\[ScriptM]", "1"]}]},
      {
       RowBox[{"g", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{
          RowBox[{
           SubscriptBox["\[Theta]", 
            RowBox[{"0", ",", "1"}]], "[", "t", "]"}], "+", 
          RowBox[{
           SubscriptBox["\[Theta]", 
            RowBox[{"0", ",", "2"}]], "[", "t", "]"}]}], "]"}], " ", 
        SubscriptBox["\[ScriptM]", "2"]}]},
      {
       RowBox[{"g", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{
          RowBox[{
           SubscriptBox["\[Theta]", 
            RowBox[{"0", ",", "1"}]], "[", "t", "]"}], "+", 
          RowBox[{
           SubscriptBox["\[Theta]", 
            RowBox[{"0", ",", "2"}]], "[", "t", "]"}]}], "]"}], " ", 
        SubscriptBox["\[ScriptM]", "2"]}]},
      {"0"},
      {
       RowBox[{"g", " ", 
        SubscriptBox["M", "1"]}]},
      {"0"},
      {
       RowBox[{"g", " ", 
        SubscriptBox["M", "2"]}]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.6208537748321047`*^9, 3.6208538770733337`*^9, 3.62085823644543*^9, 
   3.620858318432733*^9, 3.620858401734858*^9, 3.620862259158271*^9, 
   3.620928496350514*^9, 3.620929264882509*^9, 3.6209319035520563`*^9, 
   3.620934103630533*^9, 3.6211625366855383`*^9, {3.62116736391085*^9, 
   3.6211673730425386`*^9}, 3.621167418679221*^9, 3.621528453485477*^9, 
   3.621528770289257*^9, 3.6215293887545156`*^9, 3.621532542962843*^9, 
   3.622128392556026*^9, 3.622128718390225*^9, 3.6221288252581453`*^9, 
   3.622129026485878*^9, 3.622129427325501*^9, 3.622130336866432*^9, 
   3.622130442290916*^9, 3.622131864966976*^9, 3.6221320903305387`*^9, 
   3.6221349987043858`*^9, 3.6221399940434637`*^9, 3.622405253035017*^9, 
   3.6224069720968533`*^9, 3.622411614525784*^9, 3.622649265431096*^9, 
   3.6226506757650337`*^9, 3.6226559856665983`*^9, 3.622656092751528*^9, 
   3.6226565150017433`*^9, 3.622657324285054*^9, 3.622657563119875*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   SubscriptBox["\[DoubleStruckCapitalA]", "\[SixPointedStar]"], "=", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"Join", "[", 
      RowBox[{
       SubscriptBox["\[DoubleStruckCapitalA]", "0"], ",", 
       RowBox[{"Zeros", "[", 
        RowBox[{"4", ",", "4"}], "]"}], ",", "2"}], "]"}], ",", 
     RowBox[{"FullSimplify", "[", 
      RowBox[{
       SubscriptBox["\[PartialD]", 
        RowBox[{"{", 
         SubscriptBox["\[DoubleStruckP]", "\[SixPointedStar]"], "}"}]], 
       SubscriptBox["\[CapitalLambda]", "\[SixPointedStar]"]}], "]"}]}], 
    "]"}]}], ";", 
  RowBox[{
   SubscriptBox["\[DoubleStruckCapitalA]", "\[SixPointedStar]"], "//", 
   "MatrixForm"}]}]], "Input",
 CellChangeTimes->{{3.621541254297716*^9, 3.62154125590718*^9}, {
  3.6215413827942247`*^9, 3.6215414072821503`*^9}, {3.621541471185381*^9, 
  3.621541500106998*^9}, {3.621541558243477*^9, 3.62154159084999*^9}, {
  3.6221287567288113`*^9, 3.622128757174313*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0", 
      RowBox[{"-", "1"}], "0", "0", "0", "0", "0", "0", "0"},
     {
      SubscriptBox["l", "g1"], "0", "0", 
      RowBox[{"-", "1"}], "0", "0", "0", "0", "0", "0"},
     {
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{
         SubscriptBox["\[Theta]", 
          RowBox[{"0", ",", "2"}]], "[", "t", "]"}], "]"}], " ", 
       SubscriptBox["l", "1"]}], "0", "0", "0", 
      RowBox[{"-", "1"}], "0", "0", "0", "0", "0"},
     {
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{
         SubscriptBox["\[Theta]", 
          RowBox[{"0", ",", "2"}]], "[", "t", "]"}], "]"}], " ", 
       SubscriptBox["l", "1"]}], 
      SubscriptBox["l", "g2"], "0", "0", "0", 
      RowBox[{"-", "1"}], "0", "0", "0", "0"},
     {
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{
         SubscriptBox["\[Theta]", 
          RowBox[{"0", ",", "1"}]], "[", "t", "]"}], "]"}], " ", 
       SubscriptBox["L", "1"]}], "0", "0", "0", "0", "0", "1", "0", "0", 
      "0"},
     {
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Cos", "[", 
         RowBox[{
          SubscriptBox["\[Theta]", 
           RowBox[{"0", ",", "1"}]], "[", "t", "]"}], "]"}]}], " ", 
       SubscriptBox["L", "1"]}], "0", "0", "0", "0", "0", "0", "1", "0", 
      "0"},
     {
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{
         SubscriptBox["\[Theta]", 
          RowBox[{"0", ",", "1"}]], "[", "t", "]"}], "]"}], " ", 
       SubscriptBox["l", "1"]}], 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{
         RowBox[{
          SubscriptBox["\[Theta]", 
           RowBox[{"0", ",", "1"}]], "[", "t", "]"}], "+", 
         RowBox[{
          SubscriptBox["\[Theta]", 
           RowBox[{"0", ",", "2"}]], "[", "t", "]"}]}], "]"}], " ", 
       SubscriptBox["L", "2"]}], "0", "0", "0", "0", "0", "0", "1", "0"},
     {
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Cos", "[", 
         RowBox[{
          SubscriptBox["\[Theta]", 
           RowBox[{"0", ",", "1"}]], "[", "t", "]"}], "]"}]}], " ", 
       SubscriptBox["l", "1"]}], 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Cos", "[", 
         RowBox[{
          RowBox[{
           SubscriptBox["\[Theta]", 
            RowBox[{"0", ",", "1"}]], "[", "t", "]"}], "+", 
          RowBox[{
           SubscriptBox["\[Theta]", 
            RowBox[{"0", ",", "2"}]], "[", "t", "]"}]}], "]"}]}], " ", 
       SubscriptBox["L", "2"]}], "0", "0", "0", "0", "0", "0", "0", "1"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.621541256237174*^9, 3.621541408217699*^9, {3.621541476310836*^9, 
   3.621541500816269*^9}, {3.621541573893269*^9, 3.621541591671487*^9}, 
   3.622128392681929*^9, 3.622128718439228*^9, 3.6221287589668493`*^9, 
   3.622128825553846*^9, 3.622129026584228*^9, 3.622129427575983*^9, 
   3.6221303370591393`*^9, 3.622130442385015*^9, 3.622131865018895*^9, 
   3.6221320904025097`*^9, 3.62213499877853*^9, 3.622139994125656*^9, 
   3.622405253153058*^9, 3.622406972190436*^9, 3.622411614639477*^9, 
   3.6226492655402317`*^9, 3.622650675977785*^9, 3.622655985782732*^9, 
   3.622656092877334*^9, 3.6226565150731993`*^9, 3.6226573243976803`*^9, 
   3.622657563213327*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   SubscriptBox[
    OverscriptBox["\[DoubleStruckCapitalA]", "."], "\[SixPointedStar]"], "=", 
   
   RowBox[{"Dot", "[", 
    RowBox[{
     RowBox[{
      SubscriptBox["\[PartialD]", 
       RowBox[{"{", 
        SubscriptBox["\[DoubleStruckQ]", "\[SixPointedStar]"], "}"}]], 
      SubscriptBox["\[DoubleStruckCapitalA]", "\[SixPointedStar]"]}], ",", 
     RowBox[{"Inv", "@", 
      SubscriptBox["\[Psi]", "\[SixPointedStar]"]}], ",", 
     SubscriptBox["\[DoubledGamma]", "\[SixPointedStar]"]}], "]"}]}], ";", 
  RowBox[{
   SubscriptBox[
    OverscriptBox["\[DoubleStruckCapitalA]", "."], "\[SixPointedStar]"], "//",
    "MatrixForm"}]}]], "Input",
 CellChangeTimes->{{3.621545031050543*^9, 3.621545091024008*^9}, {
  3.6215451220758*^9, 3.6215451441544447`*^9}, {3.622128763511832*^9, 
  3.622128766830452*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{"Cos", "[", 
          RowBox[{
           SubscriptBox["\[Theta]", 
            RowBox[{"0", ",", "2"}]], "[", "t", "]"}], "]"}]}], " ", 
        SubscriptBox["l", "1"], " ", 
        RowBox[{
         SubscriptBox["\[Omega]", 
          RowBox[{"0", ",", "z1"}]], "[", "t", "]"}]}], "+", 
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{
          SubscriptBox["\[Theta]", 
           RowBox[{"0", ",", "2"}]], "[", "t", "]"}], "]"}], " ", 
        SubscriptBox["l", "1"], " ", 
        RowBox[{
         SubscriptBox["\[Omega]", 
          RowBox[{"0", ",", "z2"}]], "[", "t", "]"}]}]}], "0", "0", "0", "0", 
      "0", "0", "0", "0", "0"},
     {
      RowBox[{
       RowBox[{
        RowBox[{"Sin", "[", 
         RowBox[{
          SubscriptBox["\[Theta]", 
           RowBox[{"0", ",", "2"}]], "[", "t", "]"}], "]"}], " ", 
        SubscriptBox["l", "1"], " ", 
        RowBox[{
         SubscriptBox["\[Omega]", 
          RowBox[{"0", ",", "z1"}]], "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{"Sin", "[", 
         RowBox[{
          SubscriptBox["\[Theta]", 
           RowBox[{"0", ",", "2"}]], "[", "t", "]"}], "]"}], " ", 
        SubscriptBox["l", "1"], " ", 
        RowBox[{
         SubscriptBox["\[Omega]", 
          RowBox[{"0", ",", "z2"}]], "[", "t", "]"}]}]}], "0", "0", "0", "0", 
      "0", "0", "0", "0", "0"},
     {
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{
         SubscriptBox["\[Theta]", 
          RowBox[{"0", ",", "1"}]], "[", "t", "]"}], "]"}], " ", 
       SubscriptBox["L", "1"], " ", 
       RowBox[{
        SubscriptBox["\[Omega]", 
         RowBox[{"0", ",", "z1"}]], "[", "t", "]"}]}], "0", "0", "0", "0", 
      "0", "0", "0", "0", "0"},
     {
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{
         SubscriptBox["\[Theta]", 
          RowBox[{"0", ",", "1"}]], "[", "t", "]"}], "]"}], " ", 
       SubscriptBox["L", "1"], " ", 
       RowBox[{
        SubscriptBox["\[Omega]", 
         RowBox[{"0", ",", "z1"}]], "[", "t", "]"}]}], "0", "0", "0", "0", 
      "0", "0", "0", "0", "0"},
     {
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{
         SubscriptBox["\[Theta]", 
          RowBox[{"0", ",", "1"}]], "[", "t", "]"}], "]"}], " ", 
       SubscriptBox["l", "1"], " ", 
       RowBox[{
        SubscriptBox["\[Omega]", 
         RowBox[{"0", ",", "z1"}]], "[", "t", "]"}]}], 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{
         RowBox[{
          SubscriptBox["\[Theta]", 
           RowBox[{"0", ",", "1"}]], "[", "t", "]"}], "+", 
         RowBox[{
          SubscriptBox["\[Theta]", 
           RowBox[{"0", ",", "2"}]], "[", "t", "]"}]}], "]"}], " ", 
       SubscriptBox["L", "2"], " ", 
       RowBox[{
        SubscriptBox["\[Omega]", 
         RowBox[{"0", ",", "z2"}]], "[", "t", "]"}]}], "0", "0", "0", "0", 
      "0", "0", "0", "0"},
     {
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{
         SubscriptBox["\[Theta]", 
          RowBox[{"0", ",", "1"}]], "[", "t", "]"}], "]"}], " ", 
       SubscriptBox["l", "1"], " ", 
       RowBox[{
        SubscriptBox["\[Omega]", 
         RowBox[{"0", ",", "z1"}]], "[", "t", "]"}]}], 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{
         RowBox[{
          SubscriptBox["\[Theta]", 
           RowBox[{"0", ",", "1"}]], "[", "t", "]"}], "+", 
         RowBox[{
          SubscriptBox["\[Theta]", 
           RowBox[{"0", ",", "2"}]], "[", "t", "]"}]}], "]"}], " ", 
       SubscriptBox["L", "2"], " ", 
       RowBox[{
        SubscriptBox["\[Omega]", 
         RowBox[{"0", ",", "z2"}]], "[", "t", "]"}]}], "0", "0", "0", "0", 
      "0", "0", "0", "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.621545091270965*^9, {3.621545123002392*^9, 3.6215451450449944`*^9}, 
   3.622128392733904*^9, 3.6221287185997133`*^9, 3.622128769634935*^9, 
   3.622128825963694*^9, 3.622129026647415*^9, 3.62212942787324*^9, 
   3.622130337100587*^9, 3.6221304424375134`*^9, 3.622131865063377*^9, 
   3.6221320904427557`*^9, 3.622134998817665*^9, 3.6221399941517057`*^9, 
   3.62240525321694*^9, 3.6224069722479687`*^9, 3.622411614688435*^9, 
   3.622649265592495*^9, 3.6226506760281153`*^9, 3.622655985854084*^9, 
   3.622656092966711*^9, 3.622656515149425*^9, 3.622657324475924*^9, 
   3.622657563260054*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   SubscriptBox["\[DoubleStruckB]", "\[SixPointedStar]"], "=", " ", 
   RowBox[{"FullSimplify", "@", 
    RowBox[{"Dot", "[", 
     RowBox[{
      SubscriptBox[
       OverscriptBox["\[DoubleStruckCapitalA]", "."], "\[SixPointedStar]"], 
      ",", 
      SubscriptBox["\[DoubleStruckP]", "\[SixPointedStar]"]}], "]"}]}]}], ";", 
  RowBox[{
   SubscriptBox["\[DoubleStruckB]", "\[SixPointedStar]"], "//", 
   "MatrixForm"}]}]], "Input",
 CellChangeTimes->{{3.621545159214017*^9, 3.621545208628438*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {"0"},
      {"0"},
      {
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{
          SubscriptBox["\[Theta]", 
           RowBox[{"0", ",", "2"}]], "[", "t", "]"}], "]"}], " ", 
        SubscriptBox["l", "1"], " ", 
        RowBox[{
         SubscriptBox["\[Omega]", 
          RowBox[{"0", ",", "z1"}]], "[", "t", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{
            SubscriptBox["\[Omega]", 
             RowBox[{"0", ",", "z1"}]], "[", "t", "]"}]}], "+", 
          RowBox[{
           SubscriptBox["\[Omega]", 
            RowBox[{"0", ",", "z2"}]], "[", "t", "]"}]}], ")"}]}]},
      {
       RowBox[{
        RowBox[{"Sin", "[", 
         RowBox[{
          SubscriptBox["\[Theta]", 
           RowBox[{"0", ",", "2"}]], "[", "t", "]"}], "]"}], " ", 
        SubscriptBox["l", "1"], " ", 
        RowBox[{
         SubscriptBox["\[Omega]", 
          RowBox[{"0", ",", "z1"}]], "[", "t", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SubscriptBox["\[Omega]", 
            RowBox[{"0", ",", "z1"}]], "[", "t", "]"}], "-", 
          RowBox[{
           SubscriptBox["\[Omega]", 
            RowBox[{"0", ",", "z2"}]], "[", "t", "]"}]}], ")"}]}]},
      {
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{
          SubscriptBox["\[Theta]", 
           RowBox[{"0", ",", "1"}]], "[", "t", "]"}], "]"}], " ", 
        SubscriptBox["L", "1"], " ", 
        SuperscriptBox[
         RowBox[{
          SubscriptBox["\[Omega]", 
           RowBox[{"0", ",", "z1"}]], "[", "t", "]"}], "2"]}]},
      {
       RowBox[{
        RowBox[{"Sin", "[", 
         RowBox[{
          SubscriptBox["\[Theta]", 
           RowBox[{"0", ",", "1"}]], "[", "t", "]"}], "]"}], " ", 
        SubscriptBox["L", "1"], " ", 
        SuperscriptBox[
         RowBox[{
          SubscriptBox["\[Omega]", 
           RowBox[{"0", ",", "z1"}]], "[", "t", "]"}], "2"]}]},
      {
       RowBox[{
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{
           SubscriptBox["\[Theta]", 
            RowBox[{"0", ",", "1"}]], "[", "t", "]"}], "]"}], " ", 
         SubscriptBox["l", "1"], " ", 
         SuperscriptBox[
          RowBox[{
           SubscriptBox["\[Omega]", 
            RowBox[{"0", ",", "z1"}]], "[", "t", "]"}], "2"]}], "+", 
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{
           RowBox[{
            SubscriptBox["\[Theta]", 
             RowBox[{"0", ",", "1"}]], "[", "t", "]"}], "+", 
           RowBox[{
            SubscriptBox["\[Theta]", 
             RowBox[{"0", ",", "2"}]], "[", "t", "]"}]}], "]"}], " ", 
         SubscriptBox["L", "2"], " ", 
         SuperscriptBox[
          RowBox[{
           SubscriptBox["\[Omega]", 
            RowBox[{"0", ",", "z2"}]], "[", "t", "]"}], "2"]}]}]},
      {
       RowBox[{
        RowBox[{
         RowBox[{"Sin", "[", 
          RowBox[{
           SubscriptBox["\[Theta]", 
            RowBox[{"0", ",", "1"}]], "[", "t", "]"}], "]"}], " ", 
         SubscriptBox["l", "1"], " ", 
         SuperscriptBox[
          RowBox[{
           SubscriptBox["\[Omega]", 
            RowBox[{"0", ",", "z1"}]], "[", "t", "]"}], "2"]}], "+", 
        RowBox[{
         RowBox[{"Sin", "[", 
          RowBox[{
           RowBox[{
            SubscriptBox["\[Theta]", 
             RowBox[{"0", ",", "1"}]], "[", "t", "]"}], "+", 
           RowBox[{
            SubscriptBox["\[Theta]", 
             RowBox[{"0", ",", "2"}]], "[", "t", "]"}]}], "]"}], " ", 
         SubscriptBox["L", "2"], " ", 
         SuperscriptBox[
          RowBox[{
           SubscriptBox["\[Omega]", 
            RowBox[{"0", ",", "z2"}]], "[", "t", "]"}], "2"]}]}]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.621545209056919*^9, 3.622128392859146*^9, 
  3.622128718678486*^9, 3.6221287753111067`*^9, 3.622128826693136*^9, 
  3.6221290268128433`*^9, 3.622129428398834*^9, 3.6221303372826653`*^9, 
  3.622130442806175*^9, 3.622131865260818*^9, 3.622132090559559*^9, 
  3.622134998940583*^9, 3.622139994317552*^9, 3.622405253359003*^9, 
  3.622406972436541*^9, 3.622411614854027*^9, 3.6226492657218723`*^9, 
  3.6226506761472*^9, 3.622655985985262*^9, 3.622656093095933*^9, 
  3.6226565152748203`*^9, 3.622657324606111*^9, 3.6226575634331007`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"(", 
  RowBox[{"ReplaceP", "/.", 
   RowBox[{"\"\<RR\>\"", "\[Rule]", " ", "0"}]}], ")"}]], "Input",
 CellChangeTimes->{{3.620929346124967*^9, 3.620929368083234*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     SubscriptBox["\[Omega]", 
      RowBox[{"0", ",", "z1"}]], "[", "t", "]"}], "\[Rule]", 
    RowBox[{
     SuperscriptBox[
      SubscriptBox["\[Theta]", 
       RowBox[{"0", ",", "1"}]], "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}]}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[Omega]", 
      RowBox[{"0", ",", "z2"}]], "[", "t", "]"}], "\[Rule]", 
    RowBox[{
     RowBox[{
      SuperscriptBox[
       SubscriptBox["\[Theta]", 
        RowBox[{"0", ",", "1"}]], "\[Prime]",
       MultilineFunction->None], "[", "t", "]"}], "+", 
     RowBox[{
      SuperscriptBox[
       SubscriptBox["\[Theta]", 
        RowBox[{"0", ",", "2"}]], "\[Prime]",
       MultilineFunction->None], "[", "t", "]"}]}]}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["v", 
      RowBox[{"0", ",", "x1"}]], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["v", 
      RowBox[{"0", ",", "y1"}]], "[", "t", "]"}], "\[Rule]", 
    RowBox[{
     SubscriptBox["l", "g1"], " ", 
     RowBox[{
      SuperscriptBox[
       SubscriptBox["\[Theta]", 
        RowBox[{"0", ",", "1"}]], "\[Prime]",
       MultilineFunction->None], "[", "t", "]"}]}]}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["v", 
      RowBox[{"0", ",", "x2"}]], "[", "t", "]"}], "\[Rule]", 
    RowBox[{
     RowBox[{"Sin", "[", 
      RowBox[{
       SubscriptBox["\[Theta]", 
        RowBox[{"0", ",", "2"}]], "[", "t", "]"}], "]"}], " ", 
     SubscriptBox["l", "1"], " ", 
     RowBox[{
      SuperscriptBox[
       SubscriptBox["\[Theta]", 
        RowBox[{"0", ",", "1"}]], "\[Prime]",
       MultilineFunction->None], "[", "t", "]"}]}]}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["v", 
      RowBox[{"0", ",", "y2"}]], "[", "t", "]"}], "\[Rule]", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{
           SubscriptBox["\[Theta]", 
            RowBox[{"0", ",", "2"}]], "[", "t", "]"}], "]"}], " ", 
         SubscriptBox["l", "1"]}], "+", 
        SubscriptBox["l", "g2"]}], ")"}], " ", 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Theta]", 
         RowBox[{"0", ",", "1"}]], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}]}], "+", 
     RowBox[{
      SubscriptBox["l", "g2"], " ", 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[Theta]", 
         RowBox[{"0", ",", "2"}]], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}]}]}]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.6209293498483887`*^9, 3.6209293606506863`*^9}, 
   3.620931903609415*^9, 3.620934103660536*^9, 3.621162536734353*^9, {
   3.6211673639357986`*^9, 3.621167373085154*^9}, 3.6211674187175417`*^9, 
   3.621528453565818*^9, 3.6215287703618927`*^9, 3.621529388783029*^9, 
   3.62153254301805*^9, 3.6221283929142437`*^9, 3.62212871881404*^9, 
   3.622128779667076*^9, 3.622128826815197*^9, 3.6221290268743973`*^9, 
   3.6221294289473867`*^9, 3.6221303378931*^9, 3.622130442849319*^9, 
   3.6221318653112297`*^9, 3.622132090597576*^9, 3.6221349989723663`*^9, 
   3.622139994327498*^9, 3.6224052534206953`*^9, 3.6224069724984713`*^9, 
   3.62241161491245*^9, 3.622649265771407*^9, 3.622650676195601*^9, 
   3.6226559860688677`*^9, 3.622656093190243*^9, 3.62265651535845*^9, 
   3.6226573246861763`*^9, 3.6226575634779367`*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[DoubleStruckCapitalM]\[NumberSign]", " ", "=", " ", 
   RowBox[{"FullSimplify", "@", 
    RowBox[{"Dot", "[", 
     RowBox[{
      RowBox[{
       SubscriptBox["\[Psi]", "0"], "\[Transpose]"}], ",", 
      RowBox[{
       SubscriptBox["\[DoubleStruckCapitalC]", "\[SixPointedStar]"], 
       "\[Transpose]"}], ",", 
      SubscriptBox["\[DoubleStruckCapitalM]", "\[SixPointedStar]"], ",", 
      SubscriptBox["\[DoubleStruckCapitalC]", "\[SixPointedStar]"], ",", 
      SubscriptBox["\[Psi]", "0"]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[DoubleStruckV]\[NumberSign]", " ", "=", " ", 
   RowBox[{"FullSimplify", "@", 
    RowBox[{"Dot", "[", 
     RowBox[{
      RowBox[{
       SubscriptBox["\[Psi]", "0"], "\[Transpose]"}], ",", 
      RowBox[{
       SubscriptBox["\[DoubleStruckCapitalC]", "\[SixPointedStar]"], 
       "\[Transpose]"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"Dot", "[", 
         RowBox[{
          SubscriptBox["\[DoubleStruckCapitalM]", "\[SixPointedStar]"], ",", 
          RowBox[{
           SubscriptBox["\[PartialD]", "t"], 
           RowBox[{"Dot", "[", 
            RowBox[{
             SubscriptBox["\[DoubleStruckCapitalC]", "\[SixPointedStar]"], 
             ",", 
             SubscriptBox["\[Psi]", "0"]}], "]"}]}], ",", 
          RowBox[{
           SubscriptBox["\[PartialD]", "t"], 
           
           SubscriptBox["\[DoubleStruckQ]\[NumberSign]", 
            "\[SixPointedStar]"]}]}], "]"}], "+", 
        SubscriptBox["\[DoubleStruckV]", "\[SixPointedStar]"]}], "/.", 
       RowBox[{"(", 
        RowBox[{"ReplaceP", "/.", 
         RowBox[{"\"\<RR\>\"", "\[Rule]", " ", "0"}]}], ")"}]}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[DoubleStruckG]\[NumberSign]", " ", "=", " ", 
   RowBox[{"FullSimplify", "@", 
    RowBox[{"Dot", "[", 
     RowBox[{
      RowBox[{
       SubscriptBox["\[Psi]", "0"], "\[Transpose]"}], ",", 
      RowBox[{
       SubscriptBox["\[DoubleStruckCapitalC]", "\[SixPointedStar]"], 
       "\[Transpose]"}], ",", 
      SubscriptBox["\[DoubleStruckG]", "\[SixPointedStar]"]}], "]"}]}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.620858139795444*^9, 3.620858150695984*^9}, {
  3.620859459040411*^9, 3.62085948633456*^9}, {3.620859561764921*^9, 
  3.6208595903480597`*^9}, {3.620859818163788*^9, 3.620859883239406*^9}, {
  3.620929228048465*^9, 3.620929260508719*^9}, {3.620929376131081*^9, 
  3.62092937802069*^9}, {3.620934049178288*^9, 3.620934068921012*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[DoubleStruckCapitalM]\[NumberSign]", "//", 
  "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.6226493984140663`*^9, 3.622649400034316*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       SubscriptBox["Jz", "1"], "+", 
       SubscriptBox["Jz", "2"], "+", 
       RowBox[{
        SubsuperscriptBox["L", "1", "2"], " ", 
        SubscriptBox["M", "1"]}], "+", 
       RowBox[{
        SubsuperscriptBox["L", "2", "2"], " ", 
        SubscriptBox["M", "2"]}], "+", 
       RowBox[{
        SubsuperscriptBox["l", "g1", "2"], " ", 
        SubscriptBox["\[ScriptM]", "1"]}], "+", 
       RowBox[{
        SubsuperscriptBox["l", "g2", "2"], " ", 
        SubscriptBox["\[ScriptM]", "2"]}], "+", 
       RowBox[{
        SubsuperscriptBox["l", "1", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          SubscriptBox["M", "2"], "+", 
          SubscriptBox["\[ScriptM]", "2"]}], ")"}]}], "+", 
       RowBox[{"2", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{
          SubscriptBox["\[Theta]", 
           RowBox[{"0", ",", "2"}]], "[", "t", "]"}], "]"}], " ", 
        SubscriptBox["l", "1"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SubscriptBox["L", "2"], " ", 
           SubscriptBox["M", "2"]}], "+", 
          RowBox[{
           SubscriptBox["l", "g2"], " ", 
           SubscriptBox["\[ScriptM]", "2"]}]}], ")"}]}]}], 
      RowBox[{
       SubscriptBox["Jz", "2"], "+", 
       RowBox[{
        SubscriptBox["L", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{
             SubscriptBox["\[Theta]", 
              RowBox[{"0", ",", "2"}]], "[", "t", "]"}], "]"}], " ", 
           SubscriptBox["l", "1"]}], "+", 
          SubscriptBox["L", "2"]}], ")"}], " ", 
        SubscriptBox["M", "2"]}], "+", 
       RowBox[{
        SubscriptBox["l", "g2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{
             SubscriptBox["\[Theta]", 
              RowBox[{"0", ",", "2"}]], "[", "t", "]"}], "]"}], " ", 
           SubscriptBox["l", "1"]}], "+", 
          SubscriptBox["l", "g2"]}], ")"}], " ", 
        SubscriptBox["\[ScriptM]", "2"]}]}]},
     {
      RowBox[{
       SubscriptBox["Jz", "2"], "+", 
       RowBox[{
        SubscriptBox["L", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{
             SubscriptBox["\[Theta]", 
              RowBox[{"0", ",", "2"}]], "[", "t", "]"}], "]"}], " ", 
           SubscriptBox["l", "1"]}], "+", 
          SubscriptBox["L", "2"]}], ")"}], " ", 
        SubscriptBox["M", "2"]}], "+", 
       RowBox[{
        SubscriptBox["l", "g2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{
             SubscriptBox["\[Theta]", 
              RowBox[{"0", ",", "2"}]], "[", "t", "]"}], "]"}], " ", 
           SubscriptBox["l", "1"]}], "+", 
          SubscriptBox["l", "g2"]}], ")"}], " ", 
        SubscriptBox["\[ScriptM]", "2"]}]}], 
      RowBox[{
       SubscriptBox["Jz", "2"], "+", 
       RowBox[{
        SubsuperscriptBox["L", "2", "2"], " ", 
        SubscriptBox["M", "2"]}], "+", 
       RowBox[{
        SubsuperscriptBox["l", "g2", "2"], " ", 
        SubscriptBox["\[ScriptM]", "2"]}]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.622649400502007*^9, 3.622650677446374*^9, 
  3.6226559872005377`*^9, 3.622656094391159*^9, 3.622656516452907*^9, 
  3.622657325784842*^9, 3.622657564594502*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[DoubleStruckV]\[NumberSign]", "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.6226494084057493`*^9, 3.6226494107898283`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {
       RowBox[{
        RowBox[{"-", 
         RowBox[{"Sin", "[", 
          RowBox[{
           SubscriptBox["\[Theta]", 
            RowBox[{"0", ",", "2"}]], "[", "t", "]"}], "]"}]}], " ", 
        SubscriptBox["l", "1"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SubscriptBox["L", "2"], " ", 
           SubscriptBox["M", "2"]}], "+", 
          RowBox[{
           SubscriptBox["l", "g2"], " ", 
           SubscriptBox["\[ScriptM]", "2"]}]}], ")"}], " ", 
        RowBox[{
         SuperscriptBox[
          SubscriptBox["\[Theta]", 
           RowBox[{"0", ",", "2"}]], "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", 
           RowBox[{
            SuperscriptBox[
             SubscriptBox["\[Theta]", 
              RowBox[{"0", ",", "1"}]], "\[Prime]",
             MultilineFunction->None], "[", "t", "]"}]}], "+", 
          RowBox[{
           SuperscriptBox[
            SubscriptBox["\[Theta]", 
             RowBox[{"0", ",", "2"}]], "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}]}], ")"}]}]},
      {
       RowBox[{
        RowBox[{"Sin", "[", 
         RowBox[{
          SubscriptBox["\[Theta]", 
           RowBox[{"0", ",", "2"}]], "[", "t", "]"}], "]"}], " ", 
        SubscriptBox["l", "1"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SubscriptBox["L", "2"], " ", 
           SubscriptBox["M", "2"]}], "+", 
          RowBox[{
           SubscriptBox["l", "g2"], " ", 
           SubscriptBox["\[ScriptM]", "2"]}]}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{
          SuperscriptBox[
           SubscriptBox["\[Theta]", 
            RowBox[{"0", ",", "1"}]], "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], "2"]}]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.622649411140942*^9, 3.622650677488803*^9, 
  3.622655987265376*^9, 3.622656094473064*^9, 3.622656516525407*^9, 
  3.622657325859655*^9, 3.6226575646466*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[DoubleStruckG]\[NumberSign]", "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.6226494172453213`*^9, 3.622649418481161*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {
       RowBox[{"g", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{
             SubscriptBox["\[Theta]", 
              RowBox[{"0", ",", "1"}]], "[", "t", "]"}], "]"}], " ", 
           SubscriptBox["L", "1"], " ", 
           SubscriptBox["M", "1"]}], "+", 
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{
             SubscriptBox["\[Theta]", 
              RowBox[{"0", ",", "1"}]], "[", "t", "]"}], "]"}], " ", 
           SubscriptBox["l", "g1"], " ", 
           SubscriptBox["\[ScriptM]", "1"]}], "+", 
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{
             SubscriptBox["\[Theta]", 
              RowBox[{"0", ",", "1"}]], "[", "t", "]"}], "]"}], " ", 
           SubscriptBox["l", "1"], " ", 
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["M", "2"], "+", 
             SubscriptBox["\[ScriptM]", "2"]}], ")"}]}], "+", 
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{
             RowBox[{
              SubscriptBox["\[Theta]", 
               RowBox[{"0", ",", "1"}]], "[", "t", "]"}], "+", 
             RowBox[{
              SubscriptBox["\[Theta]", 
               RowBox[{"0", ",", "2"}]], "[", "t", "]"}]}], "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              SubscriptBox["L", "2"], " ", 
              SubscriptBox["M", "2"]}], "+", 
             RowBox[{
              SubscriptBox["l", "g2"], " ", 
              SubscriptBox["\[ScriptM]", "2"]}]}], ")"}]}]}], ")"}]}]},
      {
       RowBox[{"g", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{
          RowBox[{
           SubscriptBox["\[Theta]", 
            RowBox[{"0", ",", "1"}]], "[", "t", "]"}], "+", 
          RowBox[{
           SubscriptBox["\[Theta]", 
            RowBox[{"0", ",", "2"}]], "[", "t", "]"}]}], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SubscriptBox["L", "2"], " ", 
           SubscriptBox["M", "2"]}], "+", 
          RowBox[{
           SubscriptBox["l", "g2"], " ", 
           SubscriptBox["\[ScriptM]", "2"]}]}], ")"}]}]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.622649418781191*^9, 3.622650677625732*^9, 
  3.622655987271634*^9, 3.622656094478169*^9, 3.6226565165328283`*^9, 
  3.622657325937703*^9, 3.622657564654984*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sol", " ", "=", 
  RowBox[{"Flatten", "@", 
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
        "\[DoubleStruckG]\[NumberSign]", "\[LeftDoubleBracket]", "1", 
         "\[RightDoubleBracket]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{
        "\[DoubleStruckG]\[NumberSign]", "\[LeftDoubleBracket]", "2", 
         "\[RightDoubleBracket]"}], "\[Equal]", "0"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       SubscriptBox["L", "1"], ",", 
       SubscriptBox["L", "2"]}], "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6208581710069523`*^9, 3.620858179707103*^9}, {
  3.620934080701357*^9, 3.6209340842776213`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    SubscriptBox["L", "1"], "\[Rule]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{
       RowBox[{
        SubscriptBox["l", "1"], " ", 
        SubscriptBox["M", "2"]}], "+", 
       RowBox[{
        SubscriptBox["l", "g1"], " ", 
        SubscriptBox["\[ScriptM]", "1"]}], "+", 
       RowBox[{
        SubscriptBox["l", "1"], " ", 
        SubscriptBox["\[ScriptM]", "2"]}]}], 
      SubscriptBox["M", "1"]]}]}], ",", 
   RowBox[{
    SubscriptBox["L", "2"], "\[Rule]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{
       SubscriptBox["l", "g2"], " ", 
       SubscriptBox["\[ScriptM]", "2"]}], 
      SubscriptBox["M", "2"]]}]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.620858238401773*^9, 3.620858320398498*^9, 3.620858403152309*^9, {
   3.620859466441121*^9, 3.620859489790452*^9}, {3.620859566751005*^9, 
   3.6208595808073997`*^9}, 3.620859887336577*^9, 3.6208622607375526`*^9, 
   3.620928497476798*^9, 3.6209292668518877`*^9, 3.6209293810071507`*^9, 
   3.620931904745194*^9, 3.6209341049696703`*^9, 3.6211625381805058`*^9, {
   3.621167365297614*^9, 3.621167374478834*^9}, 3.621167420165069*^9, 
   3.621528454645801*^9, 3.62152877163266*^9, 3.621529389890725*^9, 
   3.6215325442048273`*^9, 3.6221283940067863`*^9, 3.622128720826724*^9, 
   3.622128828446192*^9, 3.622129027940597*^9, 3.622129430163136*^9, 
   3.6221303396621113`*^9, 3.622130443979269*^9, 3.622131866471743*^9, 
   3.622132091686597*^9, 3.622135000063298*^9, 3.6221399960586967`*^9, 
   3.622405254501017*^9, 3.622406973647682*^9, 3.622411616386115*^9, 
   3.622649266853018*^9, 3.6226506776748247`*^9, 3.622655987345825*^9, 
   3.6226560945636578`*^9, 3.6226565166217337`*^9, 3.622657326010954*^9, 
   3.6226575647158957`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"FullSimplify", "[", 
   RowBox[{"\[DoubleStruckCapitalM]\[NumberSign]", "/.", "Sol"}], "]"}], "//",
   "MatrixForm"}]], "Input"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       SubscriptBox["Jz", "1"], "+", 
       SubscriptBox["Jz", "2"], "+", 
       RowBox[{
        SubsuperscriptBox["l", "g1", "2"], " ", 
        SubscriptBox["\[ScriptM]", "1"]}], "+", 
       RowBox[{
        SubsuperscriptBox["l", "g2", "2"], " ", 
        SubscriptBox["\[ScriptM]", "2"]}], "+", 
       FractionBox[
        RowBox[{
         SubsuperscriptBox["l", "g2", "2"], " ", 
         SubsuperscriptBox["\[ScriptM]", "2", "2"]}], 
        SubscriptBox["M", "2"]], "+", 
       RowBox[{
        SubsuperscriptBox["l", "1", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          SubscriptBox["M", "2"], "+", 
          SubscriptBox["\[ScriptM]", "2"]}], ")"}]}], "+", 
       FractionBox[
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SubscriptBox["l", "g1"], " ", 
            SubscriptBox["\[ScriptM]", "1"]}], "+", 
           RowBox[{
            SubscriptBox["l", "1"], " ", 
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["M", "2"], "+", 
              SubscriptBox["\[ScriptM]", "2"]}], ")"}]}]}], ")"}], "2"], 
        SubscriptBox["M", "1"]]}], 
      RowBox[{
       SubscriptBox["Jz", "2"], "+", 
       FractionBox[
        RowBox[{
         SubsuperscriptBox["l", "g2", "2"], " ", 
         SubscriptBox["\[ScriptM]", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["M", "2"], "+", 
           SubscriptBox["\[ScriptM]", "2"]}], ")"}]}], 
        SubscriptBox["M", "2"]]}]},
     {
      RowBox[{
       SubscriptBox["Jz", "2"], "+", 
       FractionBox[
        RowBox[{
         SubsuperscriptBox["l", "g2", "2"], " ", 
         SubscriptBox["\[ScriptM]", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["M", "2"], "+", 
           SubscriptBox["\[ScriptM]", "2"]}], ")"}]}], 
        SubscriptBox["M", "2"]]}], 
      RowBox[{
       SubscriptBox["Jz", "2"], "+", 
       FractionBox[
        RowBox[{
         SubsuperscriptBox["l", "g2", "2"], " ", 
         SubscriptBox["\[ScriptM]", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["M", "2"], "+", 
           SubscriptBox["\[ScriptM]", "2"]}], ")"}]}], 
        SubscriptBox["M", "2"]]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.620858238747613*^9, 3.6208583207569*^9, 3.620858403560697*^9, {
   3.620859468261073*^9, 3.620859493276713*^9}, {3.620859568586772*^9, 
   3.620859582390974*^9}, 3.62085988946938*^9, 3.620862261176984*^9, 
   3.620928497855566*^9, 3.620929267197624*^9, 3.6209293826604033`*^9, 
   3.6209319051300993`*^9, 3.6209341052959433`*^9, 3.621162538638569*^9, {
   3.6211673657091007`*^9, 3.621167374914928*^9}, 3.621167420629527*^9, 
   3.621528455036598*^9, 3.6215287720513363`*^9, 3.6215293902901707`*^9, 
   3.6215325445778513`*^9, 3.622128394339417*^9, 3.6221287215615664`*^9, 
   3.6221288287830257`*^9, 3.6221290283139687`*^9, 3.622129430568779*^9, 
   3.62213034017087*^9, 3.62213044441084*^9, 3.622131866859832*^9, 
   3.622132092041719*^9, 3.6221350004141417`*^9, 3.622139996577136*^9, 
   3.622405254883222*^9, 3.622406974009486*^9, 3.622411616841989*^9, 
   3.622649267221743*^9, 3.622650678083288*^9, 3.622655987731069*^9, 
   3.62265609496308*^9, 3.6226565170143843`*^9, 3.622657326357629*^9, 
   3.622657565085805*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"FullSimplify", "[", 
   RowBox[{"\[DoubleStruckV]\[NumberSign]", "/.", "Sol"}], "]"}], "//", 
  "MatrixForm"}]], "Input",
 CellChangeTimes->{3.620934092531341*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {"0"},
      {"0"}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.620858242695887*^9, 3.620858324275495*^9, 3.620858403610817*^9, {
   3.62085947055768*^9, 3.620859495196066*^9}, {3.620859571282777*^9, 
   3.620859598684041*^9}, {3.620859891397839*^9, 3.620859894226199*^9}, 
   3.620862261363276*^9, 3.620928497918551*^9, 3.620929268068697*^9, 
   3.620929384544533*^9, 3.620931905157358*^9, 3.620934105302659*^9, 
   3.6211625386492*^9, {3.621167365720028*^9, 3.621167374926054*^9}, 
   3.621167420640504*^9, 3.621528455043442*^9, 3.621528772058435*^9, 
   3.6215293902981577`*^9, 3.621532544585513*^9, 3.622128394346991*^9, 
   3.622128722103529*^9, 3.62212882878981*^9, 3.62212902832143*^9, 
   3.622129430576621*^9, 3.622130340177781*^9, 3.622130444421184*^9, 
   3.6221318668676233`*^9, 3.622132092048461*^9, 3.622135000421871*^9, 
   3.6221399965859957`*^9, 3.622405254892029*^9, 3.622406974017049*^9, 
   3.622411616849814*^9, 3.622649267229643*^9, 3.622650678092182*^9, 
   3.622655987739781*^9, 3.622656094971664*^9, 3.6226565170232267`*^9, 
   3.622657326366549*^9, 3.622657565095377*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"FullSimplify", "[", 
   RowBox[{"\[DoubleStruckG]\[NumberSign]", "/.", "Sol"}], "]"}], "//", 
  "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.620934095307859*^9, 3.620934099554297*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {"0"},
      {"0"}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.620858242777924*^9, 3.620858324351921*^9, 3.620858403645349*^9, 
   3.620859502423786*^9, 3.6208595744133263`*^9, 3.620859896162592*^9, 
   3.620862261404644*^9, 3.620928497950087*^9, 3.6209292682542877`*^9, 
   3.620929386896043*^9, 3.6209319052274027`*^9, 3.620934105359626*^9, 
   3.62116253870385*^9, {3.6211673657474623`*^9, 3.621167374977683*^9}, 
   3.62116742067878*^9, 3.621528455116042*^9, 3.621528772105028*^9, 
   3.621529390337902*^9, 3.621532544643886*^9, 3.622128394393071*^9, 
   3.622128722396268*^9, 3.622128828861266*^9, 3.622129028371299*^9, 
   3.6221294306449547`*^9, 3.622130340238254*^9, 3.6221304444890614`*^9, 
   3.622131866935163*^9, 3.6221320920784473`*^9, 3.622135000450123*^9, 
   3.622139996608386*^9, 3.62240525495466*^9, 3.622406974059141*^9, 
   3.622411616884746*^9, 3.6226492672768927`*^9, 3.622650678127165*^9, 
   3.62265598781143*^9, 3.6226560950566*^9, 3.6226565170988083`*^9, 
   3.6226573264382277`*^9, 3.6226575651463013`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"Acoplando", " ", "2", " ", 
   RowBox[{"RR", "'"}], "s", " ", "balanceados"}], " ", "*)"}]], "Input"],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"Sub", "-", "sistemas"}], " ", "*)"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "3", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     SubscriptBox["\[Nu]\[NumberSign]", "3"], "=", "2"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[DoubleStruckQ]", "3"], "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        SubscriptBox["x", "p"], "[", "t", "]"}], ",", 
       RowBox[{
        SubscriptBox["y", "p"], "[", "t", "]"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[DoubleStruckP]\[NumberSign]", "3"], "=", 
     RowBox[{
      SubscriptBox["\[PartialD]", "t"], 
      SubscriptBox["\[DoubleStruckQ]", "3"]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[DoubleStruckP]\.ba", "3"], "=", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[DoubleStruckP]", "3"], "=", 
     RowBox[{"Join", "[", 
      RowBox[{
       SubscriptBox["\[DoubleStruckP]\[NumberSign]", "3"], ",", 
       SubscriptBox["\[DoubleStruckP]\.ba", "3"]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[DoubleStruckF]", "3"], "=", 
     RowBox[{"{", 
      RowBox[{
       SubscriptBox["F", "x"], ",", 
       SubscriptBox["F", "y"]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[DoubleStruckCapitalC]", "3"], " ", "=", " ", 
     RowBox[{"Eye", "[", 
      SubscriptBox["\[Nu]\[NumberSign]", "3"], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[Psi]", "3"], "=", " ", 
     RowBox[{"Eye", "[", 
      SubscriptBox["\[Nu]\[NumberSign]", "3"], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[DoubleStruckCapitalM]", "3"], "=", " ", 
     RowBox[{"Diag", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"{", 
         SubscriptBox["\[ScriptM]", "p"], "}"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"{", 
         SubscriptBox["\[ScriptM]", "p"], "}"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[DoubleStruckV]", "3"], "=", " ", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[DoubleStruckG]", "3"], "=", " ", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{
        SubscriptBox["\[ScriptM]", "p"], " ", "g"}]}], "}"}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.621162818848701*^9, 3.621162855424492*^9}, {
  3.6211629290931873`*^9, 3.6211629927366858`*^9}, {3.621163048185864*^9, 
  3.6211630564511003`*^9}, {3.621163163749954*^9, 3.6211631940670433`*^9}, {
  3.622131651383237*^9, 3.622131655424255*^9}, {3.6221349855937157`*^9, 
  3.6221349947524*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "4", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     SubscriptBox["\[Nu]\[NumberSign]", "4"], "=", "2"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[DoubleStruckQ]", "4"], "=", 
     RowBox[{
      SubscriptBox["\[DoubleStruckQ]\[NumberSign]", "\[ScriptR]"], "/.", " ", 
      
      RowBox[{"\"\<RR\>\"", "\[Rule]", " ", "1"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[DoubleStruckP]\[NumberSign]", "4"], "=", 
     RowBox[{
      SubscriptBox["\[PartialD]", "t"], 
      SubscriptBox["\[DoubleStruckQ]", "4"]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[DoubleStruckP]\.ba", "4"], "=", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[DoubleStruckP]", "4"], "=", 
     RowBox[{"Join", "[", 
      RowBox[{
       SubscriptBox["\[DoubleStruckP]\[NumberSign]", "4"], ",", 
       SubscriptBox["\[DoubleStruckP]\.ba", "4"]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[DoubleStruckF]", "4"], "=", 
     RowBox[{"{", 
      RowBox[{
       SubscriptBox["F", "x"], ",", 
       SubscriptBox["F", "y"]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[DoubleStruckCapitalC]", "4"], "=", 
     RowBox[{"Eye", "[", 
      SubscriptBox["\[Nu]\[NumberSign]", "4"], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[Psi]", "4"], "=", 
     RowBox[{"Eye", "[", 
      SubscriptBox["\[Nu]\[NumberSign]", "4"], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[DoubleStruckCapitalM]", "4"], "=", 
     RowBox[{"FullSimplify", "[", 
      RowBox[{"\[DoubleStruckCapitalM]\[NumberSign]", "/.", "Sol"}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[DoubleStruckV]", "4"], "=", 
     RowBox[{"FullSimplify", "[", 
      RowBox[{"\[DoubleStruckV]\[NumberSign]", "/.", "Sol"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[DoubleStruckG]", "4"], "=", 
     RowBox[{"FullSimplify", "[", 
      RowBox[{"\[DoubleStruckG]\[NumberSign]", "/.", "Sol"}], "]"}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.621163218633309*^9, 3.621163236483364*^9}, 
   3.621163276102046*^9, {3.621163321365796*^9, 3.621163322198614*^9}, {
   3.621163359184903*^9, 3.6211633880837173`*^9}, {3.6211634656166286`*^9, 
   3.621163516813485*^9}, {3.621163603182019*^9, 3.621163652848885*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "5", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     SubscriptBox["\[Nu]\[NumberSign]", "5"], "=", "2"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[DoubleStruckQ]", "5"], "=", 
     RowBox[{
      SubscriptBox["\[DoubleStruckQ]\[NumberSign]", "\[ScriptR]"], "/.", " ", 
      
      RowBox[{"\"\<RR\>\"", "\[Rule]", " ", "2"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[DoubleStruckP]\[NumberSign]", "5"], "=", 
     RowBox[{
      SubscriptBox["\[PartialD]", "t"], 
      SubscriptBox["\[DoubleStruckQ]", "5"]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[DoubleStruckP]\.ba", "5"], "=", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[DoubleStruckP]", "5"], "=", 
     RowBox[{"Join", "[", 
      RowBox[{
       SubscriptBox["\[DoubleStruckP]\[NumberSign]", "5"], ",", 
       SubscriptBox["\[DoubleStruckP]\.ba", "5"]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[DoubleStruckF]", "5"], "=", 
     RowBox[{"{", 
      RowBox[{
       SubscriptBox["F", "x"], ",", 
       SubscriptBox["F", "y"]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[DoubleStruckCapitalC]", "5"], "=", 
     RowBox[{"Eye", "[", 
      SubscriptBox["\[Nu]\[NumberSign]", "4"], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[Psi]", "5"], "=", 
     RowBox[{"Eye", "[", 
      SubscriptBox["\[Nu]\[NumberSign]", "4"], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[DoubleStruckCapitalM]", "5"], "=", 
     RowBox[{"FullSimplify", "[", 
      RowBox[{"\[DoubleStruckCapitalM]\[NumberSign]", "/.", "Sol"}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[DoubleStruckV]", "5"], "=", 
     RowBox[{"FullSimplify", "[", 
      RowBox[{"\[DoubleStruckV]\[NumberSign]", "/.", "Sol"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[DoubleStruckG]", "5"], "=", 
     RowBox[{"FullSimplify", "[", 
      RowBox[{"\[DoubleStruckG]\[NumberSign]", "/.", "Sol"}], "]"}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.62116372421389*^9, 3.621163761676219*^9}, {
  3.6211642730425873`*^9, 3.621164273171072*^9}, {3.6211675259180326`*^9, 
  3.6211675260555067`*^9}, {3.622132083100168*^9, 3.622132085629953*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Novas", " ", "coordenadas"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     SubscriptBox["\[Nu]\[NumberSign]", "\[ClubSuit]"], "=", " ", "2"}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[DoubleStruckQ]\[NumberSign]", "\[ClubSuit]"], "=", " ", 
     SubscriptBox["\[DoubleStruckQ]", "3"]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[DoubleStruckQ]", "\[ClubSuit]"], "=", " ", 
     RowBox[{"Join", "[", 
      RowBox[{
       SubscriptBox["\[DoubleStruckQ]", "3"], ",", 
       SubscriptBox["\[DoubleStruckQ]", "4"], ",", 
       SubscriptBox["\[DoubleStruckQ]", "5"]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[DoubleStruckP]", "\[ClubSuit]"], "=", " ", 
     RowBox[{"Join", "[", 
      RowBox[{
       SubscriptBox["\[DoubleStruckP]", "3"], ",", 
       SubscriptBox["\[DoubleStruckP]", "4"], ",", 
       SubscriptBox["\[DoubleStruckP]", "5"]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[DoubledGamma]\[NumberSign]", "\[ClubSuit]"], "=", " ", 
     SubscriptBox["\[DoubleStruckP]\[NumberSign]", "3"]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[DoubledGamma]\.ba", "\[ClubSuit]"], "=", " ", 
     RowBox[{"Join", "[", 
      RowBox[{
       SubscriptBox["\[DoubleStruckP]\[NumberSign]", "4"], ",", 
       SubscriptBox["\[DoubleStruckP]\[NumberSign]", "5"]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[DoubledGamma]", "\[ClubSuit]"], " ", "=", " ", 
     RowBox[{"Join", "[", 
      RowBox[{
       SubscriptBox["\[DoubledGamma]\[NumberSign]", "\[ClubSuit]"], " ", ",", 
       
       SubscriptBox["\[DoubledGamma]\.ba", "\[ClubSuit]"]}], "]"}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.6211638172125883`*^9, 3.621163830424575*^9}, {
   3.6211640341679277`*^9, 3.6211642057449017`*^9}, {3.6221289354770527`*^9, 
   3.622129005210063*^9}, {3.622129079268271*^9, 3.622129122529635*^9}, 
   3.622129352785494*^9, {3.6221301464032803`*^9, 3.622130165888896*^9}, {
   3.622131679831408*^9, 3.6221317432957687`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubscriptBox["\[DoubleStruckP]", "3"], "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.622131555158839*^9, 3.6221315566328373`*^9}, {
  3.622131609239201*^9, 3.622131623814466*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {
       RowBox[{
        SuperscriptBox[
         SubscriptBox["x", "p"], "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]},
      {
       RowBox[{
        SuperscriptBox[
         SubscriptBox["y", "p"], "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.6221315568964148`*^9, {3.622131611680749*^9, 3.622131624492786*^9}, 
   3.622131663141512*^9, 3.6221318679732943`*^9, 3.622132092828088*^9, 
   3.62213500120662*^9, 3.622139997722207*^9, 3.622405255725197*^9, 
   3.622406974834442*^9, 3.622411617895979*^9, 3.622649268161747*^9, 
   3.6226506790895348`*^9, 3.6226559887095127`*^9, 3.6226560959108047`*^9, 
   3.622656517945134*^9, 3.6226573272398252`*^9, 3.622657566062848*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SubscriptBox["\[Phi]", "\[ClubSuit]"], "=", " ", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       SubscriptBox["x", "p"], "[", "t", "]"}], "-", 
      RowBox[{"(", " ", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["d", "2"]}], "+", " ", 
        RowBox[{
         SubscriptBox["l", "1"], 
         RowBox[{"Cos", "[", 
          RowBox[{
           SubscriptBox["\[Theta]", 
            RowBox[{"1", ",", "1"}]], "[", "t", "]"}], "]"}]}], "+", 
        RowBox[{
         SubscriptBox["l", "2"], 
         RowBox[{"Cos", "[", 
          RowBox[{
           RowBox[{
            SubscriptBox["\[Theta]", 
             RowBox[{"1", ",", "1"}]], "[", "t", "]"}], "+", 
           RowBox[{
            SubscriptBox["\[Theta]", 
             RowBox[{"1", ",", "2"}]], "[", "t", "]"}]}], "]"}]}]}], ")"}]}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       SubscriptBox["y", "p"], "[", "t", "]"}], "-", 
      RowBox[{"(", " ", 
       RowBox[{
        RowBox[{
         SubscriptBox["l", "1"], 
         RowBox[{"Sin", "[", 
          RowBox[{
           SubscriptBox["\[Theta]", 
            RowBox[{"1", ",", "1"}]], "[", "t", "]"}], "]"}]}], "+", 
        RowBox[{
         SubscriptBox["l", "2"], 
         RowBox[{"Sin", "[", 
          RowBox[{
           RowBox[{
            SubscriptBox["\[Theta]", 
             RowBox[{"1", ",", "1"}]], "[", "t", "]"}], "+", 
           RowBox[{
            SubscriptBox["\[Theta]", 
             RowBox[{"1", ",", "2"}]], "[", "t", "]"}]}], "]"}]}]}], ")"}]}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       SubscriptBox["x", "p"], "[", "t", "]"}], "-", 
      RowBox[{"(", " ", 
       RowBox[{
        FractionBox["d", "2"], "+", " ", 
        RowBox[{
         SubscriptBox["l", "1"], 
         RowBox[{"Cos", "[", 
          RowBox[{
           SubscriptBox["\[Theta]", 
            RowBox[{"2", ",", "1"}]], "[", "t", "]"}], "]"}]}], "+", 
        RowBox[{
         SubscriptBox["l", "2"], 
         RowBox[{"Cos", "[", 
          RowBox[{
           RowBox[{
            SubscriptBox["\[Theta]", 
             RowBox[{"2", ",", "1"}]], "[", "t", "]"}], "+", 
           RowBox[{
            SubscriptBox["\[Theta]", 
             RowBox[{"2", ",", "2"}]], "[", "t", "]"}]}], "]"}]}]}], ")"}]}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       SubscriptBox["y", "p"], "[", "t", "]"}], "-", 
      RowBox[{"(", " ", 
       RowBox[{
        RowBox[{
         SubscriptBox["l", "1"], 
         RowBox[{"Sin", "[", 
          RowBox[{
           SubscriptBox["\[Theta]", 
            RowBox[{"2", ",", "1"}]], "[", "t", "]"}], "]"}]}], "+", 
        RowBox[{
         SubscriptBox["l", "2"], 
         RowBox[{"Sin", "[", 
          RowBox[{
           RowBox[{
            SubscriptBox["\[Theta]", 
             RowBox[{"2", ",", "1"}]], "[", "t", "]"}], "+", 
           RowBox[{
            SubscriptBox["\[Theta]", 
             RowBox[{"2", ",", "2"}]], "[", "t", "]"}]}], "]"}]}]}], 
       ")"}]}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.62212915020154*^9, 3.622129164492601*^9}, {
  3.6221301417387047`*^9, 3.622130142121949*^9}, {3.622131746423937*^9, 
  3.6221317467175694`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   SubscriptBox["\[CapitalLambda]", "\[ClubSuit]"], " ", "=", " ", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{
     RowBox[{"Dot", "[", 
      RowBox[{
       RowBox[{
        SubscriptBox["\[PartialD]", 
         RowBox[{"{", 
          SubscriptBox["\[DoubleStruckQ]", "3"], "}"}]], 
        SubscriptBox["\[Phi]", "\[ClubSuit]"]}], ",", 
       RowBox[{"Inv", "@", 
        SubscriptBox["\[Psi]", "3"]}], ",", 
       SubscriptBox["\[DoubleStruckP]\[NumberSign]", "3"]}], " ", "]"}], "+", 
     
     RowBox[{"Dot", "[", 
      RowBox[{
       RowBox[{
        SubscriptBox["\[PartialD]", 
         RowBox[{"{", 
          SubscriptBox["\[DoubleStruckQ]", "4"], "}"}]], 
        SubscriptBox["\[Phi]", "\[ClubSuit]"]}], ",", 
       RowBox[{"Inv", "@", 
        SubscriptBox["\[Psi]", "4"]}], ",", 
       SubscriptBox["\[DoubleStruckP]\[NumberSign]", "4"]}], " ", "]"}], "+", 
     
     RowBox[{"Dot", "[", 
      RowBox[{
       RowBox[{
        SubscriptBox["\[PartialD]", 
         RowBox[{"{", 
          SubscriptBox["\[DoubleStruckQ]", "5"], "}"}]], 
        SubscriptBox["\[Phi]", "\[ClubSuit]"]}], ",", 
       RowBox[{"Inv", "@", 
        SubscriptBox["\[Psi]", "5"]}], ",", 
       SubscriptBox["\[DoubleStruckP]\[NumberSign]", "5"]}], " ", "]"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["\[DoubleStruckCapitalA]\[NumberSign]", "\[ClubSuit]"], "=", 
   " ", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{
     SubscriptBox["\[PartialD]", 
      RowBox[{"{", 
       SubscriptBox["\[DoubledGamma]\[NumberSign]", "\[ClubSuit]"], "}"}]], 
     SubscriptBox["\[CapitalLambda]", "\[ClubSuit]"]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["\[DoubleStruckCapitalA]\.ba", "\[ClubSuit]"], "=", " ", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{
     SubscriptBox["\[PartialD]", 
      RowBox[{"{", 
       SubscriptBox["\[DoubledGamma]\.ba", "\[ClubSuit]"], "}"}]], 
     SubscriptBox["\[CapitalLambda]", "\[ClubSuit]"]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   OverscriptBox[
    SubscriptBox["\[DoubleStruckCapitalC]", "\[ClubSuit]"], "_"], " ", "=", 
   RowBox[{"FullSimplify", "@", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"Eye", "[", 
       SubscriptBox["\[Nu]\[NumberSign]", "\[ClubSuit]"], "]"}], ",", 
      RowBox[{"Dot", "[", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"Inv", "@", 
          SubscriptBox["\[DoubleStruckCapitalA]\.ba", "\[ClubSuit]"]}]}], ",", 
        SubscriptBox["\[DoubleStruckCapitalA]\[NumberSign]", "\[ClubSuit]"]}],
        "]"}]}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["\[DoubleStruckCapitalC]", "\[ClubSuit]"], " ", "=", 
   RowBox[{"FullSimplify", "@", 
    RowBox[{"Dot", "[", 
     RowBox[{
      RowBox[{"Diag", "[", 
       RowBox[{
        SubscriptBox["\[DoubleStruckCapitalC]", "3"], ",", 
        SubscriptBox["\[DoubleStruckCapitalC]", "4"], ",", 
        SubscriptBox["\[DoubleStruckCapitalC]", "5"]}], "]"}], ",", 
      OverscriptBox[
       SubscriptBox["\[DoubleStruckCapitalC]", "\[ClubSuit]"], "_"]}], " ", 
     "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["\[Psi]", "\[ClubSuit]"], "=", " ", 
   RowBox[{"Diag", "[", 
    RowBox[{
     SubscriptBox["\[Psi]", "3"], ",", 
     SubscriptBox["\[Psi]", "4"], ",", 
     SubscriptBox["\[Psi]", "5"]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6211643532281218`*^9, 3.621164396033683*^9}, {
  3.6211662266950083`*^9, 3.6211662533904953`*^9}, {3.621166304612238*^9, 
  3.621166344021962*^9}, {3.621167276753091*^9, 3.621167358374338*^9}, {
  3.621167395264579*^9, 3.621167413791066*^9}, {3.622129172628429*^9, 
  3.622129191252306*^9}, {3.622129231503808*^9, 3.62212933091862*^9}, {
  3.622130036694009*^9, 3.622130130678928*^9}, {3.6221303800001993`*^9, 
  3.622130403822586*^9}, {3.6221317511718063`*^9, 3.62213181652953*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   SubscriptBox["\[DoubleStruckCapitalM]", "\[ClubSuit]"], "=", " ", 
   RowBox[{"Diag", "[", 
    RowBox[{
     SubscriptBox["\[DoubleStruckCapitalM]", "3"], ",", 
     SubscriptBox["\[DoubleStruckCapitalM]", "4"], ",", 
     SubscriptBox["\[DoubleStruckCapitalM]", "5"]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["\[DoubleStruckV]", "\[ClubSuit]"], "=", " ", 
   RowBox[{"Join", "[", 
    RowBox[{
     SubscriptBox["\[DoubleStruckV]", "3"], ",", 
     SubscriptBox["\[DoubleStruckV]", "4"], ",", 
     SubscriptBox["\[DoubleStruckV]", "5"]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["\[DoubleStruckG]", "\[ClubSuit]"], "=", " ", 
   RowBox[{"Join", "[", 
    RowBox[{
     SubscriptBox["\[DoubleStruckG]", "3"], ",", 
     SubscriptBox["\[DoubleStruckG]", "4"], ",", 
     SubscriptBox["\[DoubleStruckG]", "5"]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.621167671356947*^9, 3.621167697030676*^9}, {
  3.622130026188785*^9, 3.6221300331490726`*^9}, {3.622131820288548*^9, 
  3.622131823791162*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubscriptBox["\[DoubleStruckCapitalM]", "\[ClubSuit]"], "//", 
  "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.6211677075776157`*^9, 3.621167707979062*^9}, 
   3.6221300211942*^9, {3.622131825982613*^9, 3.622131826958331*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      SubscriptBox["\[ScriptM]", "p"], "0", "0", "0", "0", "0"},
     {"0", 
      SubscriptBox["\[ScriptM]", "p"], "0", "0", "0", "0"},
     {"0", "0", 
      RowBox[{
       SubscriptBox["Jz", "1"], "+", 
       SubscriptBox["Jz", "2"], "+", 
       RowBox[{
        SubsuperscriptBox["l", "g1", "2"], " ", 
        SubscriptBox["\[ScriptM]", "1"]}], "+", 
       RowBox[{
        SubsuperscriptBox["l", "g2", "2"], " ", 
        SubscriptBox["\[ScriptM]", "2"]}], "+", 
       FractionBox[
        RowBox[{
         SubsuperscriptBox["l", "g2", "2"], " ", 
         SubsuperscriptBox["\[ScriptM]", "2", "2"]}], 
        SubscriptBox["M", "2"]], "+", 
       RowBox[{
        SubsuperscriptBox["l", "1", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          SubscriptBox["M", "2"], "+", 
          SubscriptBox["\[ScriptM]", "2"]}], ")"}]}], "+", 
       FractionBox[
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SubscriptBox["l", "g1"], " ", 
            SubscriptBox["\[ScriptM]", "1"]}], "+", 
           RowBox[{
            SubscriptBox["l", "1"], " ", 
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["M", "2"], "+", 
              SubscriptBox["\[ScriptM]", "2"]}], ")"}]}]}], ")"}], "2"], 
        SubscriptBox["M", "1"]]}], 
      RowBox[{
       SubscriptBox["Jz", "2"], "+", 
       FractionBox[
        RowBox[{
         SubsuperscriptBox["l", "g2", "2"], " ", 
         SubscriptBox["\[ScriptM]", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["M", "2"], "+", 
           SubscriptBox["\[ScriptM]", "2"]}], ")"}]}], 
        SubscriptBox["M", "2"]]}], "0", "0"},
     {"0", "0", 
      RowBox[{
       SubscriptBox["Jz", "2"], "+", 
       FractionBox[
        RowBox[{
         SubsuperscriptBox["l", "g2", "2"], " ", 
         SubscriptBox["\[ScriptM]", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["M", "2"], "+", 
           SubscriptBox["\[ScriptM]", "2"]}], ")"}]}], 
        SubscriptBox["M", "2"]]}], 
      RowBox[{
       SubscriptBox["Jz", "2"], "+", 
       FractionBox[
        RowBox[{
         SubsuperscriptBox["l", "g2", "2"], " ", 
         SubscriptBox["\[ScriptM]", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["M", "2"], "+", 
           SubscriptBox["\[ScriptM]", "2"]}], ")"}]}], 
        SubscriptBox["M", "2"]]}], "0", "0"},
     {"0", "0", "0", "0", 
      RowBox[{
       SubscriptBox["Jz", "1"], "+", 
       SubscriptBox["Jz", "2"], "+", 
       RowBox[{
        SubsuperscriptBox["l", "g1", "2"], " ", 
        SubscriptBox["\[ScriptM]", "1"]}], "+", 
       RowBox[{
        SubsuperscriptBox["l", "g2", "2"], " ", 
        SubscriptBox["\[ScriptM]", "2"]}], "+", 
       FractionBox[
        RowBox[{
         SubsuperscriptBox["l", "g2", "2"], " ", 
         SubsuperscriptBox["\[ScriptM]", "2", "2"]}], 
        SubscriptBox["M", "2"]], "+", 
       RowBox[{
        SubsuperscriptBox["l", "1", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          SubscriptBox["M", "2"], "+", 
          SubscriptBox["\[ScriptM]", "2"]}], ")"}]}], "+", 
       FractionBox[
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SubscriptBox["l", "g1"], " ", 
            SubscriptBox["\[ScriptM]", "1"]}], "+", 
           RowBox[{
            SubscriptBox["l", "1"], " ", 
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["M", "2"], "+", 
              SubscriptBox["\[ScriptM]", "2"]}], ")"}]}]}], ")"}], "2"], 
        SubscriptBox["M", "1"]]}], 
      RowBox[{
       SubscriptBox["Jz", "2"], "+", 
       FractionBox[
        RowBox[{
         SubsuperscriptBox["l", "g2", "2"], " ", 
         SubscriptBox["\[ScriptM]", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["M", "2"], "+", 
           SubscriptBox["\[ScriptM]", "2"]}], ")"}]}], 
        SubscriptBox["M", "2"]]}]},
     {"0", "0", "0", "0", 
      RowBox[{
       SubscriptBox["Jz", "2"], "+", 
       FractionBox[
        RowBox[{
         SubsuperscriptBox["l", "g2", "2"], " ", 
         SubscriptBox["\[ScriptM]", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["M", "2"], "+", 
           SubscriptBox["\[ScriptM]", "2"]}], ")"}]}], 
        SubscriptBox["M", "2"]]}], 
      RowBox[{
       SubscriptBox["Jz", "2"], "+", 
       FractionBox[
        RowBox[{
         SubsuperscriptBox["l", "g2", "2"], " ", 
         SubscriptBox["\[ScriptM]", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["M", "2"], "+", 
           SubscriptBox["\[ScriptM]", "2"]}], ")"}]}], 
        SubscriptBox["M", "2"]]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.62116763787119*^9, {3.621167700904903*^9, 3.621167708419092*^9}, 
   3.621528457353797*^9, 3.621528774650544*^9, 3.6215293931018333`*^9, 
   3.6215325469447823`*^9, 3.6221283966706247`*^9, 3.622128726517371*^9, 
   3.6221288324087257`*^9, 3.622129030637444*^9, 3.622129434974215*^9, 
   3.6221303428397207`*^9, 3.6221304470000877`*^9, 3.622131869566578*^9, 
   3.622132094302796*^9, 3.622135002822859*^9, 3.6221399997593927`*^9, 
   3.62240525711805*^9, 3.6224069761937847`*^9, 3.622411619566983*^9, 
   3.622649269587801*^9, 3.6226506807286243`*^9, 3.6226559901382236`*^9, 
   3.622656097337685*^9, 3.622656519384493*^9, 3.6226573286501703`*^9, 
   3.6226575677591753`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubscriptBox["\[DoubleStruckV]", "\[ClubSuit]"], "//", 
  "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.621167741322749*^9, 3.621167744767901*^9}, {
  3.622130010193904*^9, 3.622130016658144*^9}, {3.622131831318741*^9, 
  3.622131831669361*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {"0"},
      {"0"},
      {"0"},
      {"0"},
      {"0"},
      {"0"}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.621167745408368*^9, 3.6215284573592873`*^9, 
  3.621528774656934*^9, 3.62152939314578*^9, 3.621532546949061*^9, 
  3.622128396717649*^9, 3.6221287270266743`*^9, 3.6221288324149323`*^9, 
  3.622129030692237*^9, 3.622129434981913*^9, 3.622130342845106*^9, 
  3.622130447005975*^9, 3.622131869571125*^9, 3.622132094308365*^9, 
  3.622135002829893*^9, 3.622139999786929*^9, 3.622405257123226*^9, 
  3.622406976201788*^9, 3.622411619608198*^9, 3.622649269592942*^9, 
  3.62265068073335*^9, 3.6226559901432667`*^9, 3.622656097342058*^9, 
  3.622656519388711*^9, 3.622657328657638*^9, 3.622657567764822*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubscriptBox["\[DoubleStruckG]", "\[ClubSuit]"], "//", 
  "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.621167756590878*^9, 3.621167767015953*^9}, 
   3.622130006226152*^9, {3.622131834333001*^9, 3.6221318346132307`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {"0"},
      {
       RowBox[{"g", " ", 
        SubscriptBox["\[ScriptM]", "p"]}]},
      {"0"},
      {"0"},
      {"0"},
      {"0"}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.621167760060563*^9, 3.6211677676330023`*^9}, 
   3.621528457430368*^9, 3.621528774694368*^9, 3.6215293933284082`*^9, 
   3.621532546998686*^9, 3.622128396808694*^9, 3.6221287274011917`*^9, 
   3.622128832447546*^9, 3.622129030746415*^9, 3.622129435025943*^9, 
   3.6221303428755703`*^9, 3.622130447052196*^9, 3.622131869615807*^9, 
   3.622132094354319*^9, 3.622135002877151*^9, 3.622139999808832*^9, 
   3.6224052571800547`*^9, 3.6224069762460613`*^9, 3.622411619654048*^9, 
   3.6226492696345987`*^9, 3.622650680784575*^9, 3.622655990211611*^9, 
   3.622656097420342*^9, 3.622656519466004*^9, 3.6226573287564363`*^9, 
   3.6226575678325367`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"\[DoubleStruckCapitalM]\[NumberSign]2", " ", "=", " ", 
    RowBox[{"Simplify", "@", 
     RowBox[{"Dot", "[", 
      RowBox[{
       RowBox[{
        SubscriptBox["\[Psi]", "3"], "\[Transpose]"}], ",", 
       RowBox[{
        SubscriptBox["\[DoubleStruckCapitalC]", 
         StyleBox[
          ButtonBox["\[CirclePlus]",
           BaseStyle->"Link",
           ButtonData->"paclet:ref/character/CirclePlus"], 
          "GuideCharacterImage"]], "\[Transpose]"}], ",", 
       SubscriptBox["\[DoubleStruckCapitalM]", 
        StyleBox[
         ButtonBox["\[CirclePlus]",
          BaseStyle->"Link",
          ButtonData->"paclet:ref/character/CirclePlus"], 
         "GuideCharacterImage"]], ",", 
       SubscriptBox["\[DoubleStruckCapitalC]", 
        StyleBox[
         ButtonBox["\[CirclePlus]",
          BaseStyle->"Link",
          ButtonData->"paclet:ref/character/CirclePlus"], 
         "GuideCharacterImage"]], ",", 
       SubscriptBox["\[Psi]", "3"]}], "]"}]}]}], ";"}], "*)"}]], "Input",
 CellChangeTimes->{{3.62116784848035*^9, 3.6211678963738823`*^9}, {
  3.621528752787112*^9, 3.621528753898085*^9}, {3.62152934235225*^9, 
  3.621529347205982*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"\[DoubleStruckV]\[NumberSign]2", " ", "=", " ", 
    RowBox[{"FullSimplify", "@", 
     RowBox[{"Dot", "[", 
      RowBox[{
       RowBox[{
        SubscriptBox["\[Psi]", "3"], "\[Transpose]"}], ",", 
       RowBox[{
        SubscriptBox["\[DoubleStruckCapitalC]", 
         StyleBox[
          ButtonBox["\[CirclePlus]",
           BaseStyle->"Link",
           ButtonData->"paclet:ref/character/CirclePlus"], 
          "GuideCharacterImage"]], "\[Transpose]"}], ",", 
       RowBox[{"Dot", "[", 
        RowBox[{
         SubscriptBox["\[DoubleStruckCapitalM]", 
          StyleBox[
           ButtonBox["\[CirclePlus]",
            BaseStyle->"Link",
            ButtonData->"paclet:ref/character/CirclePlus"], 
           "GuideCharacterImage"]], ",", 
         RowBox[{
          SubscriptBox["\[PartialD]", "t"], 
          RowBox[{"Dot", "[", 
           RowBox[{
            SubscriptBox["\[DoubleStruckCapitalC]", 
             StyleBox[
              ButtonBox["\[CirclePlus]",
               BaseStyle->"Link",
               ButtonData->"paclet:ref/character/CirclePlus"], 
              "GuideCharacterImage"]], ",", 
            SubscriptBox["\[Psi]", "3"]}], "]"}]}], ",", 
         RowBox[{
          SubscriptBox["\[PartialD]", "t"], 
          SubscriptBox["\[DoubleStruckQ]\[NumberSign]", 
           StyleBox[
            ButtonBox["\[CirclePlus]",
             BaseStyle->"Link",
             ButtonData->"paclet:ref/character/CirclePlus"], 
            "GuideCharacterImage"]]}]}], "]"}]}], "]"}]}]}], ";"}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.621168172649893*^9, 3.621168183197156*^9}, {
  3.621168238269062*^9, 3.621168269517008*^9}, {3.621168299845509*^9, 
  3.621168302477347*^9}, {3.621528760852746*^9, 3.621528761687171*^9}, {
  3.621529350560264*^9, 3.6215293532877607`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubscriptBox["\[DoubleStruckCapitalC]", "\[ClubSuit]"], " ", "//", 
  "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.6215294107077827`*^9, 3.621529412863727*^9}, 
   3.622130002058056*^9, {3.622131837878571*^9, 3.622131838134083*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "0"},
     {"0", "1"},
     {
      FractionBox[
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{
          RowBox[{
           SubscriptBox["\[Theta]", 
            RowBox[{"1", ",", "1"}]], "[", "t", "]"}], "+", 
          RowBox[{
           SubscriptBox["\[Theta]", 
            RowBox[{"1", ",", "2"}]], "[", "t", "]"}]}], "]"}], " ", 
        RowBox[{"Csc", "[", 
         RowBox[{
          SubscriptBox["\[Theta]", 
           RowBox[{"1", ",", "2"}]], "[", "t", "]"}], "]"}]}], 
       SubscriptBox["l", "1"]], 
      FractionBox[
       RowBox[{
        RowBox[{"Csc", "[", 
         RowBox[{
          SubscriptBox["\[Theta]", 
           RowBox[{"1", ",", "2"}]], "[", "t", "]"}], "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{
          RowBox[{
           SubscriptBox["\[Theta]", 
            RowBox[{"1", ",", "1"}]], "[", "t", "]"}], "+", 
          RowBox[{
           SubscriptBox["\[Theta]", 
            RowBox[{"1", ",", "2"}]], "[", "t", "]"}]}], "]"}]}], 
       SubscriptBox["l", "1"]]},
     {
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         RowBox[{"Csc", "[", 
          RowBox[{
           SubscriptBox["\[Theta]", 
            RowBox[{"1", ",", "2"}]], "[", "t", "]"}], "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{
              SubscriptBox["\[Theta]", 
               RowBox[{"1", ",", "1"}]], "[", "t", "]"}], "]"}], " ", 
            SubscriptBox["l", "1"]}], "+", 
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{
              RowBox[{
               SubscriptBox["\[Theta]", 
                RowBox[{"1", ",", "1"}]], "[", "t", "]"}], "+", 
              RowBox[{
               SubscriptBox["\[Theta]", 
                RowBox[{"1", ",", "2"}]], "[", "t", "]"}]}], "]"}], " ", 
            SubscriptBox["l", "2"]}]}], ")"}]}], 
        RowBox[{
         SubscriptBox["l", "1"], " ", 
         SubscriptBox["l", "2"]}]]}], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         RowBox[{"Csc", "[", 
          RowBox[{
           SubscriptBox["\[Theta]", 
            RowBox[{"1", ",", "2"}]], "[", "t", "]"}], "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Sin", "[", 
             RowBox[{
              SubscriptBox["\[Theta]", 
               RowBox[{"1", ",", "1"}]], "[", "t", "]"}], "]"}], " ", 
            SubscriptBox["l", "1"]}], "+", 
           RowBox[{
            RowBox[{"Sin", "[", 
             RowBox[{
              RowBox[{
               SubscriptBox["\[Theta]", 
                RowBox[{"1", ",", "1"}]], "[", "t", "]"}], "+", 
              RowBox[{
               SubscriptBox["\[Theta]", 
                RowBox[{"1", ",", "2"}]], "[", "t", "]"}]}], "]"}], " ", 
            SubscriptBox["l", "2"]}]}], ")"}]}], 
        RowBox[{
         SubscriptBox["l", "1"], " ", 
         SubscriptBox["l", "2"]}]]}]},
     {
      FractionBox[
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{
          RowBox[{
           SubscriptBox["\[Theta]", 
            RowBox[{"2", ",", "1"}]], "[", "t", "]"}], "+", 
          RowBox[{
           SubscriptBox["\[Theta]", 
            RowBox[{"2", ",", "2"}]], "[", "t", "]"}]}], "]"}], " ", 
        RowBox[{"Csc", "[", 
         RowBox[{
          SubscriptBox["\[Theta]", 
           RowBox[{"2", ",", "2"}]], "[", "t", "]"}], "]"}]}], 
       SubscriptBox["l", "1"]], 
      FractionBox[
       RowBox[{
        RowBox[{"Csc", "[", 
         RowBox[{
          SubscriptBox["\[Theta]", 
           RowBox[{"2", ",", "2"}]], "[", "t", "]"}], "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{
          RowBox[{
           SubscriptBox["\[Theta]", 
            RowBox[{"2", ",", "1"}]], "[", "t", "]"}], "+", 
          RowBox[{
           SubscriptBox["\[Theta]", 
            RowBox[{"2", ",", "2"}]], "[", "t", "]"}]}], "]"}]}], 
       SubscriptBox["l", "1"]]},
     {
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         RowBox[{"Csc", "[", 
          RowBox[{
           SubscriptBox["\[Theta]", 
            RowBox[{"2", ",", "2"}]], "[", "t", "]"}], "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{
              SubscriptBox["\[Theta]", 
               RowBox[{"2", ",", "1"}]], "[", "t", "]"}], "]"}], " ", 
            SubscriptBox["l", "1"]}], "+", 
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{
              RowBox[{
               SubscriptBox["\[Theta]", 
                RowBox[{"2", ",", "1"}]], "[", "t", "]"}], "+", 
              RowBox[{
               SubscriptBox["\[Theta]", 
                RowBox[{"2", ",", "2"}]], "[", "t", "]"}]}], "]"}], " ", 
            SubscriptBox["l", "2"]}]}], ")"}]}], 
        RowBox[{
         SubscriptBox["l", "1"], " ", 
         SubscriptBox["l", "2"]}]]}], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         RowBox[{"Csc", "[", 
          RowBox[{
           SubscriptBox["\[Theta]", 
            RowBox[{"2", ",", "2"}]], "[", "t", "]"}], "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Sin", "[", 
             RowBox[{
              SubscriptBox["\[Theta]", 
               RowBox[{"2", ",", "1"}]], "[", "t", "]"}], "]"}], " ", 
            SubscriptBox["l", "1"]}], "+", 
           RowBox[{
            RowBox[{"Sin", "[", 
             RowBox[{
              RowBox[{
               SubscriptBox["\[Theta]", 
                RowBox[{"2", ",", "1"}]], "[", "t", "]"}], "+", 
              RowBox[{
               SubscriptBox["\[Theta]", 
                RowBox[{"2", ",", "2"}]], "[", "t", "]"}]}], "]"}], " ", 
            SubscriptBox["l", "2"]}]}], ")"}]}], 
        RowBox[{
         SubscriptBox["l", "1"], " ", 
         SubscriptBox["l", "2"]}]]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.62152941311679*^9, 3.621532547061105*^9, 
  3.622128396871107*^9, 3.622128727543858*^9, 3.622128832493127*^9, 
  3.6221290308120193`*^9, 3.6221294352317467`*^9, 3.622130342933094*^9, 
  3.622130447114086*^9, 3.622131869691433*^9, 3.6221320946193113`*^9, 
  3.622135002930852*^9, 3.62213999988517*^9, 3.6224052572597713`*^9, 
  3.622406976310013*^9, 3.622411619728653*^9, 3.6226492696937237`*^9, 
  3.622650680860162*^9, 3.622655990311336*^9, 3.6226560975323467`*^9, 
  3.622656519563703*^9, 3.6226573289351883`*^9, 3.62265756792375*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   SubscriptBox["\[DoubleStruckCapitalA]", "\[ClubSuit]"], "=", 
   RowBox[{
    SubscriptBox["\[PartialD]", 
     RowBox[{"{", 
      SubscriptBox["\[DoubledGamma]", "\[ClubSuit]"], "}"}]], 
    SubscriptBox["\[CapitalLambda]", "\[ClubSuit]"]}]}], ";", 
  RowBox[{
   SubscriptBox["\[DoubleStruckCapitalA]", "\[ClubSuit]"], "//", 
   "MatrixForm"}]}]], "Input",
 CellChangeTimes->{{3.621529438939394*^9, 3.621529441711282*^9}, {
  3.622129359519145*^9, 3.62212937175885*^9}, {3.622129920395526*^9, 
  3.622129926634367*^9}, {3.622129979906603*^9, 3.622129981426646*^9}, {
  3.622131846572316*^9, 3.622131853574315*^9}, {3.6221358070670033`*^9, 
  3.6221358181635227`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "0", 
      RowBox[{
       RowBox[{
        RowBox[{"Sin", "[", 
         RowBox[{
          SubscriptBox["\[Theta]", 
           RowBox[{"1", ",", "1"}]], "[", "t", "]"}], "]"}], " ", 
        SubscriptBox["l", "1"]}], "+", 
       RowBox[{
        RowBox[{"Sin", "[", 
         RowBox[{
          RowBox[{
           SubscriptBox["\[Theta]", 
            RowBox[{"1", ",", "1"}]], "[", "t", "]"}], "+", 
          RowBox[{
           SubscriptBox["\[Theta]", 
            RowBox[{"1", ",", "2"}]], "[", "t", "]"}]}], "]"}], " ", 
        SubscriptBox["l", "2"]}]}], 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{
         RowBox[{
          SubscriptBox["\[Theta]", 
           RowBox[{"1", ",", "1"}]], "[", "t", "]"}], "+", 
         RowBox[{
          SubscriptBox["\[Theta]", 
           RowBox[{"1", ",", "2"}]], "[", "t", "]"}]}], "]"}], " ", 
       SubscriptBox["l", "2"]}], "0", "0"},
     {"0", "1", 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{"Cos", "[", 
          RowBox[{
           SubscriptBox["\[Theta]", 
            RowBox[{"1", ",", "1"}]], "[", "t", "]"}], "]"}]}], " ", 
        SubscriptBox["l", "1"]}], "-", 
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{
          RowBox[{
           SubscriptBox["\[Theta]", 
            RowBox[{"1", ",", "1"}]], "[", "t", "]"}], "+", 
          RowBox[{
           SubscriptBox["\[Theta]", 
            RowBox[{"1", ",", "2"}]], "[", "t", "]"}]}], "]"}], " ", 
        SubscriptBox["l", "2"]}]}], 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Cos", "[", 
         RowBox[{
          RowBox[{
           SubscriptBox["\[Theta]", 
            RowBox[{"1", ",", "1"}]], "[", "t", "]"}], "+", 
          RowBox[{
           SubscriptBox["\[Theta]", 
            RowBox[{"1", ",", "2"}]], "[", "t", "]"}]}], "]"}]}], " ", 
       SubscriptBox["l", "2"]}], "0", "0"},
     {"1", "0", "0", "0", 
      RowBox[{
       RowBox[{
        RowBox[{"Sin", "[", 
         RowBox[{
          SubscriptBox["\[Theta]", 
           RowBox[{"2", ",", "1"}]], "[", "t", "]"}], "]"}], " ", 
        SubscriptBox["l", "1"]}], "+", 
       RowBox[{
        RowBox[{"Sin", "[", 
         RowBox[{
          RowBox[{
           SubscriptBox["\[Theta]", 
            RowBox[{"2", ",", "1"}]], "[", "t", "]"}], "+", 
          RowBox[{
           SubscriptBox["\[Theta]", 
            RowBox[{"2", ",", "2"}]], "[", "t", "]"}]}], "]"}], " ", 
        SubscriptBox["l", "2"]}]}], 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{
         RowBox[{
          SubscriptBox["\[Theta]", 
           RowBox[{"2", ",", "1"}]], "[", "t", "]"}], "+", 
         RowBox[{
          SubscriptBox["\[Theta]", 
           RowBox[{"2", ",", "2"}]], "[", "t", "]"}]}], "]"}], " ", 
       SubscriptBox["l", "2"]}]},
     {"0", "1", "0", "0", 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{"Cos", "[", 
          RowBox[{
           SubscriptBox["\[Theta]", 
            RowBox[{"2", ",", "1"}]], "[", "t", "]"}], "]"}]}], " ", 
        SubscriptBox["l", "1"]}], "-", 
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{
          RowBox[{
           SubscriptBox["\[Theta]", 
            RowBox[{"2", ",", "1"}]], "[", "t", "]"}], "+", 
          RowBox[{
           SubscriptBox["\[Theta]", 
            RowBox[{"2", ",", "2"}]], "[", "t", "]"}]}], "]"}], " ", 
        SubscriptBox["l", "2"]}]}], 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Cos", "[", 
         RowBox[{
          RowBox[{
           SubscriptBox["\[Theta]", 
            RowBox[{"2", ",", "1"}]], "[", "t", "]"}], "+", 
          RowBox[{
           SubscriptBox["\[Theta]", 
            RowBox[{"2", ",", "2"}]], "[", "t", "]"}]}], "]"}]}], " ", 
       SubscriptBox["l", "2"]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.6215294419691963`*^9, 3.621532547108594*^9, 
  3.622128396918296*^9, 3.622128727644217*^9, 3.6221288325250463`*^9, 
  3.622129030863398*^9, 3.6221294352895393`*^9, 3.622130342970579*^9, 
  3.6221304471562653`*^9, 3.622131869736821*^9, 3.62213209467697*^9, 
  3.622135002968974*^9, 3.6221358192405863`*^9, 3.622139999909552*^9, 
  3.622405257317667*^9, 3.6224069763562727`*^9, 3.622411619774844*^9, 
  3.62264926973425*^9, 3.622650681127187*^9, 3.622655990382614*^9, 
  3.6226560976083813`*^9, 3.6226565196420603`*^9, 3.62265732903179*^9, 
  3.6226575679864264`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   SubscriptBox["\[DoubleStruckB]", "\[ClubSuit]"], "=", " ", 
   RowBox[{"FullSimplify", "@", 
    RowBox[{"Dot", "[", 
     RowBox[{
      RowBox[{
       SubscriptBox["\[PartialD]", "t"], 
       SubscriptBox["\[DoubleStruckCapitalA]", "\[ClubSuit]"]}], ",", " ", 
      SubscriptBox["\[DoubleStruckP]", "\[ClubSuit]"]}], "]"}]}]}], ";", 
  RowBox[{
   SubscriptBox["\[DoubleStruckB]", "\[ClubSuit]"], "//", 
   "MatrixForm"}]}]], "Input",
 CellChangeTimes->{{3.62213599398171*^9, 3.622136056183538*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {
       RowBox[{
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{
           SubscriptBox["\[Theta]", 
            RowBox[{"1", ",", "1"}]], "[", "t", "]"}], "]"}], " ", 
         SubscriptBox["l", "1"], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox[
            SubscriptBox["\[Theta]", 
             RowBox[{"1", ",", "1"}]], "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{
           RowBox[{
            SubscriptBox["\[Theta]", 
             RowBox[{"1", ",", "1"}]], "[", "t", "]"}], "+", 
           RowBox[{
            SubscriptBox["\[Theta]", 
             RowBox[{"1", ",", "2"}]], "[", "t", "]"}]}], "]"}], " ", 
         SubscriptBox["l", "2"], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox[
              SubscriptBox["\[Theta]", 
               RowBox[{"1", ",", "1"}]], "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}], "+", 
            RowBox[{
             SuperscriptBox[
              SubscriptBox["\[Theta]", 
               RowBox[{"1", ",", "2"}]], "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], ")"}], "2"]}]}]},
      {
       RowBox[{
        RowBox[{
         RowBox[{"Sin", "[", 
          RowBox[{
           SubscriptBox["\[Theta]", 
            RowBox[{"1", ",", "1"}]], "[", "t", "]"}], "]"}], " ", 
         SubscriptBox["l", "1"], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox[
            SubscriptBox["\[Theta]", 
             RowBox[{"1", ",", "1"}]], "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
        RowBox[{
         RowBox[{"Sin", "[", 
          RowBox[{
           RowBox[{
            SubscriptBox["\[Theta]", 
             RowBox[{"1", ",", "1"}]], "[", "t", "]"}], "+", 
           RowBox[{
            SubscriptBox["\[Theta]", 
             RowBox[{"1", ",", "2"}]], "[", "t", "]"}]}], "]"}], " ", 
         SubscriptBox["l", "2"], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox[
              SubscriptBox["\[Theta]", 
               RowBox[{"1", ",", "1"}]], "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}], "+", 
            RowBox[{
             SuperscriptBox[
              SubscriptBox["\[Theta]", 
               RowBox[{"1", ",", "2"}]], "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], ")"}], "2"]}]}]},
      {
       RowBox[{
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{
           SubscriptBox["\[Theta]", 
            RowBox[{"2", ",", "1"}]], "[", "t", "]"}], "]"}], " ", 
         SubscriptBox["l", "1"], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox[
            SubscriptBox["\[Theta]", 
             RowBox[{"2", ",", "1"}]], "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{
           RowBox[{
            SubscriptBox["\[Theta]", 
             RowBox[{"2", ",", "1"}]], "[", "t", "]"}], "+", 
           RowBox[{
            SubscriptBox["\[Theta]", 
             RowBox[{"2", ",", "2"}]], "[", "t", "]"}]}], "]"}], " ", 
         SubscriptBox["l", "2"], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox[
              SubscriptBox["\[Theta]", 
               RowBox[{"2", ",", "1"}]], "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}], "+", 
            RowBox[{
             SuperscriptBox[
              SubscriptBox["\[Theta]", 
               RowBox[{"2", ",", "2"}]], "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], ")"}], "2"]}]}]},
      {
       RowBox[{
        RowBox[{
         RowBox[{"Sin", "[", 
          RowBox[{
           SubscriptBox["\[Theta]", 
            RowBox[{"2", ",", "1"}]], "[", "t", "]"}], "]"}], " ", 
         SubscriptBox["l", "1"], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox[
            SubscriptBox["\[Theta]", 
             RowBox[{"2", ",", "1"}]], "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
        RowBox[{
         RowBox[{"Sin", "[", 
          RowBox[{
           RowBox[{
            SubscriptBox["\[Theta]", 
             RowBox[{"2", ",", "1"}]], "[", "t", "]"}], "+", 
           RowBox[{
            SubscriptBox["\[Theta]", 
             RowBox[{"2", ",", "2"}]], "[", "t", "]"}]}], "]"}], " ", 
         SubscriptBox["l", "2"], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox[
              SubscriptBox["\[Theta]", 
               RowBox[{"2", ",", "1"}]], "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}], "+", 
            RowBox[{
             SuperscriptBox[
              SubscriptBox["\[Theta]", 
               RowBox[{"2", ",", "2"}]], "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], ")"}], "2"]}]}]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.6221360571128683`*^9, 3.6221400009795237`*^9, 
  3.622405258006068*^9, 3.622406977034824*^9, 3.622411620628912*^9, 
  3.6226492704045353`*^9, 3.6226506822248697`*^9, 3.62265599111344*^9, 
  3.622656098295764*^9, 3.622656520328577*^9, 3.622657329762381*^9, 
  3.622657568677822*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubscriptBox["\[DoubleStruckP]", "\[ClubSuit]"], "//", 
  "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.6221338536992197`*^9, 3.622133868410304*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {
       RowBox[{
        SuperscriptBox[
         SubscriptBox["x", "p"], "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]},
      {
       RowBox[{
        SuperscriptBox[
         SubscriptBox["y", "p"], "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]},
      {
       RowBox[{
        SuperscriptBox[
         SubscriptBox["\[Theta]", 
          RowBox[{"1", ",", "1"}]], "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]},
      {
       RowBox[{
        SuperscriptBox[
         SubscriptBox["\[Theta]", 
          RowBox[{"1", ",", "2"}]], "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]},
      {
       RowBox[{
        SuperscriptBox[
         SubscriptBox["\[Theta]", 
          RowBox[{"2", ",", "1"}]], "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]},
      {
       RowBox[{
        SuperscriptBox[
         SubscriptBox["\[Theta]", 
          RowBox[{"2", ",", "2"}]], "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.622133868625798*^9, 3.622135003121284*^9, 
  3.622140001011321*^9, 3.622405258064579*^9, 3.622406977073226*^9, 
  3.6224116206704884`*^9, 3.6226492704583683`*^9, 3.622650682313209*^9, 
  3.622655991176656*^9, 3.622656098388322*^9, 3.622656520415411*^9, 
  3.622657329846876*^9, 3.622657568747205*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[DoubleStruckU]", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["\[Tau]", "1"], ",", 
     SubscriptBox["\[Tau]", "2"]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[DoubleStruckF]", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     SubscriptBox["\[Tau]", "1"], ",", "0", ",", 
     SubscriptBox["\[Tau]", "2"], ",", "0"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Zeta]", " ", "=", 
   RowBox[{
    SubscriptBox["\[PartialD]", 
     RowBox[{"{", "\[DoubleStruckU]", "}"}]], 
    RowBox[{"Dot", "[", 
     RowBox[{
      RowBox[{
       SubscriptBox["\[DoubleStruckCapitalC]", "\[ClubSuit]"], 
       "\[Transpose]"}], ",", "\[DoubleStruckF]"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[DoubleStruckCapitalY]", " ", "=", " ", 
   RowBox[{"FullSimplify", "@", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"Dot", "[", 
       RowBox[{
        RowBox[{
         SubscriptBox["\[DoubleStruckCapitalC]", "\[ClubSuit]"], 
         "\[Transpose]"}], ",", 
        SubscriptBox["\[DoubleStruckCapitalM]", "\[ClubSuit]"]}], "]"}], ",", 
      
      SubscriptBox["\[DoubleStruckCapitalA]", "\[ClubSuit]"]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[DoubleStruckY]", " ", "=", " ", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"Dot", "[", 
      RowBox[{"\[Zeta]", ",", "\[DoubleStruckU]"}], "]"}], ",", " ", 
     RowBox[{"-", 
      SubscriptBox["\[DoubleStruckB]", "\[ClubSuit]"]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[DoubleStruckX]", " ", "=", " ", 
   RowBox[{
    SubscriptBox["\[PartialD]", "t"], 
    SubscriptBox["\[DoubleStruckP]", "\[ClubSuit]"]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.622134108761475*^9, 3.622134124927812*^9}, {
   3.622135207952064*^9, 3.6221352541452217`*^9}, 3.6221353576732597`*^9, {
   3.6221354008399887`*^9, 3.6221355350456657`*^9}, 3.62213556854282*^9, {
   3.622135767749896*^9, 3.622135827028994*^9}, {3.622135875525632*^9, 
   3.622135876653304*^9}, {3.622135926229458*^9, 3.6221359779003468`*^9}, {
   3.622136079860249*^9, 3.6221360836843033`*^9}, {3.6221365106024113`*^9, 
   3.6221365370869303`*^9}, {3.6221368378704042`*^9, 
   3.6221368693180304`*^9}, {3.6221370246523447`*^9, 3.6221370263327*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SubscriptBox["\[DoubleStruckCapitalM]", "c"], "=", " ", 
   RowBox[{"FullSimplify", "@", 
    RowBox[{"Dot", "[", 
     RowBox[{
      RowBox[{"Inv", "@", "\[Zeta]"}], ",", 
      RowBox[{
       SubscriptBox["\[DoubleStruckCapitalC]", "\[ClubSuit]"], 
       "\[Transpose]"}], ",", 
      SubscriptBox["\[DoubleStruckCapitalM]", "\[ClubSuit]"]}], "]"}]}]}], 
  ";"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"CI", " ", "=", " ", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{
       SubscriptBox["x", "p"], "[", "0", "]"}], " ", "\[Equal]", " ", 
      "0.06"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       SubscriptBox["y", "p"], "[", "0", "]"}], " ", "\[Equal]", " ", 
      "0.30776835371752537"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       SubscriptBox["\[Theta]", 
        RowBox[{"1", ",", "1"}]], "[", "0", "]"}], " ", "\[Equal]", " ", 
      "1.6126546190489983"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       SubscriptBox["\[Theta]", 
        RowBox[{"1", ",", "2"}]], "[", "0", "]"}], "\[Equal]", " ", 
      RowBox[{"-", "1.0425528813640035"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       SubscriptBox["\[Theta]", 
        RowBox[{"2", ",", "1"}]], "[", "0", "]"}], " ", "\[Equal]", " ", 
      "1.0173713181256812"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       SubscriptBox["\[Theta]", 
        RowBox[{"2", ",", "2"}]], "[", "0", "]"}], "\[Equal]", " ", 
      "1.365336849825058"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{
        SubscriptBox["x", "p"], "'"}], "[", "0", "]"}], " ", "\[Equal]", " ", 
      "0"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{
        SubscriptBox["y", "p"], "'"}], "[", "0", "]"}], " ", "\[Equal]", " ", 
      "0"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{
        SubscriptBox["\[Theta]", 
         RowBox[{"1", ",", "1"}]], "'"}], "[", "0", "]"}], " ", "\[Equal]", 
      " ", "0"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{
        SubscriptBox["\[Theta]", 
         RowBox[{"1", ",", "2"}]], "'"}], "[", "0", "]"}], "\[Equal]", "0"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{
        SubscriptBox["\[Theta]", 
         RowBox[{"2", ",", "1"}]], "'"}], "[", "0", "]"}], " ", "\[Equal]", 
      " ", "0"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{
        SubscriptBox["\[Theta]", 
         RowBox[{"2", ",", "2"}]], "'"}], "[", "0", "]"}], "\[Equal]", " ", 
      "0"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.622136405373913*^9, 3.622136494214512*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"SDATA", " ", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      SubscriptBox["l", "1"], "\[Rule]", " ", "0.2"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["l", "2"], " ", "\[Rule]", " ", "0.2"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["l", "g1"], " ", "\[Rule]", " ", "0.1"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["l", "g2"], " ", "\[Rule]", " ", "0.1"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["\[ScriptM]", "1"], " ", "\[Rule]", " ", "0.054"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["\[ScriptM]", "2"], " ", "\[Rule]", " ", "0.054"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["Jz", "1"], " ", "\[Rule]", " ", "0.00018"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["Jz", "2"], " ", "\[Rule]", " ", "0.00018"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"g", "\[Rule]", " ", "9.8"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["\[ScriptM]", "p"], "\[Rule]", " ", "0.0"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["M", "1"], "\[Rule]", " ", "1"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["M", "2"], "\[Rule]", " ", "1"}]}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.6221399786259813`*^9, 3.6221399809286213`*^9}, {
  3.6224085092903757`*^9, 3.622408525477399*^9}, {3.622408570814991*^9, 
  3.622408570975602*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Cinem\[AAcute]tica", " ", "de", " ", "Posi\[CCedilla]\[ATilde]o"}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"PARAM", " ", "=", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        SubscriptBox["l", "1"], "\[Rule]", "  ", "0.20"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        SubscriptBox["l", "2"], "\[Rule]", "  ", "0.20"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"d", " ", "\[Rule]", "  ", "0.20"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"X", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        SubscriptBox["x", "p"], "[", "t", "]"}], ",", 
       RowBox[{
        SubscriptBox["y", "p"], "[", "t", "]"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[CapitalTheta]", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        SubscriptBox["\[Theta]", "11"], "[", "t", "]"}], ",", 
       RowBox[{
        SubscriptBox["\[Theta]", "21"], "[", "t", "]"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[CapitalPhi]", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SubscriptBox["x", "p"], "[", "t", "]"}], "+", 
           FractionBox["d", "2"], "-", 
           RowBox[{
            SubscriptBox["l", "1"], 
            RowBox[{"Cos", "[", 
             RowBox[{
              SubscriptBox["\[Theta]", "11"], "[", "t", "]"}], "]"}]}]}], 
          ")"}], "2"], "+", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SubscriptBox["y", "p"], "[", "t", "]"}], "-", 
           RowBox[{
            SubscriptBox["l", "1"], 
            RowBox[{"Sin", "[", 
             RowBox[{
              SubscriptBox["\[Theta]", "11"], "[", "t", "]"}], "]"}]}]}], 
          ")"}], "2"], "-", 
        SuperscriptBox[
         SubscriptBox["l", "2"], "2"]}], ",", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SubscriptBox["x", "p"], "[", "t", "]"}], "-", 
           FractionBox["d", "2"], "-", 
           RowBox[{
            SubscriptBox["l", "1"], 
            RowBox[{"Cos", "[", 
             RowBox[{
              SubscriptBox["\[Theta]", "21"], "[", "t", "]"}], "]"}]}]}], 
          ")"}], "2"], "+", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SubscriptBox["y", "p"], "[", "t", "]"}], "-", 
           RowBox[{
            SubscriptBox["l", "1"], 
            RowBox[{"Sin", "[", 
             RowBox[{
              SubscriptBox["\[Theta]", "21"], "[", "t", "]"}], "]"}]}]}], 
          ")"}], "2"], "-", 
        SuperscriptBox[
         SubscriptBox["l", "2"], "2"]}]}], "}"}]}], ";"}]}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Cinem\[AAcute]tica", " ", "Inversa"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"E1", "[", 
      RowBox[{"xp_", ",", "yp_"}], "]"}], " ", ":=", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "2"}], " ", 
        RowBox[{"(", 
         RowBox[{"xp", " ", "+", " ", 
          FractionBox["d", "2"]}], ")"}], " ", 
        SubscriptBox["l", "1"]}], ")"}], "/.", "PARAM"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"F1", "[", 
      RowBox[{"xp_", ",", "yp_"}], "]"}], " ", ":=", 
     RowBox[{
      RowBox[{"(", " ", 
       RowBox[{
        RowBox[{"-", "2"}], " ", "yp", " ", 
        SubscriptBox["l", "1"]}], ")"}], "/.", "PARAM"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"G1", "[", 
      RowBox[{"xp_", ",", "yp_"}], "]"}], " ", ":=", 
     RowBox[{
      RowBox[{"(", " ", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"xp", " ", "+", " ", 
           FractionBox["d", "2"]}], ")"}], "2"], "+", 
        SuperscriptBox["yp", "2"], "+", 
        SuperscriptBox[
         SubscriptBox["l", "1"], "2"], "-", 
        SuperscriptBox[
         SubscriptBox["l", "2"], "2"]}], ")"}], "/.", "PARAM"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"E2", "[", 
      RowBox[{"xp_", ",", "yp_"}], "]"}], " ", ":=", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "2"}], " ", 
        RowBox[{"(", 
         RowBox[{"xp", " ", "-", " ", 
          FractionBox["d", "2"]}], ")"}], " ", 
        SubscriptBox["l", "1"]}], ")"}], "/.", "PARAM"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"F2", "[", 
      RowBox[{"xp_", ",", "yp_"}], "]"}], " ", ":=", 
     RowBox[{
      RowBox[{"(", " ", 
       RowBox[{
        RowBox[{"-", "2"}], " ", "yp", " ", 
        SubscriptBox["l", "1"]}], ")"}], "/.", "PARAM"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"G2", "[", 
      RowBox[{"xp_", ",", "yp_"}], "]"}], " ", ":=", 
     RowBox[{
      RowBox[{"(", " ", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"xp", " ", "-", " ", 
           FractionBox["d", "2"]}], ")"}], "2"], "+", 
        SuperscriptBox["yp", "2"], "+", 
        SuperscriptBox[
         SubscriptBox["l", "1"], "2"], "-", 
        SuperscriptBox[
         SubscriptBox["l", "2"], "2"]}], ")"}], "/.", "PARAM"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"InvKin", "[", 
      RowBox[{"xp_", ",", "yp_"}], "]"}], " ", ":=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Piecewise", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"2", " ", 
             RowBox[{"ArcTan", "[", 
              FractionBox[
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"F1", "[", 
                  RowBox[{"xp", ",", "yp"}], "]"}]}], "+", 
                SqrtBox[
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"E1", "[", 
                    RowBox[{"xp", ",", "yp"}], "]"}], "2"], "+", 
                  SuperscriptBox[
                   RowBox[{"F1", "[", 
                    RowBox[{"xp", ",", "yp"}], "]"}], "2"], "-", 
                  SuperscriptBox[
                   RowBox[{"G1", "[", 
                    RowBox[{"xp", ",", "yp"}], "]"}], "2"]}]]}], 
               RowBox[{
                RowBox[{"G1", "[", 
                 RowBox[{"xp", ",", "yp"}], "]"}], "-", " ", 
                RowBox[{"E1", "[", 
                 RowBox[{"xp", ",", "yp"}], "]"}]}]], "]"}]}], ",", " ", 
            RowBox[{
             RowBox[{"G1", "[", 
              RowBox[{"xp", ",", "yp"}], "]"}], " ", "\[NotEqual]", " ", 
             RowBox[{"E1", "[", 
              RowBox[{"xp", ",", "yp"}], "]"}]}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"2", " ", 
             RowBox[{"ArcTan", "[", 
              RowBox[{"-", 
               FractionBox[
                RowBox[{"E1", "[", 
                 RowBox[{"xp", ",", "yp"}], "]"}], 
                RowBox[{"F1", "[", 
                 RowBox[{"xp", ",", "yp"}], "]"}]]}], "]"}]}], ",", 
            RowBox[{
             RowBox[{"G1", "[", 
              RowBox[{"xp", ",", "yp"}], "]"}], " ", "\[Equal]", " ", 
             RowBox[{"F1", "[", 
              RowBox[{"xp", ",", "yp"}], "]"}]}]}], "}"}]}], "}"}], "]"}], 
       ",", 
       RowBox[{"Piecewise", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"2", " ", 
             RowBox[{"ArcTan", "[", 
              FractionBox[
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"F2", "[", 
                  RowBox[{"xp", ",", "yp"}], "]"}]}], "-", 
                SqrtBox[
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"E2", "[", 
                    RowBox[{"xp", ",", "yp"}], "]"}], "2"], "+", 
                  SuperscriptBox[
                   RowBox[{"F2", "[", 
                    RowBox[{"xp", ",", "yp"}], "]"}], "2"], "-", 
                  SuperscriptBox[
                   RowBox[{"G2", "[", 
                    RowBox[{"xp", ",", "yp"}], "]"}], "2"]}]]}], 
               RowBox[{
                RowBox[{"G2", "[", 
                 RowBox[{"xp", ",", "yp"}], "]"}], "-", " ", 
                RowBox[{"E2", "[", 
                 RowBox[{"xp", ",", "yp"}], "]"}]}]], "]"}]}], ",", " ", 
            RowBox[{
             RowBox[{"G2", "[", 
              RowBox[{"xp", ",", "yp"}], "]"}], " ", "\[NotEqual]", " ", 
             RowBox[{"E2", "[", 
              RowBox[{"xp", ",", "yp"}], "]"}]}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"2", " ", 
             RowBox[{"ArcTan", "[", 
              RowBox[{"-", 
               FractionBox[
                RowBox[{"E2", "[", 
                 RowBox[{"xp", ",", "yp"}], "]"}], 
                RowBox[{"F2", "[", 
                 RowBox[{"xp", ",", "yp"}], "]"}]]}], "]"}]}], ",", 
            RowBox[{
             RowBox[{"G2", "[", 
              RowBox[{"xp", ",", "yp"}], "]"}], " ", "\[Equal]", " ", 
             RowBox[{"E2", "[", 
              RowBox[{"xp", ",", "yp"}], "]"}]}]}], "}"}]}], "}"}], "]"}]}], 
      "}"}]}], ";"}], "\[IndentingNewLine]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Cinem\[AAcute]tica", " ", "Direta"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"xc1", "[", 
      RowBox[{"\[Theta]11_", ",", "\[Theta]21_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["d", "2"]}], "+", " ", 
        RowBox[{
         SubscriptBox["l", "1"], 
         RowBox[{"Cos", "[", "\[Theta]11", "]"}]}]}], ")"}], "/.", 
      "PARAM"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"xc2", "[", 
      RowBox[{"\[Theta]11_", ",", "\[Theta]21_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        FractionBox["d", "2"], "+", " ", 
        RowBox[{
         SubscriptBox["l", "1"], 
         RowBox[{"Cos", "[", "\[Theta]21", "]"}]}]}], ")"}], "/.", 
      "PARAM"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"yc1", "[", 
      RowBox[{"\[Theta]11_", ",", "\[Theta]21_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"(", " ", 
       RowBox[{
        SubscriptBox["l", "1"], 
        RowBox[{"Sin", "[", "\[Theta]11", "]"}]}], ")"}], "/.", "PARAM"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"yc2", "[", 
      RowBox[{"\[Theta]11_", ",", "\[Theta]21_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"(", " ", 
       RowBox[{
        SubscriptBox["l", "1"], 
        RowBox[{"Sin", "[", "\[Theta]21", "]"}]}], ")"}], "/.", "PARAM"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"xm", "[", 
      RowBox[{"\[Theta]11_", ",", "\[Theta]21_"}], "]"}], " ", ":=", " ", 
     FractionBox[
      RowBox[{
       RowBox[{"xc1", "[", 
        RowBox[{"\[Theta]11", ",", "\[Theta]21"}], "]"}], "+", 
       RowBox[{"xc2", "[", 
        RowBox[{"\[Theta]11", ",", "\[Theta]21"}], "]"}]}], "2"]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"ym", "[", 
      RowBox[{"\[Theta]11_", ",", "\[Theta]21_"}], "]"}], " ", ":=", " ", 
     FractionBox[
      RowBox[{
       RowBox[{"yc1", "[", 
        RowBox[{"\[Theta]11", ",", "\[Theta]21"}], "]"}], "+", 
       RowBox[{"yc2", "[", 
        RowBox[{"\[Theta]11", ",", "\[Theta]21"}], "]"}]}], "2"]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"dx", "[", 
      RowBox[{"\[Theta]11_", ",", "\[Theta]21_"}], "]"}], " ", ":=", " ", 
     RowBox[{
      RowBox[{"xc2", "[", 
       RowBox[{"\[Theta]11", ",", "\[Theta]21"}], "]"}], "-", 
      RowBox[{"xc1", "[", 
       RowBox[{"\[Theta]11", ",", "\[Theta]21"}], "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"dy", "[", 
      RowBox[{"\[Theta]11_", ",", "\[Theta]21_"}], "]"}], " ", ":=", " ", 
     RowBox[{
      RowBox[{"yc2", "[", 
       RowBox[{"\[Theta]11", ",", "\[Theta]21"}], "]"}], "-", 
      RowBox[{"yc1", "[", 
       RowBox[{"\[Theta]11", ",", "\[Theta]21"}], "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Lambda", "[", 
      RowBox[{"\[Theta]11_", ",", "\[Theta]21_"}], "]"}], " ", ":=", " ", 
     SqrtBox[
      RowBox[{
       FractionBox[
        RowBox[{
         SuperscriptBox[
          SubscriptBox["l", "2"], "2"], "/.", "PARAM"}], 
        RowBox[{
         SuperscriptBox[
          RowBox[{"dx", "[", 
           RowBox[{"\[Theta]11", ",", "\[Theta]21"}], "]"}], "2"], "+", 
         SuperscriptBox[
          RowBox[{"dy", "[", 
           RowBox[{"\[Theta]11", ",", "\[Theta]21"}], "]"}], "2"]}]], "-", 
       FractionBox["1", "4"]}]]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"DirKin", "[", 
      RowBox[{"\[Theta]11_", ",", "\[Theta]21_"}], "]"}], ":=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"xm", "[", 
         RowBox[{"\[Theta]11", ",", "\[Theta]21"}], "]"}], " ", "-", "  ", 
        RowBox[{
         RowBox[{"dy", "[", 
          RowBox[{"\[Theta]11", ",", "\[Theta]21"}], "]"}], " ", 
         RowBox[{"Lambda", "[", 
          RowBox[{"\[Theta]11", ",", "\[Theta]21"}], "]"}]}]}], ",", 
       RowBox[{
        RowBox[{"ym", "[", 
         RowBox[{"\[Theta]11", ",", "\[Theta]21"}], "]"}], " ", "+", "  ", 
        RowBox[{
         RowBox[{"dx", "[", 
          RowBox[{"\[Theta]11", ",", "\[Theta]21"}], "]"}], " ", 
         RowBox[{"Lambda", "[", 
          RowBox[{"\[Theta]11", ",", "\[Theta]21"}], "]"}]}]}]}], "}"}]}], 
    ";"}]}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Cinem\[AAcute]tica", " ", "dos", " ", "\[AHat]ngulos", " ", 
    "intermedi\[AAcute]rios"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"AuxKin", "[", 
     RowBox[{"xp_", ",", "yp_", ",", "\[Theta]11_", ",", "\[Theta]21_"}], 
     "]"}], ":=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"ArcTan", "[", 
        RowBox[{
         FractionBox[
          RowBox[{"yp", "-", 
           RowBox[{
            SubscriptBox["l", "1"], 
            RowBox[{"Sin", "[", "\[Theta]11", "]"}]}]}], 
          RowBox[{"xp", " ", "+", 
           FractionBox["d", "2"], "-", 
           RowBox[{
            SubscriptBox["l", "1"], 
            RowBox[{"Cos", "[", "\[Theta]11", "]"}]}]}]], "/.", "PARAM"}], 
        "]"}], "-", "\[Theta]11"}], ",", 
      RowBox[{
       RowBox[{"ArcTan", "[", 
        RowBox[{
         FractionBox[
          RowBox[{"yp", "-", 
           RowBox[{
            SubscriptBox["l", "1"], 
            RowBox[{"Sin", "[", "\[Theta]21", "]"}]}]}], 
          RowBox[{"xp", " ", "-", 
           FractionBox["d", "2"], "-", 
           RowBox[{
            SubscriptBox["l", "1"], 
            RowBox[{"Cos", "[", "\[Theta]21", "]"}]}]}]], "/.", "PARAM"}], 
        "]"}], "+", "\[Pi]", "-", "\[Theta]21"}]}], "}"}]}], ";"}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Cinem\[AAcute]tica", " ", "Inversa", " ", "Completa"}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    StyleBox[
     RowBox[{"InverseKin", "[", 
      RowBox[{"xp_", ",", "yp_"}], "]"}],
     FontSlant->"Italic"], 
    StyleBox[":=",
     FontSlant->"Italic"], 
    StyleBox[" ",
     FontSlant->"Italic"], 
    RowBox[{
     StyleBox["{",
      FontSlant->"Italic"], 
     RowBox[{
      StyleBox["xp",
       FontSlant->"Italic"], 
      StyleBox[",",
       FontSlant->"Italic"], 
      StyleBox["yp",
       FontSlant->"Italic"], 
      StyleBox[",",
       FontSlant->"Italic"], 
      StyleBox[
       RowBox[{
        RowBox[{"InvKin", "[", 
         RowBox[{"xp", ",", "yp"}], "]"}], "\[LeftDoubleBracket]", "1", 
        "\[RightDoubleBracket]"}],
       FontSlant->"Italic"], 
      StyleBox[",",
       FontSlant->"Italic"], 
      StyleBox[
       RowBox[{
        RowBox[{"AuxKin", "[", 
         RowBox[{"xp", ",", "yp", ",", 
          RowBox[{
           RowBox[{"InvKin", "[", 
            RowBox[{"xp", ",", "yp"}], "]"}], "\[LeftDoubleBracket]", "1", 
           "\[RightDoubleBracket]"}], ",", 
          RowBox[{
           RowBox[{"InvKin", "[", 
            RowBox[{"xp", ",", "yp"}], "]"}], "\[LeftDoubleBracket]", "2", 
           "\[RightDoubleBracket]"}]}], "]"}], "\[LeftDoubleBracket]", "1", 
        "\[RightDoubleBracket]"}],
       FontSlant->"Italic"], 
      StyleBox[",",
       FontSlant->"Italic"], 
      RowBox[{
       RowBox[{"InvKin", "[", 
        RowBox[{"xp", ",", "yp"}], "]"}], "\[LeftDoubleBracket]", "2", 
       "\[RightDoubleBracket]"}], ",", 
      RowBox[{
       RowBox[{"AuxKin", "[", 
        RowBox[{"xp", ",", "yp", ",", 
         RowBox[{
          RowBox[{"InvKin", "[", 
           RowBox[{"xp", ",", "yp"}], "]"}], "\[LeftDoubleBracket]", "1", 
          "\[RightDoubleBracket]"}], ",", 
         RowBox[{
          RowBox[{"InvKin", "[", 
           RowBox[{"xp", ",", "yp"}], "]"}], "\[LeftDoubleBracket]", "2", 
          "\[RightDoubleBracket]"}]}], "]"}], "\[LeftDoubleBracket]", "2", 
       "\[RightDoubleBracket]"}]}], "}"}]}], ";"}]}]], "Input",
 CellChangeTimes->{3.6221399440298157`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Rho]", " ", "=", " ", "0.06"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"rx", "[", "t_", "]"}], " ", ":=", " ", 
   RowBox[{"\[Rho]", " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"20", "t"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ry", "[", "t_", "]"}], " ", ":=", 
   RowBox[{"0.30776835371752537", "+", 
    RowBox[{"\[Rho]", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"20", "t"}], "]"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"r", "[", "t_", "]"}], " ", ":=", " ", 
   RowBox[{"InverseKin", "[", 
    RowBox[{
     RowBox[{"rx", "[", "t", "]"}], ",", 
     RowBox[{"ry", "[", "t", "]"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6221365691492653`*^9, 3.622136621886086*^9}, {
  3.622137076428525*^9, 3.6221371330608873`*^9}, {3.622140112210947*^9, 
  3.622140190294881*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"k", " ", "=", " ", "10"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Lambda]", " ", "=", " ", "40"}], ";"}]}], "Input",
 CellChangeTimes->{{3.622140411005245*^9, 3.622140421360626*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[CapitalDelta]t", " ", "=", " ", 
   RowBox[{"2", 
    RowBox[{"\[Pi]", "/", "400.0"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ti", " ", "=", " ", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tf", " ", "=", " ", 
   RowBox[{"4", " ", "2", 
    RowBox[{"\[Pi]", "/", "20.0"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T", " ", "=", "  ", 
   RowBox[{"2", 
    RowBox[{"\[Pi]", "/", "20.0"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[ScriptT]", " ", "=", " ", 
   RowBox[{"Range", "[", 
    RowBox[{"ti", ",", " ", "T", ",", " ", "\[CapitalDelta]t"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.622405452783514*^9, 3.6224055366130867`*^9}, {
   3.622406934018262*^9, 3.622406937126027*^9}, {3.622649590447814*^9, 
   3.6226495912702827`*^9}, {3.622649641231228*^9, 3.622649656422573*^9}, {
   3.622649708495167*^9, 3.6226497345667467`*^9}, {3.6226498529735403`*^9, 
   3.622649899935007*^9}, 3.622649948462303*^9, {3.6226507572082653`*^9, 
   3.622650761208082*^9}, {3.622652400348713*^9, 3.6226524012276287`*^9}, 
   3.622652445037224*^9, {3.622653751890547*^9, 3.622653782835126*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"RefDis", " ", "=", " ", 
    RowBox[{"r", "[", "\[ScriptT]", "]"}]}], ";"}], " "}]], "Input",
 CellChangeTimes->{{3.622405553383144*^9, 3.622405602466722*^9}, 
   3.622406945514062*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{"RefDis", "\[LeftDoubleBracket]", "6", "\[RightDoubleBracket]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6224056047914743`*^9, 3.6224056512114077`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.019444444444444445`],
      AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQDQEf7L2iHxRn3/hqDxVwMLzwdtOp8M9QPodDw0eZ
d97rPkD5Ag4a+nXFuwXfQPkiDj8KHOrlPZ9D+RIODVFNS3bvfQzlyziskXAN
uJP0CMpXQJNXcmAoRNavgma+mkMTiv0aaO7TcvBAcb+OQ3Ffd0gsxw8oX89B
72bf/ZoDP6F8AwcPDZ/Cbbd/QfmGDnopYQt32f6G8o0c3FHkjR10UPSbOBSh
mG/qAAs/AE27YXs=
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{0., 21.}, {0, 1.7025705625767489`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.622405633871475*^9, 3.6224056516703577`*^9}, 
   3.6224070009339647`*^9, 3.622411652054783*^9, 3.622649293357232*^9, {
   3.622649716380622*^9, 3.622649739086009*^9}, 3.622649879626568*^9, 
   3.622649910369598*^9, {3.622649952336779*^9, 3.622649974008957*^9}, 
   3.622650706423983*^9, 3.6226507702837267`*^9, 3.622652413073247*^9, 
   3.6226524508282022`*^9, 3.622653787406122*^9, 3.6226560147792683`*^9, 
   3.622656120579582*^9, 3.622656542207777*^9, 3.622657352243815*^9, 
   3.62265759234785*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dimensions", "@", "\[ScriptT]"}]], "Input",
 CellChangeTimes->{{3.622655394150947*^9, 3.622655401582468*^9}}],

Cell[BoxData[
 RowBox[{"{", "21", "}"}]], "Output",
 CellChangeTimes->{3.622655402119092*^9, 3.62265601479207*^9, 
  3.622656120590749*^9, 3.622656542288789*^9, 3.622657352252809*^9, 
  3.622657592363022*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"nbasis", "[", 
    RowBox[{"n_Integer", ",", "  ", "T_"}], "]"}], "[", "t_", "]"}], ":=", 
  RowBox[{"Join", "[", 
   RowBox[{
    RowBox[{"Table", "[", " ", 
     RowBox[{
      RowBox[{"Cos", " ", "[", " ", 
       RowBox[{"2", " ", "\[Pi]", " ", "k", " ", 
        RowBox[{"t", "/", "T"}]}], " ", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "0", ",", "n"}], "}"}]}], "]"}], ",", 
    RowBox[{"Table", "[", " ", 
     RowBox[{
      RowBox[{"Sin", "[", " ", 
       RowBox[{"2", " ", "\[Pi]", " ", "k", " ", 
        RowBox[{"t", "/", "T"}]}], " ", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "1", ",", "n"}], "}"}]}], "]"}]}], "]"}]}]], "Input",\

 CellChangeTimes->{{3.622405466635521*^9, 3.622405479602318*^9}, 
   3.622655386256577*^9, {3.6226554280961103`*^9, 3.6226555411679773`*^9}, {
   3.6226555956165037`*^9, 3.622655618545088*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"nbasis", "[", 
   RowBox[{"9", ",", 
    RowBox[{"2", " ", "\[Pi]"}]}], "]"}], "[", "t", "]"}]], "Input",
 CellChangeTimes->{{3.622655470621958*^9, 3.622655514334543*^9}, {
   3.622655547326892*^9, 3.622655549479553*^9}, 3.622656130122793*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", 
   RowBox[{"Cos", "[", "t", "]"}], ",", 
   RowBox[{"Cos", "[", 
    RowBox[{"2", " ", "t"}], "]"}], ",", 
   RowBox[{"Cos", "[", 
    RowBox[{"3", " ", "t"}], "]"}], ",", 
   RowBox[{"Cos", "[", 
    RowBox[{"4", " ", "t"}], "]"}], ",", 
   RowBox[{"Cos", "[", 
    RowBox[{"5", " ", "t"}], "]"}], ",", 
   RowBox[{"Cos", "[", 
    RowBox[{"6", " ", "t"}], "]"}], ",", 
   RowBox[{"Cos", "[", 
    RowBox[{"7", " ", "t"}], "]"}], ",", 
   RowBox[{"Cos", "[", 
    RowBox[{"8", " ", "t"}], "]"}], ",", 
   RowBox[{"Cos", "[", 
    RowBox[{"9", " ", "t"}], "]"}], ",", 
   RowBox[{"Sin", "[", "t", "]"}], ",", 
   RowBox[{"Sin", "[", 
    RowBox[{"2", " ", "t"}], "]"}], ",", 
   RowBox[{"Sin", "[", 
    RowBox[{"3", " ", "t"}], "]"}], ",", 
   RowBox[{"Sin", "[", 
    RowBox[{"4", " ", "t"}], "]"}], ",", 
   RowBox[{"Sin", "[", 
    RowBox[{"5", " ", "t"}], "]"}], ",", 
   RowBox[{"Sin", "[", 
    RowBox[{"6", " ", "t"}], "]"}], ",", 
   RowBox[{"Sin", "[", 
    RowBox[{"7", " ", "t"}], "]"}], ",", 
   RowBox[{"Sin", "[", 
    RowBox[{"8", " ", "t"}], "]"}], ",", 
   RowBox[{"Sin", "[", 
    RowBox[{"9", " ", "t"}], "]"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.622655479400125*^9, 3.6226555147115593`*^9}, 
   3.622655550299638*^9, 3.622655621783763*^9, 3.6226560148677*^9, {
   3.622656120779072*^9, 3.6226561307029753`*^9}, 3.622656542694086*^9, 
   3.622657352361576*^9, 3.622657592414217*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"r1", " ", "=", 
   RowBox[{"Fit", "[", 
    RowBox[{
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"{", "\[ScriptT]", "}"}], "\[Transpose]"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "RefDis", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
         "}"}], "\[Transpose]"}], ",", "2"}], "]"}], ",", 
     RowBox[{
      RowBox[{"nbasis", "[", 
       RowBox[{"9", ",", "T"}], "]"}], "[", "t", "]"}], ",", "t"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"r2", " ", "=", 
   RowBox[{"Fit", "[", 
    RowBox[{
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"{", "\[ScriptT]", "}"}], "\[Transpose]"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "RefDis", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
         "}"}], "\[Transpose]"}], ",", "2"}], "]"}], ",", 
     RowBox[{
      RowBox[{"nbasis", "[", 
       RowBox[{"9", ",", "T"}], "]"}], "[", "t", "]"}], ",", "t"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"r3", " ", "=", 
   RowBox[{"Fit", "[", 
    RowBox[{
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"{", "\[ScriptT]", "}"}], "\[Transpose]"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "RefDis", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
         "}"}], "\[Transpose]"}], ",", "2"}], "]"}], ",", 
     RowBox[{
      RowBox[{"nbasis", "[", 
       RowBox[{"9", ",", "T"}], "]"}], "[", "t", "]"}], ",", "t"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"r4", " ", "=", 
   RowBox[{"Fit", "[", 
    RowBox[{
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"{", "\[ScriptT]", "}"}], "\[Transpose]"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "RefDis", "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}], 
         "}"}], "\[Transpose]"}], ",", "2"}], "]"}], ",", 
     RowBox[{
      RowBox[{"nbasis", "[", 
       RowBox[{"9", ",", "T"}], "]"}], "[", "t", "]"}], ",", "t"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"r5", " ", "=", 
   RowBox[{"Fit", "[", 
    RowBox[{
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"{", "\[ScriptT]", "}"}], "\[Transpose]"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "RefDis", "\[LeftDoubleBracket]", "5", "\[RightDoubleBracket]"}], 
         "}"}], "\[Transpose]"}], ",", "2"}], "]"}], ",", 
     RowBox[{
      RowBox[{"nbasis", "[", 
       RowBox[{"9", ",", "T"}], "]"}], "[", "t", "]"}], ",", "t"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"r6", " ", "=", 
   RowBox[{"Fit", "[", 
    RowBox[{
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"{", "\[ScriptT]", "}"}], "\[Transpose]"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "RefDis", "\[LeftDoubleBracket]", "6", "\[RightDoubleBracket]"}], 
         "}"}], "\[Transpose]"}], ",", "2"}], "]"}], ",", 
     RowBox[{
      RowBox[{"nbasis", "[", 
       RowBox[{"9", ",", "T"}], "]"}], "[", "t", "]"}], ",", "t"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.6226573915041924`*^9, 3.622657396774794*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{"r1", ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "ti", ",", "tf"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.622649557248089*^9, 3.622649577792006*^9}, {
   3.622649673966771*^9, 3.62264969875062*^9}, 3.622649766230131*^9, 
   3.6226499415970507`*^9, {3.622649981765004*^9, 3.62264998196318*^9}, {
   3.622650626039899*^9, 3.622650636830929*^9}, {3.622653812386735*^9, 
   3.6226538607943974`*^9}, {3.622657423146771*^9, 3.622657423288433*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1:eJw13Hk4Vd/XAHCVJEOEBg1KNJCkkoRaElFKkvmLZCiVjIUkmWdCZjLP995j
nodtDpkyZSaumct1pUz1nt8f71+e9Zx9915nrbPP3R+eB6+BuYrxTjo6uqP0
dHT/+2n6d9jB1Pu/m0+PuM8/KsbgqN2Um6PMdfj1S+HIQTx+4shqJS9zF+zL
AgkGRRhojnV1pFFVQJv7UOK1QgycdyTMnJfRAjsbk52h+RhknjKjyw5+Aq5j
4532uRjMJhxniaIawDlawdHZLAwcL9MfHuJ+BiLF41OjRAw4auf4eGReQJiT
pPSTDAxSH3+/qP/SFMwKDa8+T8FAklwkmRhsDgNp7T2/4zEwkWjns9K1hO57
dZf3x2CQ61Ij8JlqBdR19Sd5YRhsNRdczHd/AxyCry1GAjG4w5lxtYfbBhi5
yx2CfTAYTPp065DMO+jenpwLdcDgzIKLvHivPVCOXXOdfIOBhajNA62XDqD+
juhaaYoBfb2OVnTwR9igNd9g/Q+DNIb0i3qfneCjqqaU6yMMWjITcs10nSHt
5XchV3kMDtJCij9RXWAok9OZ9zKef3iAZHyZKziZ8ohXncFAX9KrMtvdDerb
wjxnj+D1cn1f953bA9Q2tjKGdmAAXAYdnDLeoPjSw/ZeMwmMiv97zM/iA0L+
T/Rvl5HAR0etV7TXB2RsRdwaCSToTlYYUnvpB5pvwsztfElgcvXiTHjwJ3Dk
yB58K0eCBtOQq6rCgfBNXyDsx2US9N/cb6vzORCucLTFfj1Bgr/jTBumukFA
fS5R//gPERTO//3nTw2GpFf/UfmTiaC9bX8rTP0zTJg0Ru8IIMLr9t8usWWf
QWlW/KC5LRGCram7s9xDYDPs2dC2AhGGysjMHdxhwFkwlr86RQDL+98OcchE
wo7j+jJf9hHgptz6TGRWJNxa1n0hvZQJLDfPlvIej4IEh6T7Ju2ZkHrRVefS
nyiwXT4dpBCQCQMckgnKWAxUd53z+48hExJN1ULlWeOB//fuc+pj6cD4YuED
s2w8hIPSsYCSdDA3dn3Wbh8PFl2Vs6rB6SCll3NNYyYe9j0+MRYkkw69D1kH
ntUmwMCxae3hL2nAfKWex+NdEhBD82lPpVPB6qLOnnvZSXB7c/fiKEcq9J2n
LbFOJ4FEicXPP+QUSOXnrQ5VTYbkguTd/zxTQPrgB8OUiylwcsk5xbopGd6s
i6bXTaZC0Oqrm0giCUZQ8qVdKpkwyXzpk31pHFzp+slwxj0Tsktj2fgexYHX
FM+QQnEmXPbOi1aajoUrrJEeATwEiEhvsrzKEQte2v6D3PME+Hs4rNzCIAYu
/XrrLuJGAmu3D2uHKREgE5q0IPxfNvRkJKMnlUEQ0vxGWsc/D77qfyY+lTWG
xiaK3OvUPGDLbbQIcXkKW40mio4oD0JC448xOv8Hxl911OOpecD+IH/5wZIC
iNXJmpLV8sHzaJmWVcwj1F/BFWHKUwAvtg6UXjK1Rjw5+UsOWYVw/ahk56EI
L6SSLfzLv7EQVlJiN4mu3sgzK30j9mchdI+x3h8z80HLpJjd1ZxFwPEiWpFT
1g9VZ7od3W1XBPx/bjspzH5CRsmq8v7SxbDGHJBC9f+MMsJXY798L4EQ0+O2
VLco5Dem7dW2UAKHO8ppFhtRyEyg2vLfnlJ48PZUro15NBIt85d9erMUNM/y
FLJoxqCqkTNz/IRSKFTkSxbgi0V9p7WuEt3KgM9Bzj23PR6VmSGe4bgykErL
Zz/PkIBii04z7isrg75V1SZ1qQRkdHdlwJxaBubyxdTatAS0bOrrdEWvHMpM
CCUD9omIMb/iW+m1CuB4eL/g/P5kNL/FVzCvUgGYrUL0c5lk1CbnE3vMrALM
mJe4FKyTUcgPdUvH5ArYeSpahdaVjE5uLh2U2V8JQ3zbNwcDU9A1mVMGTXOV
0NXHmyT+JxUd8fVS3NiNwNDiEJM2Xxra6qKInudFsGp6eg+nUhqqMS7b46+B
YKpaokYhMQ0peauSlOsQ9LOlR2Ny6eiKye2teaUq8LzNyV1vm4H0OU4KxfxX
BQfP30xOiMxAAeVb/903qYIdGl2B3GUZaIa9sIzoXAVCTtHO/VsZKKbk3PvX
+VVQeS6uyvd9Jmoy3E04Xo1/nlVN8WpUJlpjHR9oba2CkVt08jbFmUjZIFpC
eLoKGH8LF5XTMtFu5n0bFO5qUJYwGVUyJqDLBXMCcWeqYViJQzHNiYD0n3zV
enilGqi/qF8+RxNQaZ5TSdb9ajB5WPD4TAcBmenQ7Cw+VsN6b1rPOVEi+kHq
+00lV0PAhRYrpWkiotcsOJtIrYZ4ea3nRZtEdHlnsIbK32q4liFhibGRkJ+6
YlHuoRpwme7zkxMjIel/FTbW92pAbyd7BZsjCb3OiErl06iBq2dCBX4GkFDU
Y9veLsMaYPagf3EzjoRW00TERD/UgP3L00+jK0koQznp12pWDYRuqsf2/Sah
3o2Pp1PKa6A5OnZ7x24M0afoqKk11QAjo/uTgv0Y0ls/UFAwXgMado+MSwQw
5Ju0QjZeqgFunq7MvVcxVPygnevgVg08uiMkNgEY4kj0emNzoBai05LfXlLF
ENw3Tj5zqhaOea32p+hiyHTtVnevcC0kWDuSE59hKDKeh95Tshaa1SiW58wx
1HBv88o1hVpwrKzXF7PFEG31h+G0ai3EGusEtThi6GRc/ufwp7XwLG1scs4d
Q+9pr2m/7WuhRivODwVjyKlG+kCxVy00lacmzEVgyC2I85pdWC1kSPG+84rF
kJf+lKZ4ci0kxfGuRyRhyO9iif2fnFqI55FnOpaOocC/vjHFqBYOf68I30/E
UGirXqVday3IssKnd1kYioq5NCY+WAsvyvf/fJyLodhX9DvXZ2rBIYnJKT4f
Q4kSP/hK1mrhZ5zf0yeFGErbmyn3jr4OrPu8PgQWYYjY5/D8OkcdEMYd264U
Yyg77aH3+ok62D/k8OguHufbnCKUXKiDDtsTDN/x8SVyv1reSdaBLV0wpRmf
r5KrkXL9bh0wKAWwXSvAUM1EFPuGeh1wZutYHMjD65f7+nKpUR0ItXQdeZaN
oW/O0qr2VnVgaaF5VICEoQ5lThsJpzrQ0R520svAUPeJqfAN/zqopo7rMKRg
qI9SXFIaXQfbv21qT8ZjaLjCd9A+ow5szot+I0VhaNxPb1uiqA4ER2/5k0Iw
NPXfpRObdfj9eDw+fTIAQ3OC9LfKOutARCw9Z7cnhpbWew3ej9XBn4NMj/U+
Ymi1McNNklIHq+2tQoJ4f/+EO6RubtYBafy70QszDG09e9hYtrceLLc+8B0z
xtAOsVNz7w/VQ79kzWeZ/zDE1P31wtblelA5/+7WvByG9iVFPSyXrgfsmPnP
1xIY4rR6bemgVA9OSzv+GAlj6Bg7Z8HWi3rICix+kcOFPz+jk73ltvh1eSfJ
PXswdBor/uPgXg8M/oKWnX9ISPi+ntR2fD1oxa6yNw+Q0OWjl/QqsHpgqSrc
/buZhK7N7XL6UF4Pd2O+WEeV4vvRK6N2+0c9vP9gNi8XQUKP6lbv/d3XAL7q
VgLiD0hI/fNX08pjDXDZQSGf9zoJaRtEBTgKNoBLm6WWGz8JGdBJd/6VawAr
sTbLwnUieiPlq/XPoQG42D8P9n0hooh8XhO6+QZ48dzdxqaVgJ7eNNBw+tMA
9eJb5PQcAhJsTLxDx/AV0maSj+qHElDFIN9pOt6vUF23b1DvPwIa33lm/J/6
V4gzaJ0n/MxEFx4J6vyr+QqjD0Wdt39koLWBl4ofO77CgxUBpvL8DFRlRJD4
N/wVMvozrjAGZSAVOyHuf3++Qv9G+qSiQgayixPu/SvcCJ1cTxOCc9JRzeJl
5b9RjVAs9TUz1zwN+dlag2N6I7xJ3UeNlEtDajvyhf8WNALi1iVyH01DM1xX
Wf92NELChxt2k3WpiFXqWvM2QxPs6Ep2reVMRZo+krLbVk1gnsfKohCXjBbP
yIpv3WuGb7nhWjetE5CVGDb+WaMZ8riNZ3RvJaA1ucP+542a4aTQlUwJtgRE
Z7zwU/sDfr3raodwZjziSgrxLclqhnb5khvCpXFI6sTkiA3XN/DJ/6h1wTwG
+R3ycKcOf8PP4b+fLXqHovOMjZ1TFq0wzca1yOTxHnlJnTMPcGyF9jXFnhqH
d4hs4cUs5tcKUex5xQzWtiimX0HWPa0VXvqVB2joWaN9hKYCvpFWCH/D+ui2
wTO0/OBbhL5iG4yetW1jrlGF/M9tegOn2+GAGrdQxbQLsDcKbzpfaQfXgT6G
2DlXMN0KCBe41Q4n26LF+Rfd4LTxww47nXZIZ0iGfVQPCBPruHXoczuIGlmG
9NF8oHzBhEOQrgMaLwo/S7EIgrhPL389e90Bql+kWM/yREKm6cWEBusO8DI9
a5XkHwmFd1fvn7HvAEN/ftvSrUho2+WYPOnRAUPZHE45/VHw1zbosVF8B0g5
DaPPATGgp1+c87SrAyQjr/Blj8cBzyUGM53r3+HqM7VfllxJILjvG3c5fIeY
KCF3adkkEJv/VH/0zncw0+9OqbFOAqUU7uODKt/Bqf9n+sj3JHDkvtCiZfod
vD4kGz31SYaRHaqCGnHf4UernBRtPgW+dCZMPdrdCV21hLeRpunA4n/8XRBz
J4x2bKS0BKaDvXwk8/f9nRAer3shMT8d1MsDRZR5OiFZSuHk5c10YE/9aK90
rRO4Q7j+9rpmgNs73X2KLzoh48BpnzqXTFi50h/vY94Jf0q8pMfiM+EpRfVK
89tOEAhJtAirzISbhvc177p0wk2uJ/YdfzLh933JRPnoTrCruiBibkKAlye5
xWRbO4GyFXl46woR+gZCGl27OiGUMR3zVySCfCj7f7X9naAykWaYZ0AEfiZG
J5mpTqh5eOhbySciDNPWmqT/dUL6LVulDDIR7mNWOk67u+AmR9ynTtwrpSYU
CmLuAv6Fo//5s5AgbHiSEw53wYvAH8aFuHeUv3br3rjUBRUdcnZt70hQ6ay8
7HANj5c9hR18SHBBqsWl/EYXTEvW3i6JIgFTTm2a5L0uCO+5EDpWQgK7VyDx
XrkLYnnDtJsbSTB1uqylVL0LCJqvgmR+kKA2Kpd63bALutYN7IZXSHBZTdjt
3Ysu+PJDDv37R4J4tsyDJeZdwMN9OCWLBQMHtwRJcYcukFav9S/ix2Du5vE2
W5cuyH64LcomgoHWeoR+kVcXNOyeq6VJYCBmFuguFtoFLAxvVg0eYsAuuWf/
3+gueLxL6lORFv75PY4x9YldoJsQuexqiEFd9+pZ/4wuWH8UvPAV92tswqs8
1ewuMCr5pOX6FgM7s/Gbx4q6YNJEn73wAwYqklrNExVd0BggvvDEHQOGnjs/
rb51wa/Bdt/DnzEYS6gwlejsgjt71/efjcSg1Ez0z47+LrBt/XuLGItBiCTB
tWm0C7xuHNmVnoSBGeMptqCpLkhUWLx5JB0DhZ6IKM3FLnA+5vpzJ+79U4ls
Z06udsGOj8r9T7Nwr5t55ExvdMH4MdFD13Ix+CG5LZW1oxtIrTYBLvm47xnf
NNowdkNjyzdR2UIM/HrmHt9kw69PK+90KMLgWeLT0d0Hu0EjIYAqUIyBtHnf
y9Zj3VB5z+7fAzw+IvVwLYSvGwLYTc/P4ONXGRucdQS74d/2Zds/+HxtPVKs
/Je6oX2VbtqxAIP0xLyI+WvdoB/1xvl9HgYu5oL8eTe7gV0i/CElGwMdqYQs
e7luiIwZ0vlBwvuz97CkzP1uKOw+VSSWifenN6Bh7+NuGKPLNWNJxfuTuFvl
u1Y3SO2UCtNMwPtj7jAcod8NWeeGZI7G4P2RopnoP++Gs90H/VTD8P7sfbl6
1qwb9jL3+9IH4v3pHfu49KYbvu+20zvvjYFQkgZz0ftuWM7KPtXkjPfLoi3M
0QXP/3ja+vA7vF9ScqfueHcD259JhpeWeL/2lpNYA7th95CuxWsTvF+9l6/3
hHWDaY6R3owe3h+Lk8pGyd0QvWH6Vu4e3p8b4YPnCd0wyLNv8yzg/dm77zkt
pxu+/npf6XIFg+ykzQ8uqBtutV7qTDiCAfePXkL8QDe4yHPa+42TYDXpwTWT
n90wnfhW8FoXCdos6mouznTDxfMntv+rJYELU25/5S+8Xx2K5w4kkmDuhv+e
YfYecC7bs/JAiwR1TPSfkw/1ANebs3SdciSI/WHPY8rTA3KDIoTOSyRQsTS5
unm+B4zaVG4pMpKgNPm2Ibd8D7Rr6rXzZRHBSvRhi+mDHvC1/OkiHEkEwTrt
q1WPe8DmbtGbJhciRE1Y7nmu3wOV9Metc1SJ8O5UPCH/XQ88n2Hte0wjgHj8
Fu0hsQd6XriSrh0jwPJFRt2k3B6I5xXasPqXCemIs2GtuAe+X1FqkB3PhMOj
ghFf6ntgY3dJKikVf/8d15KaH+kB4gvMOEEwEwqjC9w89vdCfdK9FYcTGWB2
vnqx/1AvsDsYntDaSoczZS3qF3h6geX5SHpXXzqEDUyc6xbshSdWedsp+Pv7
LTdHK69sL+w/aCnRvpkGouFmBypseqFipfFoQVUq5AWfTaUN9kK1eJfayb3J
0CsqzNg+3gt7D7CdY/mRBBu9oi8zZ3uh8rrDz5jkJJA5KiP89Dc+X0p3RvbN
JOhI0ils4/gB0StBd8vMEmEhP6gh4+4PkKCTSryI4oH/x+bUk6IfoJW7HEVR
joKwox1nW4L74OyOjG8qeu5wLNrfwjOyDy72S+mHPXGDxCOKJTLxfXDq72jL
R31XwLgb7pWQ+qAtnK1L7akzNBwqf53a2AcPGYbquZA9rHGm5zn97QOrBEP7
UXljUGdxgqsv+6HpDm9Vc9JbdGD7okbsrQHoTrrzq483FNmBy4dJ+QH4XXIo
YSQ4FA05dycJKQ0AG0lCNmhXGEpmeLdcqj0A5a4FmWsTYUiUvcb7h/UAnFze
7AuOj0AqfKrl7KkDIPsPycXsiUEBd+14XZkGoe704JEO6QS04tss38w+CDPc
pXf9rBKQetsxs/2HBiGv3PvR7uQEdPxxdWkc3yCUPNKiCTIkIqIOk2q51CDc
IR5cvPg1EX0zj/H4ZTYIbhvCyR8lkxFjWNX8865BWOxUWzGZSUV9c6zM1wYG
gXqr0KuGMw2lwX+CDD8HwcaoOTHvZhq6M/vLJJmCr2ckpq31OQ25SZ2fGts7
BE8lRRljr6UjuonQMS3pIUis+Sth+ioDdVyb+HdOfggM5r04pz9loDg/kRN/
HgzBPYLPRUpeBrop9k037L8huPvFMy12IwM5eNMNdtrg8fg9GVuXTPT74qse
RdIQLL/gfer6noAa3IpXj+QP4c97a4B9BAGF9e/mmisdAsE7tObVfAISdY1X
8Wocgp/8515bLBCQVW9Pe93EEJSWSX+zUSMimfN8S5/nhiCh1qDdzoyI9jtZ
7DOkDoHuwWPcGx5ElC3A/GDHvyHYvtNRa1dIRBQH6eYbR4bhV+nvCW3c75Xf
/WdZeIfhi1CGlSJ+3vc/M8g4dHYYbrUUshWLk5BQx1t5+6vDUHlRcze9Pglt
8dc+uys1DJcW/xHGrUjo2zt2j8O3h8GGKrwt6U5CL/kIdYXKw2CVLKKmm05C
EnZ/Jtw1hkE3aLWcv4SE9rbK7VLTG4bc/aeDjJtIKN1m7Bbt1TDcl+jSVpkh
oammA+ii5zD4cFpsd5zA0Oefv8t8/IdBKYbi73MeQ9Lr/cWTn4dhTvX+8VYx
DEWfi82Njh+GK2udXguKGFKQdspaSx0G96DM/U1qGFrTMCA+Ig0Dkalq5cIT
DCl7nkndUzoMjKZy5wMtMLQdy5hkUDUMG6l8N/3tMJRZOBdX0TAMmPXxkxxO
GNJsa4k53DoMktd88nhwL+6ewiKtu4aBazx6KNcfQ7nbgWFt/cNQovvEue0z
hvQPWH8WGBsGTlq5t2UkhlgvqAW6TQ2DdYbdaDTu+1LZa/6jC8OgHHvZ7AHu
++c63D4StGFIVnvO55GGIa43mx6h68Mwv9OCIkfA/ew77Lr8bxj6m12q/DAM
mSchJ0WGESBu5/pp5+B+LEv4kMoyAqfvUeWzcF83d7ra7+AcAeFZ5lkf3N+2
c8a2OtwjcKgGM1nEfc6/U+FN0YkR8PA0rO7F/d7JLWjJcWYE1luClu7gvv94
icXstdAI/OX6SL2Bx0J3KS8bL4/Avx9KX8vw8QP6Hc/5ro9AoetO6yp8Pk+7
XCNHGIF71u/+KOLriQaGPO2Xwz8/aqGrh+cznmajJ3p/BMKaXTN+497/hDT/
+6QyAqrDglOH8PuR+iGhOac5Al/ulPOgTNznlGNqck9GQM7vlf5iKobCGf49
ijceAWuNu6WJiRiS5fmptPlqBKSu374x+gVDK1drFdWtRmDoOd9WYgSG4h6k
KOTYjUD0m0BmSjCGNhxeyDx3H4EM2d+2RzwwlBaiCDW+I0BZ8tqz5YghVeIF
qePBeD2de+8b497PGqRe7YrF89eRtGp/hiEdWtdl4ZQReCZW+blDF/c9c+FF
b8IIkDm7FrVUMWQkYS8AxSMw3TYwvlsaQ/tVdM5EVY4AoXar9dxVDFW+uMn3
q24EqjDW4G4BDHFH7jxO+D4CHIxBWl/3Y6ghm8zN0DcCP5XHy/btxtCbxoaD
T0dGYKFtJH/0Nwm1/fZhPzQ/Al5XMKkTQyT0nu01qxV1BJjU/ogHtJLQubMP
mVp/j8Cg5UCqZyUJuapz0rvSj4JAj3zDkTgSEi+I/k05PgpLB9bomrRx/4/a
LX7nH4XO3aWue+Tx/bpXfSL//ChwCjaaVV4moRhd9nb766PAe47uTxgjCdEx
uKcyqI0CYfxM0TaJiLhFDGJm/xuFiK57ikxhRHRZG4JbDEah1OrF++APRGSE
rX8IthiFk7zStocUieirupkaj98oLBLP99GNEdCYk6Lijs+jYKIlIPa7loD+
ZJ67RY4cBbkElm3TNAIS/DculJk2CrdUffr6TAkoIE2DXqx2FOiM6luqqJlI
/Y903oONUehe6VZ9RM5A4vs/qUbQjcGW6uxV56oMJJv6oX0v/Rh4cPB3XY/J
QDod2vULTGNwxl2WLK+SgQL4D+TkHh6D8GBRhbnidLTS4u11U3QMVjqaL0xZ
pKHS49bX1F+NAfayoIkrKBnZ8VakFJmNwYk94dzZ+slI7PQeLm6rMbjQe8Vy
+WIyyhGKXh60G4MWq6w4w9YklC5Zm/HUYwy09t8XEKJPQqFanMdeJ4zhHk7S
YzFIQBaheXRuP8ZAb149m/VbNDrDutqUc/snRJLV9FhYvdEDTVY2b9ZxMP/M
5ubyKgiy78SZrLKPw50pU3PZ2SDguHqp5gnXOJySMPbPfxYMvfvV3oodHYfs
s9zmYfqfQf9bzODEuXFYmNZ1PqUcCm9uCqXflB2HAa/Jg+bHIiGaX/HWqv04
1BHTyK8uxMNfjuGoJ47jcDhu5sFB43jQ32G+2uw8DqxR8b1vY/DzyEhwWoLX
OCQGS6oqMyUAFj7A+jBsHFrC7pM0xhOghunlQEbOOHw4okrpd0mC2WUv6ycz
eKxzo+TBx1QolZ4sC5wfB8U90SdG0lPBL/AWfQ1lHDhEjz7k6kwFYZGNEP5f
4+AxH2dvzpcGb8xfFc7umAA27suv2qvT4O/ig3XroxPg56WYR1pIh44bmbdS
eCbghBlxXpk9AxL8GXx6eSdA1mxOO/BKBsheQEeun5uApzsksJ92GeBtKiL1
V3QCyHvTLqG/GcA1z/HRS2kCRIItrtDWMmFKwvxryaMJ8DSK8znKRYAin29s
86oTIL5+jrNPhADagm7xD/6bAKlvWsvMLwgQ9+JXNYfJBBwIF69R6SaARckj
JtlXE+AyHvyRnUIAmb2YyluzCfhX7cX0ZA8RyOnPJn68mYCEf/9+E8Xx8/HM
D/ovzhNg6YJF7ggjwuY10QdtbhNg/+TZSUkiEVo8A0P/eU7As6rYjztriGB+
9u4Zg4AJeG3rZnZ9gQj5z0rlz0ZPwIWL33aCJAk8Cg8GasZOgIZP09WRByTQ
YLDu806YgKammgpGfRJspJx/sZA2Abxa50l/XUgAkzE+OfkTcEw36PMz3Ac1
SaoNnUUTUPR238K+ThLIGrDsXC2dgJnkqwJyYyS4N/r+nVj1BHAE57zT3iRB
y5crBRp1E+CkbnT6OiMGD3Xml+2+TgD9N8epZC4MVPu1TcpaJ+Cbh8fCKSEM
esM5koc6JkDA+tMP0Wu4t9WbR7e7JqA6R5y/6xYGel3XNaQHJqDZNOFWvhru
qSBq8NPhCdhJfNiwhnvJUDmjzWVsArinHLjqn2Ng0nr4Tv3UBBz3uetFb4d7
z7fDeWoW7//uCvO3HzF4fc+rYs/iBCT6aiZbemCwzCi9fm55Av4mPmVe98PA
6utv0Xu0CdisHvJlxr296p5l8WptAvKz/PdlRGBgK/uc6Lc+AcFDvz98/4LB
xs4TM6StCQjJ12twS8TAobqXr/3fBLTP1ffU4N78+zHgyfJOMtyopEb74h51
vnknej8DGUavPWcaxb1Kv73de3kvGc4ZmHJV4J71KCvgUGUhQ/I7xqzTuHf3
2r9WestGhl2H6L8fxj3sJ37aJ4yDDMoqs1ZhuJf3/R6qLzpABrfRXZ9icU8H
FYTs6D9Mhv/4n/Jewr3N9eb+jY2jZDCR7zirhMdhl+nfHT1Bhg/i4wm/8PHc
1LJ8qVNkUM2dDTyLxzFZ1su6p/HrVzd/T+Dr8ZidF/p4jgzBWwuDgrj/E4Qm
nsefJ0PZrPrtrRwM+OejkqqFyWD2OlhMMwuD1AyV0fFLZHB9VopuEjE4Z8J0
lP4qGVw2M+ey0jEgnKlRPy1Ohluvd9QTkjEQnnwXfEeSDD3jR/Uux//Ps5fa
nt8kAxLm/no7GoPLBrN7vW+RwdC/j2MsFIOCkwlymbJkGNRZV9uDe7z0C3vF
wj0y0H2KPv7bBQMpncY/rEpkyDPj7kbvMUBHnEQvPiLD1vryJOcb3PvhSwRL
DTI0v+8N1jPE4I562nSwNhk0XnS9VtPGoInrCV++Lhmomwz8fcoYtAW1Ra0Z
ksGWl6XAWQoDZWWP3kPPyRA4mDWcfgmDrn03Oa6/JIPokwsfdM5g0OdL8n5v
gddDQ7f9xT4MJtz97Og+kGEoO3Cat58EMa3V2cZOZJj5Zktv3UQC1QO/Z5pd
yUDvIbl9owT3dvJTrVAfMuhMp6TLhJMgtVZMQjCCDBT1PBs2fP/qMZtafYom
wwDbF+q16yQ49DghczWWDOx3Zr8P8ZPAa5z5KEohg5Rt6pUvG0R4uePn5uM8
Mjiu+XPuiifCqbsHRUsKyQCM/Le4vYgwGKhoylNKhohdiIqZE+H+ycKhmSp8
vY39Ydo3iHABfCs+tJHh4G75j6gT97fD1Y9ps2R4sp5Vfn4K93fdyyKWRTIY
Lzi4WjVkwlOW+CXLZTI874BCadzfndFM+lK/ySC4Ly/lrVEm5JWOSn+nn4QN
OwUWlcEMsPnjvXPzxCSkiEdU6eWlg7A0ktDnm4RCToZGI790mPZctao/MwkF
M0EyW0bpoHnoycSnC5OQJdSlOc6VDtfFROv4JSeB3CyyEGueBlvWI+5K6pPg
WtU157g/FfiOjxDfaU1C2en9VjumU+Bew3BXss4k7Fse5xQuT4HIw8O8mwaT
sOvDUwUv4xQQqxisSDOfhM1IgdOP85PBkqH/F533JPD9sVYbkkmCqYgu47yy
SXjaSI5oPBcPHRWNcod5p2CHpvGuCs9g4FY7cPrn1hR0Mb7adZLJD51bW5SU
ppuG2fUDbuu7/ZFYeINK3K5pWD8gelZlRwBS6bd10mWahqsBJ5+br31CfroD
g/2HpkFtcFBgeSEI/TWOC+68PA3Pv39XX6gKRWQbAbo6k2mgKsmOqx37glYO
7TzEZzoN7qr0CocCvqAdJQMXXMynwfDsgLXavy+IZ9P3P2mbaSifG5aVHotF
Gh8pheWu06Bj8Dm75UE8avbMe10QOw1X+JSOaGwmoOyIG4Op3dP4+0I0oOlw
CroQPTb27cc0kAv8ll1lU1DmF9ep5YFpeIUfHBbMU1BKYhNV4uc0uAxAcG19
CooiqjG2L05D9ymp/Q6vU5Fb1eurvxlmwIqudMCTmIZ21LJLHmOages2Dnu6
O9OQY32e9C3WGViyEhSu+5OG3jWvK/pyzoCekvPJgNvpyKzb3eDEyRn4a6oz
V9ydjjRnvnySvz4DDwV2KFPx813PnHSoqdQMhCk1ekruzkQqixNRQTADvyP2
3+A9nYkerAikDsrNwJRMv2iFYSaS2SooN1eZgX03EQgOZSL0V7MmRG0GGq57
we31TCS1Y+trieYMOL0R3bd6gICuMch07XoyA8xbjnpHlQhIiL1tNvzVDPyb
j2R7W0JAGRyWS+VmM/Bg4XaVdBcBnTnA9eun5Qwo7Wz8FY97nPeINp2Q3QwY
jM2ZHOchooP8Uwer3GbgQ8D08a33RBRyxvvYpOcMPPXUjXgajPtcQOgUk+8M
HGJ5XqCZTkQswlYXVINm4PNVR/eNTiLaIf739syXGbi6KyBuFx8J5dfy3HmU
MAPlVWt/na6RkMlDUChNnoFpkasp7xRxHzxzuu9HmAHtvEzdQUsScl6JV/qF
zQDVwqP6thsJiTpWK+vlzsCPh25sZ8JIKCp0p5pIyQxwv390VqOYhB7w8mlE
ls8AxtmmltKIn/dJt7V2Vs1AyNnma6Z9JPSszk23u2EG7Ec21g3WSOgyjeGZ
XfcM5O19LL6Ie3zS8azJzx8zoF5xOG/9GoYimBRe3hucAYpEwrTDbQz95fU2
OzY+A27b17OmNDGUQ8qwcJ/E71eA/meLAe6n681WlJkZyEhjYBIwxdA3ZWbb
qqUZuCzBFSXzAUOOQ+ffCdBmYFXdMu+fG4Yum9x/H7w2AxLXiOcu++Hr00w/
bK7PQM1xzv5+3HsRH/0/Gm3PAGP2y9Q13IOKzJhzK90sxH6kvPnf39f/hrW5
itHPgpLXo/OfcH/nnFpyj9szC3uSKnOZ0vF8MDYvRuZZiFrsW9vA/X1IQsTH
ct8siJ8tn3yShfu6XtlvYP8sFO7YNr+ei6EPjywDbh+YhaTnGV6e+RgSGQ4K
JB6eBYYihdP3cB9PmOQGHzg2CzuogzeccT+HrXaGOJ6YBc6R4RYh3Nf3nGhh
06dm4ebZ2+338XibmStS+cwsfDO0l/2Jj88OF40uEZiFmaOmwnP4fEZ8al9O
XZiFdWQf9Bz39qGst3G+IrOQHeLyRut//pcIS1i9Mgtjn/vHEO7tDw2FSbrX
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
5hePrsL//3+G/wN+gPLP
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{0, 1.2566370614359172`}, {-0.05999991971056767, 
    0.05999999999999229}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.622649574319294*^9, 3.622649578768392*^9}, 
   3.622649608984123*^9, {3.622649647820966*^9, 3.6226496992463923`*^9}, {
   3.622649744666935*^9, 3.622649766634119*^9}, {3.6226499294809217`*^9, 
   3.622649982436509*^9}, {3.622650621721678*^9, 3.622650637417432*^9}, 
   3.6226507070903997`*^9, 3.622650777242062*^9, 3.622652424966951*^9, 
   3.6226524648057947`*^9, {3.6226537952830353`*^9, 3.6226538612790337`*^9}, 
   3.622656014922661*^9, 3.6226561208511744`*^9, 3.622656542774929*^9, 
   3.6226573530717173`*^9, 3.6226574250310583`*^9, 3.62265759314604*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ref", "=", " ", 
   RowBox[{"{", 
    RowBox[{"r1", ",", "r2", ",", "r3", ",", "r4", ",", "r5", ",", "r6"}], 
    "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dref", " ", "=", " ", 
   RowBox[{
    SubscriptBox["\[PartialD]", "t"], "ref"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"d2ref", " ", "=", " ", 
   RowBox[{
    SubscriptBox["\[PartialD]", 
     RowBox[{"t", ",", "t"}]], "ref"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.622407522746675*^9, 3.622407575511423*^9}, 
   3.622407635865245*^9, {3.622657482142926*^9, 3.622657520239856*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[DoubleStruckT]", "=", " ", 
   RowBox[{"d2ref", " ", "+", " ", 
    RowBox[{"\[Lambda]", " ", 
     RowBox[{"(", 
      RowBox[{"dref", "-", 
       SubscriptBox["\[DoubleStruckP]", "\[ClubSuit]"]}], ")"}]}], "+", " ", 
    RowBox[{"k", " ", 
     FractionBox["2", "\[Pi]"], 
     RowBox[{"ArcTan", "[", 
      RowBox[{"1000", " ", "31.82", 
       RowBox[{"(", 
        RowBox[{"dref", " ", "-", " ", 
         SubscriptBox["\[DoubleStruckP]", "\[ClubSuit]"], "+", " ", 
         RowBox[{"\[Lambda]", 
          RowBox[{"(", 
           RowBox[{"ref", "-", 
            SubscriptBox["\[DoubleStruckQ]", "\[ClubSuit]"]}], ")"}]}]}], 
        ")"}]}], "]"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[DoubleStruckT]2", " ", "=", " ", 
   RowBox[{"Dot", "[", 
    RowBox[{
     RowBox[{"Inv", "@", "\[DoubleStruckCapitalY]"}], ",", " ", 
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"Dot", "[", 
        RowBox[{
         RowBox[{
          SubscriptBox["\[DoubleStruckCapitalC]", "\[ClubSuit]"], 
          "\[Transpose]"}], ",", 
         SubscriptBox["\[DoubleStruckCapitalM]", "\[ClubSuit]"], ",", 
         "\[DoubleStruckT]"}], "]"}], ",", " ", 
       RowBox[{"-", 
        SubscriptBox["\[DoubleStruckB]", "\[ClubSuit]"]}]}], "  ", "]"}]}], 
    " ", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[DoubleStruckU]\[FivePointedStar]", "=", " ", 
    RowBox[{"Dot", "[", 
     RowBox[{
      SubscriptBox["\[DoubleStruckCapitalM]", "c"], ",", 
      "\[DoubleStruckT]2"}], "]"}]}], ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SUBS\[DoubleStruckF]Control", "  ", "=", 
   RowBox[{"Inner", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"#1", " ", "\[Rule]", " ", "#2"}], " ", "&"}], ",", 
     "\[DoubleStruckU]", ",", 
     RowBox[{"\[DoubleStruckU]\[FivePointedStar]", " ", "/.", "SDATA"}], ",", 
     "List"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Eq", " ", "=", " ", 
   RowBox[{"Inner", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"#1", " ", "==", " ", "#2"}], " ", "&"}], ",", 
     RowBox[{"Dot", "[", 
      RowBox[{"\[DoubleStruckCapitalY]", ",", "\[DoubleStruckX]"}], "]"}], 
     ",", "\[DoubleStruckY]", ",", "List"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6224076563534193`*^9, 3.6224077641761703`*^9}, {
  3.622657528528535*^9, 3.622657543608132*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Sola", " ", "=", 
   RowBox[{"NDSolve", "[", " ", 
    RowBox[{
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"Eq", "/.", "SUBS\[DoubleStruckF]Control"}], ")"}], "/.", 
         "SDATA"}], ")"}], ",", "CI"}], "]"}], ",", 
     RowBox[{"Join", "[", 
      RowBox[{
       SubscriptBox["\[DoubleStruckQ]", "\[ClubSuit]"], ",", 
       SubscriptBox["\[DoubleStruckP]", "\[ClubSuit]"]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "ti", ",", "tf"}], "}"}], ",", 
     RowBox[{"Method", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<EquationSimplification\>\"", "\[Rule]", "\"\<Residual\>\""}], 
       "}"}]}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.622407781272118*^9, 3.622407781433691*^9}, 
   3.622407853336978*^9, {3.622408309845392*^9, 3.6224083303165216`*^9}, {
   3.622411598146038*^9, 3.622411602312509*^9}, {3.62264923169954*^9, 
   3.6226492349315767`*^9}, {3.622649751776552*^9, 3.622649753231474*^9}, {
   3.6226559667025347`*^9, 3.6226559712224903`*^9}, {3.622657606507635*^9, 
   3.622657647954258*^9}, {3.622657996921124*^9, 3.6226580078813343`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     SubscriptBox["x", "p"], "[", "t", "]"}], "/.", "Sola"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"t", ",", "ti", ",", "tf"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.622408845574247*^9, 3.622408855349718*^9}, {
  3.6224116045193863`*^9, 3.622411607929254*^9}, {3.622649237824477*^9, 
  3.6226492405522757`*^9}, {3.622649754598031*^9, 3.622649755668374*^9}, {
  3.6226559740829353`*^9, 3.6226559773549967`*^9}, {3.622657607769648*^9, 
  3.622657638112184*^9}, {3.6226576758819227`*^9, 3.622657676080656*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
3O403yrsU+N8qo3b/wPgM6sB
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{0, 1.2566370614359172`}, {-0.05999988282095576, 
    0.060794138536442346`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.62265763848923*^9, 3.622657676537735*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"ref", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
     "-", 
     RowBox[{
      SubscriptBox["x", "p"], "[", "t", "]"}]}], "/.", "Sola"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"t", ",", "ti", ",", "tf"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.622657777455413*^9, 3.622657786790279*^9}, {
  3.622657834590147*^9, 3.622657837509516*^9}, {3.62265823692581*^9, 
  3.6226582430680933`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
pagKGMQHSTF1GKGVTofTgagKSM7UcmvLGSG7DjPD3MUq8LMq6B83hyGSa1N3
fn++Gowe7wgWenEOvWrmSHPmrwHawpH/rS/TQVub47MCjtYAalLagkvyGaTa
xFIQr1sDjB2KLo0GaaOSRytlFSE14Ne6sDojUy3kX/f+ydLHGjC6xnZb79BJ
xF9Z/Z//g1ownaYaUvNNEelXSP6I66wFLct8pnwiCuj6g3t/st+Qvr1U/MPm
GFooy1z/eEcdoEX7bR5alkWPS8J41vvUAeUbpbyveKTQz+JVgZ2JdYCivT2O
mUsCiRf7CIuUkPnpSXv3Couhm3edD52aIONzOprng/cj20IDjTjlekCJfWxf
ZM+O0gp6tbMvkJ5N4woz3Iye5WvqP/AgrZ6Y5XOUEcnmKZr3F5Km3Z0WlGuB
Trm11m+bSc/82VqlMk9k50g7fB8mvWWDEmvSP4I5W9CTc2MDoOxbiR2QYAXH
s7J9hPeRDv1XUjC7Hbhl7go8qkBaNPDb+u2coDDjZqimAelDwx2eG3eB0fQt
URdcSPfN8Y++3A22pEfEO0WQTlqVEaLyAeXblKRrOaRdo00MpvYArzS/27H1
pA83zx7ethcUpy5lZ/U3AFrKnYvSu/aB2GmTyN550pqMB7L49gNXscfuaxse
Aco753gGFkGg5yFiKr3/EaANXdzkNiIIZBrj1C8SpNvSHf/GCAEupqWDNy+Q
+aGb0luEhMEfbROuJ15kPF8pYaJQGEwmt1CWbpDxqg3i7htFQMuU8KxgKRlf
i2UuPCcCCkTiXp5vJ+NnfF2yQ0VABPV7U8Qb0h++CsfdFgGODReK6lbI/EPR
5rnJIkCbseXGDFcjoCkE+G/2EQFSp4V9uY80Akpuxeb1KiKAPSnWWkuHNN9y
QvuCMPgx8e30NUfScRWXY68Lg1GhC7L3w0izL1UnrxcGja6IfzKHdNFvXsHL
QiC7TohlayNp8xfd1+oFQTAldpEYJn1u7di7L/uB7alvY26LpDMdeQo27wca
N43bcrc0AUr+vSPM7PuA+Dgs6xchXbhy/ALDXrDgHEM7YkG605F5pzwfeFmz
6GjrS/obTwtXwm5Qu2p0LjmJtKTT2eAmLuCfICi83E2aLWHoSPJ2YPkqepvo
R9LKmj5l4VuA6r7FX8YMzYBSUfJK7MZ6wFLd3PPoKGka97Bd1ywxt7K/Zk6f
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
52l25MnHd2p14P8APKNgpQ==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{0, 1.2566370614359172`}, {-0.004077172728076207, 
    0.0006296586065016527}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.622657787421649*^9, 3.6226578380102673`*^9, 
  3.6226582437869987`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", " ", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"dref", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
        "-", " ", 
       RowBox[{
        RowBox[{
         SubscriptBox["x", "p"], "'"}], "[", "t", "]"}]}], ")"}], " ", "+", 
     RowBox[{"\[Lambda]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"ref", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
         "-", " ", 
        RowBox[{
         SubscriptBox["x", "p"], "[", "t", "]"}]}], ")"}]}]}], "/.", "Sola"}],
    ",", " ", 
   RowBox[{"{", 
    RowBox[{"t", ",", "ti", ",", "tf"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6226583766984377`*^9, 3.622658393659593*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1:eJwBwQE+/iFib1JlAgAAABsAAAACAAAAbP7dfGyJWz4sKA0TcAmVPht45oR+
Qjk/JEsC1M7vXL9ffg1yR0JJPyBxvuXWTG2/gQGh6CtCWT+wkPVejv19vxLD
6iMeQmk/NECUTx03j7/bo49BF0J5P1bUyfhyi6C/JuyCRzjWej9M+XufPK2h
v3A0dk1Zanw/xFS++m3Qor8ExVxZm5J/P/hOfS8+GqW/FvOUuI/xgj8My1qO
m7Wpvz8UYtATQok/6sMTmjRwsb9kuFtTJAyKP7qCxEyfALK/ilxV1jTWij9E
Yv13R5Cyv9SkSNxVaow/+GsaWwKts79oNS/ol5KPP4wn2ccx2rW/xmyUNVQu
kD8UKTsEjWK2v9k+EXdck5A/nAXWbpvptr/+4gr6bF2RPxyFTI+V87e/SCv+
/43xkj9AtYtAbPW5v1r9ekGWVpM/GDYFSsxxur9tz/eCnruTP/D0g79v7Lq/
knPxBa+FlD9Eje7MUNy7v9y75AvQGZY/hCNEnCylvb/ujWFN2H6WP4T6n+Rb
Er6/AWDejuDjlj/EpTGzcn2+vyYE2BHxrZc/tLzW5itNv78ikuxBZciXP4ip
O7maZr+/sJTcaw==
     "]], LineBox[CompressedData["
1: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
5g==
     "]], LineBox[CompressedData["
1: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
LCqMzLu4de0kYcQaLC1SPYP+Bz+TM6Q=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{0, 1.2566370614359172`}, {-0.12265936872760197`, 
    0.06592283493030404}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.622658395444545*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     SubscriptBox["y", "p"], "[", "t", "]"}], "/.", "Sola"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"t", ",", "ti", ",", "tf"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{3.622657802071619*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
1rFFTzPB3KOwiNZJuOfW33xB0j/+Ye6xe9fHROYxiYKJS6SfX6OpcG6SifK5
F+teOzNBj7fMqVnKQtrs5gYNwo+DWU++vT3Cwu6dYoXhmUyImT3b4mfIgvtL
v7vP8gh//34RZG3GglCKq1BwERPuBz8cX3mRhfSpFTr4Tnjk2zemrxcLKgrX
1TqbmJBh/eWczSXreSbFz5tmQvf23CMHilkIuG67/+8sE1fXCLxfUc7C0TP7
Y9jzWMg4u8Kpuo4Fub7uEHchFtR7d0yqDLNgtU6ntUWChQtByuYrfrEwaztw
U1eKhQfyaoWjf1kIwfid+HUs1FzT80wWaET6tzvxMpvJd78vLlyxqREPs4v1
jXaz4BVjbzu6rRGNoh/27lRiIeGgC4W6qxFZGaFqM/tYGLzv9dhHvREvDI89
Pa/GgpjMg9EzOo0w39xL+61O4vj2yFjleCP2pc8X9TxEfBGMWTl6uhEi70Jv
G+uy8OLD69vU840IiZJ9FneUhdLjyS1Jto2o6wx6+eMYC4ueZr88c6sR+9ea
Gm08wULEGvpmalgjZB0EPtFPsSAZ8+jag6hGyLz5Ge5vwULcar18zVeNWL+z
rVXOkoVUiW9H81Ma8XKVeqLaWRb2RPk8vZHVCPdWp42p1iwUrNJoVSxsxAHW
sXnC51n4tvKTQ2JFI5g9PT/DLrBwLPJ2zjlaI5K1mexCkre6FcqzksxG3LNh
qDIusXAqYlynsbURAkYHxxsvs9C+PCP06c9GRG8pW1h9hfgf7tR0vL8R11us
b320ZaFffPsGwdFGWHOvHPKyY+Haf/125ZONeBx1xx5XWZhYlpzpNdOI0YtB
Y4NE3316cfrAgiacm2hsCrBnYe6yjdqTQk2o9Jpat8yB1EVYx6OMpU2gKJdW
BRO9eOkLpoNEE0J0NjTxiP7vyem1W9c14Ue7/EZdRxZWL5G40iXbRPoUP8tg
ol+FMtNebm9CyurzDz4RLSv232+LPU1IUlBObiH6w+MTmisONGH9wfwvvUTv
EhUNrtUgv9/3o/0n0XkhVMZD3Sa4s/pmqESrLQ6S1DVowpxwy60JRH99pHNx
nmkTlvLmXLAl+qjIgtRiyybInunLkiSa/rBs4rZNE1aOXdpQTPZrKuyFvXZN
2Di4LFOf6NbggwHca03YMkRzoJD4zwv9pb+/1QSh+aXmykT3BuVJXPZowglP
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
EAQ=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.20500000000000002`},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{0, 1.2566370614359172`}, {0.2129165515780613, 
    0.3677684201744909}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.622657803672814*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"ref", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
     "-", 
     RowBox[{
      SubscriptBox["y", "p"], "[", "t", "]"}]}], "/.", "Sola"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"t", ",", "ti", ",", "tf"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6226578155672483`*^9, 3.622657849110587*^9}, {
  3.622658248772237*^9, 3.622658254204578*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
e2Nwcxr2l90pFzoA/ZJ3USwZF5157bj7NYwrrWig4D5qSP6HITj/cKBOHFZT
+E/N6C3028iMRzh+v9HPQOAj1Geu7ZkDEnXeEFE1Afng8pC+gXQKO9ovfoZ+
OeA3FIySt663aZ2C9Z/EV8aip65tqT4z8L0Rk56PR3PMayPKX6HfE1KeJKLD
as3Od7+Dv1WOpiOfq+5MzZ/E5frSfpkohy059+kXuHjXTyrq/vZEI/UP1PO3
qFkWWrjb5ZbJX6hnLFcwHW31Fq+f55oi9/3kHZWNbKvq+IsXEvfeOuSWg0J/
Xzh0ipt4SDlEKRexNUVilvESe1WHMnPRiO/Dnho+YlNJLsE8JFzrKOG6mNiq
6MPOPKS5QNhORoC4vDxpWx66oFNBaxckNjSt/5WLEgLPfPATIqZIX4zLRfX1
Alu2CcN6hzf/fp9P8pS5DS8njrJuUM9BUgYnOdErYT11qV42Mgrh+71PlJhR
wi1HR55PGdrTYsTi7427aIi6xCY4U5xYOPk/WypqP7io2WwNsTpj7mEG+hNR
ILRIkthvleFs2r/fN0fNS6WIuUrPKCWjINOc/pWy4KOv+mMRM/qIbL0c5EM8
tTsSDXb8POuxjlj7tVFaMFI/euhLlyLMb+xtN0cfracXxG+B/Cz85BaDxZOS
9PVVYP01P6MErNevFz63De6XPMKfjFNPJohY7iBWonhGZOKWNG1rvl3Ek/qo
kIa/D31I4agTp69wYNKxmf1eRfG9xE3Pwo7m4Z3dRvb5mlDPjoGufLzGwDoN
aRF/PzO3tRDPlzv990Ib4i0OcSjCIxs9V53VIeZPCXItxk3JQebfdSH/0pNK
DFwgFHsvfD/Ed6QqkIGj/DJapA2Iq5uKGxnYY7qYr8QQ6pviMsvAVg5Yd78R
nH8sfTETa/a03uo9SFw7+ouXieUM/6u6eIjYo8RtgoF5Kz98mzch7s/hrmTg
8U3ft8eYEr+V63Rh4LYUXtf1ZsSui3cKMXDJMtGCcnPol2nZTcU4wV/+/cGj
0A8fxwSLsM/MtnWvj8H9los9LsB2Z7Xt3Kwg37rGh/Ox3kuTZB4biMfNsTQX
Kx040Us5DvufCpvKxoJVF0WUT0B+K4UF6XhK2du05iTUA0fz0HClcELTu9OQ
D/v4fWk4NSCL+7o99FeofnQiDpgt1RY8C/2UqM2Jwwd728tVzxHLvEzUvYP7
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
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{0, 1.2566370614359172`}, {-1.9984061914168905`*^-6, 
    0.0354496957648468}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.622657819691636*^9, 3.622657849586446*^9}, 
   3.622658255016217*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", " ", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"dref", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}],
        "-", " ", 
       RowBox[{
        RowBox[{
         SubscriptBox["y", "p"], "'"}], "[", "t", "]"}]}], ")"}], " ", "+", 
     RowBox[{"\[Lambda]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"ref", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}],
         "-", " ", 
        RowBox[{
         SubscriptBox["y", "p"], "[", "t", "]"}]}], ")"}]}]}], "/.", "Sola"}],
    ",", " ", 
   RowBox[{"{", 
    RowBox[{"t", ",", "ti", ",", "tf"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.62265842622893*^9, 3.6226584318969603`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1:eJwc2nc8118XAHAksvfeWzZJKjlICJVkJcpKkiRUlJDITCghI/0qlC0UycfK
3ntkj+xkRIWee5+/ntf7dc4999xzL77ffo+Q3Q3jy2QkJCTc+0hI8P+67A77
uIReUD+4Z1db8cAa8HjNBPpqHQZnP5Yhbq41uORL566rdRLc2szqM3ZX4QHp
q1lprfNAO3s0t7V+FZir50X4ta4C+3WT5qnzqzD0+okmh5Y3HHIr3S7w+AnA
atfOohUKj+yY+120foDDpwvnRGnDgH3iaLQs1Q8IszLtVe4NA8+VPB+J9mXo
fqP3zdQ5AsIHNx51X1wGp4Pys3ExT8A69UK3g98S6Env/nv8MwYsrS5ZX2tb
gJuGTRzMWgkw+sxUIadoFtRP/J5NyE2A7OXF4qcPZ4FWXaJUiO8FGLPmem6c
nYU0+YdWilsvQKmgm0Fh5TsMMh99ZZSTBIyBRf1Plb7Dfy6msbp0qRBXWBbx
sm0a9l1dvE+jnQozMbfNn76dhhuXHzq23U2Fga5SHTqfaVC7mH/IfDYVvvZZ
sz6XmobeM3SDjtWv4NyqvQhd5BTQHPjK/8j7NeQyBh7kvTEJ7vJWlPp5r+Fz
cUJa2alJ6Jde+0H3/TWIZEkQizKTkCYqVBlr8gbu9z8Z21mcAA32+/Zv5d/C
l+CJsz88JiCNmdXwquNbuFvfPcZpPgF0DJnKsslvISDahrnnyAQMUg7sLaJO
g+xyHRkK8gnw/K2cUTOdBseEq/xOJ4/D4EZTVAhvOlgukeQzBo2D5qqdt+G5
dPAf3N3jeH0c6Bei9Lsr0sGXI/V6A4zDu2+Li5OJGVApV5rksjAGjAMPe9I7
M4Dr6YhtZd8Y3O7hLr9G9Q7MNw59T6sZA+1WvSdrt98B/Y0saeHUMRgh3iju
MX4PN+u61Bqsx+BA1ziFeNB7OPP1a2L0mTEImeH/pvfpPQjwzfZ1aaI4XcKj
SP5M0Lz6zLRaAsUFey/kn82Eqy3PtG7woHoHWBS7AzMhsC3LNoYBxS0fD3Et
ZEI/FUvx7dVRGL7emKfGnwU2UolefsOjoPSA8tGls8j7iEK3hlH4lv5A4e3H
LJinCPSleDMKip/L99bPZ4GD7YWJ9JhReNT6d3CeLxveLLV5Sweg+MatIIXA
bHAti2nstEfxfR8sz33MBuOcOPU1U1SPZ0X+9nw2/IqgsP+hh/LlZfcm8OWA
U1JY2Fc1lK/lPPjZKAdSbpezeCqOwpBpeu7IwxyY34g4+1t8FBSuTgWSfswB
GTrXl+f4RiHIR8hSdD4HbvefN33AOgqDTy7K6/LlAn0PR7M/7SjIv04kdzbK
hSCaBRujvaMQWNw/EPEwFx7nzl5f3h2BwQa23NziXJjqen/u/O8RkB82Duyc
y4Wb3rQ3n6yPgNZWXdZd+jy4qCsi9WRlBJYeOHLQSuYB4/WSSbOlEYin2RuQ
rJkH8Z+DKabnUX7s60W5C3ng6Hdu59DcCCzya5lXeObBoUCGQ6dnRyAuY6zy
bGQeqHs5iYgjayn5yUym50FRH+fhcuTFz3xxnpV5YN9/dJEV1Xt+ooyUYigP
jv6cKpVcHAHNNkuXuPU88Kt2FthaRvkWv3sl6fPh10Rx0oNVlD8Rp1kqkQ9K
mo+Lqn+NgIaLSpaBZj44fbr5o+zvCCxsdLMPW+ZDH1dY7zXSUXju5/HA1TMf
stKYV1spR0GDinnx3+N8EDML6Z2iH4WFmDyz6PR8aG6Wos9iR/m8ZyqFK/NB
Me26kogAistHPD+xng/vm6fDeZRQvESKtI+uAFR0c9YS0H1qHG+45iRRABM6
E6+rdFHcjEIz3LIAuJ/bmdLZoPjYm0xezwKgJ8t7KnMd1bt6nD3ncQFMNZ+O
WrmL4vf9F9orCkC1/p6JbfwoeocCZnaDBeAavGZFkzEKsVFfKtbWCsCnnCTb
5BOKv/4Tyy7xATzPrmYSg6PwrNFTw+rxBwhok/Z2YhmD+oblE9fTPkDWSYpz
HnxjsF3vZOBLfACpO/Q+X9HPz+U6K7PUnx9gSnRR7NixMVCp0XaZMi0EKiWd
T1eujYFzdfnNDddC8Pf1nH9xZwxeVqneoQgphHHzksOMgWOwr1ImQLK0EIKI
lJjy5DEY+MIa78JfBL0Gjz5xdI8B/ZfI5PuHioBBo9fx5MQYaJXtex1pVATi
0TWzH1fG4H3pdnZeQBEE+I4W6tGPg8/Hqer1mSLoy7rvJW44Dvz5hT98coth
U2/2x6HOcTDOk9t4XF8MkdMhdlOT4xCcm/EnZbwY1uJOelVtjMNKdtLeSpaP
UEM3FMPIPQGV7wN59np9hIr51UOjDhPg8MZE97HGJ2itE618RjYJ7+LWU5I7
SuCz5cGRcxZTEDFmGdK6WAI/qcssfNymwHV/5c1/lKXQE/P475eQKVD+/Fjb
Vr0U9EnD/wsumYKKEfF50cxSEGyi/MHIOw39YucPZgV+hux9TDozk+jvQ+GX
ptJDX8DZhOoe3Z3vcMDp+PbC6Qqgc2WI/PZkHmyYBWWSLlTAn393+DrS5iGy
bPuCoVMFzJZYttZ9mYdZxuLPWQ8qwCfy1eEvC/OQVCJ573phBTwruRnarbsA
e2no/yxzVULZ6uA1GtJF6Mvu3/w5VQkVmteFq72XgNyiSOK/n5VQZX2kIy16
CZTIYsyNdysh/rL239h3SxBhZvCxgKMKRrJWf8cNLIHGvy+3PfSrIH7lwo78
kWV4Z/R6Yz23CqTIeFend5bh3tr1tc271fCj6G3zjN4K+FdpsH0KqYa9zfIK
a2YrEBjNcsjreTXcv8ITRHd5BSLkS+5u5VdD9AvGtOsPViDlGjnZ79lqoPJv
fzlTugJVky8Y/5jVQKg3+RiL4k+g7q6T3Vb6CvGatKGEzCrEFwo5kSzUgrIx
l99/l9fBVt3O3H+rFpKsKoyPeK2DVP1/OiQUdWD8a4J6JGwdvgyJiJEI1QH9
IY8cnbx1mCATn/hnVgcDsfa6oX/XQfaslNW/qjpgK0hQFn66Ab8GnQ382uvA
PSzpPl/aBlQ4ZB75N1wHFdmyYhwlG2DsJcP1b6sOqDtOj5CMboDXS7neXbl6
SO06/zZM6hdULSkZ7b6oh5FWkXRp4hdE3PEA34x6iHpjZGDf8QtMSQvldovq
4XTUzUq/yV8wy3qQbre9HnwtD0pfpNwEOrVDjTsUDcBJXnrh+qlN6P16p+Q+
awO87JzzCbm4CalnPmXsCDVA2QclWc8bm6Bkfzh4R60BWhfUdPKjNsEi7Kj2
jnsDWP3WlrravglCrD4H7vs3ACurK+SNbsJ8cpnwzuMGMAqYvZy9vAn384+R
7mQ0gHvtbnMpzRboHPVd8SlugH75ePVqri1g/Fo+ul2N8kM2RNwltuC/fijf
HmmACinNnALNLXCx88/2WWyAT/9NNh89vQUHFyuStn83wKFQe31Lyy2o/6d5
b5u1EZSlQyNP3NyC6NAAZx/hRgilmpCj8tkCS5bq89vyjVD6783YmUdbsCSu
rbqt3wiDb2qen0vYAneVnImn5o0wxQCVt15twa8TnI+lHRqBO+R1Mfe7Lbhn
GnCo2q0R/gx8y1XP2wKSy4vjlvcboao2+dpw8RYEeZpFrIY2QvoBKrW1si2g
DqxQCXveCN0SZ5rvVW3Bk6dS40KvG8F7S9LBo24LWF8/Cy/JbYRYvbbanqYt
SCjYPXi2rBEUQ1/yvmzbAv4qp7HZ+kbIOVim19S5Ba87OsP8expBL4/sllnP
FkiOqx3knGgEc4OqNLW+LcheSRvNXW6E1nwLprv9W6BEwhSm+7cRZngi5qgH
tuAjwz3lUcom+E/Fy3gBxdUEpkduszaBqpBZIwdypdyZUHqhJtg6L5cS0Yvu
R73kQJpsE1joulnodG9B0ymRkWNHmoCcxjtMs2MLjKwfh/ToNMGAc8KPuy1b
0OOyqXT9XBMIXV879aMezdvHdpjcpgksP9K+TKzegtHwpuAklyYg/Ui37fNl
CxwSDyopezeB3GZRfBSa39z7l9+agppgxMSxrytnC1xLqYLtY1Bc8ZaBdtoW
rDV4KP5NaQJ7savvR5O2wGtgeCgmswk84qf6X8dswc6s7iOpT02wYu6yGRm8
BQFb+QpVNU1w94TluZf3tiCC41HQz+EmOHb/5s5+2y1gkliRD51vgsKsB3v+
M96C5yqWg4KbTVB/1ffdkeNbkGoqJ2/E2Aw+R4p7m4S2QOxy/MB33mao7T+1
U82wBe89yQL99jfDep/rnm/bm1D4tLc/R6sZPi0Htl3v3oTDrzUe6pxphqSO
n4Zz5ZtQXvBeduRCM6hwuAqEZGxCfYdvAN2tZsiivXRYxXsTvjFIyLikN4Ol
+sreaMZNsBWI7t1T2Awcnuobtuu/YEbur39iRTM4a3saOvf9gpVTbT2NA82Q
v9jjqJD4C8gj7vjtp22BOWPXvdTcv0B6X33njFsLkFjzBV37vQ4hapI3In1b
YIuBnSS7bR2m3EJoVCJaYLi3z/zK23VIGtDTDkpvgeWLhlFOZ9aBPrOhSGSk
BXicft6LTFlD+zXF2xi0QukLTftNhVUwDJA+uO98K1g0HDNrIluFjOLwjlzH
Vujyc2J82f0T9W9I/e9BKzh2nu+09/oJnSvN95I/tYIPm9CAZOUKmlfrxUGx
Nghj9wCB0mVgrJf7++BAGwQ7Zi/02S+Dy3Zk3H7NNjhM/2LjJP0ymv+Zdi+r
NtD2P0l95/ISuq92TY6nbZD4+ofVa75FKFt0YpYiaYfP0P79QMkc+vySMLZD
0Q4/mG9eXHCbA06hhpwOuna46BjYn7h/Dm6Z7jfw5mkHnziG3JnkWZArn3tY
r9IOJ9N08yVivsPLJ84bjtfbYb+2of7NjGl47yL/qtajHY4JfLUR85iG4pPr
huJ32+Hb15HvqerT0LrH9830o3awDwoOmuybgt070eccUtvhgOBvLhOWKbho
8ynftqsdGFWsq+9nToDzsfvWlQPtUPDLpN7pwQTc5taiEhprh8LabL8f6PtT
ZHeTzdhiO1i6CY5UUExAud4owyWKDog86rgqdA19PlGkcLU63AF6wql31A3H
QIq+iasMOmDqiYGYuxT6PLXw5CuPTgc0rgZ2MFGNwem3XHxDxh0wOznOy/5k
FHy5ZJvPu3QAr7x275GYERghNZEyf9kB+35LzF8v+QbJna9mzu7thCQno+t7
bw4A7WM+72iaTihcOffYQHMA7uom0HQwdQJrP+WfNaYBMCuLUjDi7wTBbyeD
Lhf2A2Oa393Thzqhxs9kJ2WnDwK9rekNrnYC70IQi3pqLzgLcqlot3SCkQaX
Rhh/N/QPPqt/2NUJ2qSmRXlbXaAby3ihegDtD+5ObF1dIEq9z19rphOi9hZ9
jg3pguG1Xw0a/zpB48FKodkvVKeu2/qYYhfMHhyc2xnqABXXqCCV2C4wStz/
5F1MGzAepWTaTexC3x8I/nun2mCe0jfp639dsJXyyTtlXxukvLr2wSSvC/rP
GY73+rUCRY/OuHtTFwg+3TRfuNkCfUd31HJJu2Hr9za9kkMTeFE5r0u4dkO7
8U8NnwD0OaB3zO+HZzdUjDZ8EdStA5nX5jQf73XDLB3XDC9tHYypnRDWCe0G
TguxCpG4WtBzEzRyeNMNRtslZ+7lfwWuvt7M1MFuSP1lN7CxWQ2lb47bc+n2
QLuJlPZISwW4K59pdjnVA1E52tyxrypAqsbyYMW5HvjEwtycfKsCXkzepLxi
0wM2z6oOpPJXgLdwamahdw+QSB7IKZ8tB9XU7bUzWSje5Dj93aoMVuT3Wb8u
6AHGzdEyfvoyyCBYan996oGx7JONi8Rn4ByVik/+2gN5E1fGjcU+wybfebWF
EbT/oJ6f9mYJFCcWBT5i6gUSetVHBz99BFfpyqUBjl6ouC0nzufxEcQ/N5vJ
8vdCu+N0e5rcR3g+OCnZLdULbt61BW/Ti+EWF3OLkHYvGB2bdbrzqgiU41zZ
vtzuhdRwqn3JRR9gUfyuL+P9XrBZkEnXufcB3hQHfbd/iGw0/C9N8wOw9iaV
UEf1Ql7pSmpkewGsszZZW7zrhXqSvzK0m/nwIUYibW2oF1a0s0NHHPOgV1lu
X9tEL8ySK7XJK+fBn15l5/dzvdDvFxtqSpYHWjxacrabvcBYIc0mp5UL7a+t
iluZ+2Dl3hUux/ZsWD9hz/meqw9Sv544130nGzhmr94NEuwDt5Kvw9WC2XBR
5o66mlwfKNgPLVDdyYLFwujadyf7IM8z09ZRORMYzeMlg4z6wOYnfTTj9/dw
4HdKmI15Hxi9FdT69+I93D2WdZrjch+QVCSfeUTxHvbV1vYG+vdBRb2tt/5C
Boj2/Z259LEPogL4n0lNpYGeN9nJo+XIA+l57OlpcI2HKpP9K/IDssFK5zQo
uMR+o6WzD8Z0+ouOrL8FjVmFzSPLyAwC27v0b8H692VKdrF+MEoKbPl98TU8
52mXaI7ph3qVv2J3DVOBN/GxW3BCP/ifeW1QwJ8K/3EblGil9kPe+v6nGhMv
IYerVr8kux/iD/Z94Zd9CbUcZdfT6vvBRpXqVHRtMhjGeRfbtvWDXsP4N//r
ydDJfugfb28/ZBzbpxHPmgwjbAVRTyf7wenFE052+yT4xZLxwX+3H0SDWulF
SRLB5+nl7aN7B8DJ43y7TPoLIGMRObFJMwBWvCEjVKdfQEjM2OMC5gEglxu/
QawnAD1zSu91rgGYsT7j8V9iAjyLviCwX3AA0uLHtAb9EoCbictpSnwAnAu0
6ERvJkBqVG/eS9kB8Bs55Z5mlwDijM9+WyoPgA5rsa6dSQJkPTmrxX50AB4r
dWcf10kAJQaG8A70e6+06EC2sWoCqNOH8eqdGQBKccfpFt4EMKP1h4PO6Pek
WM9V/5l4+BZ+LGTFbQD8mZ2Hl/vjwY7mb3vmnQEorJjXOtsUD67Ut+2Egwag
giCl7suNh0f7XIIYUgdghU/O7dideKAN2d/amDYARgWj48lO8RBD+Z39UfYA
qFob2lefj4cUCruM7dIB0Jg8ekX/aDwUk1s0zfUMAGP1ucnOP3GgFsjG+vbb
AOhpa0dPzsVB1Z4uK5vJARC8TSfyoj8OWslOL/euDEBUlN3KUmEczJBoM9XQ
DEJFaGHoslMcsO3Im6doDgLJ1TLiVdlz8IKA+9O6g6AhNnswPe05fHvQ/Vrm
9CDY3It31ox6Dm8ovFdKLQfByMDaW9ruOSgzVoX2eQxCKmvO0SckzyHemDWP
/y6qF6U/tT4TC9vPHHsv+w+Cv/Aq0d8cC9VcNCLrEYMQdeyPDE1cLBiLmJQx
pqH6Cfd0kkRjofhy2oR5FuqP5kTHbYpY4M7Y2veyANk2PDfj+zMYl0k2lSXQ
fq/ePP6d/gzcVGaWT/YPguAb4yNxAs+g20uVLXpkEMaeSud4/n0Kqp/DjvZP
obj2D3qP3qfwD+RDHH+i/s79NfgQ+hQiT3oJPaQeAsFL6btOUzGwGt6o28iI
bNMv5/kpBsxaeV2ZOIbA39zcyi48BvjOVZa+FEG2Gsyol42BLCtqkzI1lK9c
s7VmHw2ML63u7jk+BCRSLzT05aLBczwnVf/kEKS+/xqitxkFao7nlvpN0frA
NieVoChoupH0aMMV5RsnPL8m+ATkCpaz1G4NQcVJ4ysfUiIhZl2j6+E9ZEmK
9xTckWDpPS3AHILyr1x7XkP5GOYD5ErkXiHvVxxRJ8Jg3/OKhStdqP7fqWiO
lCDon6ejOTQ4BBqqaqxhw4GQDhekKMZRvuejzASuQNCZ23B6s4zqXyPJqgkO
AHb14yEeG8hzkrmkpQ9gOiYqXWsb1SvQoZOc84fC78O1THu+AYnjnwPFbP4Q
qCY9M0aFLDwgfui0H5hEe+3NY0Q2XOrbpvADkZmvon4c38C/eHmu6IsvVD2x
secTQ37Klv13vy+QTMaOnddA+fxjRzVJ70P7ocl/kroo3txhm/fRB15GKAhs
nULxAMvMRFcfUFdpsn5+AfklmX3IyD3wCSUZ6ryN7HTCILfhLhiOnPrz6j7y
8ZN++sF3gedAItfNQGR7pXJpnbtQ+u2gBUMMcre63kydN2zKX+sxyEZWe3Hu
75AX1AZ+WucuRN4hTfB+4wXPB/ayzpcifxb6dM7VC5QfphqH1CPftn27sdcL
3Ht72momkXlSptyO34FlH43GY9zDQDJNwxA7fQvKOx7P0Qoh97Arp32+BY/F
h/Z9k0AONVupir4FMu23dO8eRJbgjv987BY4i2TWFBshl1jlLER7wkwDGyEf
jMwQzH2fywOejm9+DnuMLBnO3DjnDhq/Bz5NP0UmPxYqXuIOiZIpBYmpyAPT
uRam7mAULJ5GWYpsmddd8PAmlGofejy6iDxfHLkccAOuWHGFHVlDVlBpWKO/
Aayefx/F/kaueTS5+MIVbrwm/A0oRoAk1a68teA6iJLpeX4UQM5TcMqYvQad
XFI3mcWRySpYEryugZ8iret1GeR5GddXVNdg0Kb9ishhZM/7Z0cVnOEJYXHh
iTFy2ZqzRpwTqPUdsZi3QObNdx1WcYL5ZV7TE5dw/tqXiwNXQJt//PTfa8hu
g0KZ4ldg9WC1gZk7jrcLM3c6wstTb/XyvZBZh438/R3hj89VrStByCoht3S/
X4b0ZwZQFY48E8n98eVlMMmSVeNDn4NJRhKOh164DGQ1DIe94nG/DLVj3Jch
d+jnwa4U5EeW9O+GHcBqrUtJ7i1yr7Fr32sHoKYplg/NRNZbMg287gAOR+7u
h0/IKRXRvdQOwGRsJf6iHHlWd9d1xB7Kr6qLbNRg+xP6Rfbg8kBQ0KgJecpo
IDTSHrgSyPgyO5Cb780/d7GH2rwpLop+ZIuy4zyG9uBZX8tuO4K8qLC1JmsP
QmMZLGVTyCZ1I3eY7aF1M4yRYwFZ+SXZ8992cI/hOp37T2Txny1jE3YgKXGG
umUT+TmLu2SrHfSqK1JK7iLfJf2o+tkOHpqxkD8kH0WfR/zyB97ZgYLrBskI
NXLtBstYgh2MBPXtqDIhn7Z1JAu3A9WixM1lPmS1w4bjN+zg7KjXUocosh21
M42dHThTmU0WSiNf1PAONrGDJGvGtruHkSPILgketoOi4KUaaw3kGXr+FCk7
aM1vLNXQxfvHGgGPHXwfSs8TOY38qedjCrUdkFAEpVGYIjso5tRu2QKXgl3S
3AVkL1p5pmlbULKEmGY75O22mpQ2WzAI5A3JvYpsYki29dEWHHJ+349xQ07j
jdubYgv3+3s9bt1BNuI7f/uBLTwnK7xq4Yus9GFXzc4W6sxcTfkjkI3Zngnx
2MKYv4EB6VPk/wobtlZtYOu9pOZUAs7nt/1QZwNMPXsP1aUiq7puiyfYgNS/
CZn36ciCLKctr9jA8f0Vwo9zkNtnrh1RsgGrc8mcbkXIWfRf89cuQWS6OblK
NZ4nuVL77kVI71D+w9mIvCikunP3IlT8ZVr5244s054h+dMaVs80D1WO4Ljp
RlKzFZhtaXw49QfZbSno+0lLUGV6YhJPMgYkWz1W5S/Pg3ba/TYqcuTVzfyG
VQuwarf8ukiNnJpc8znGHCJF2fILOJEXwTKn0QRelOyREeVFvp147SW3CaSf
Xk2LFUB2kKdJcjkHFV5tSV7iyIbtbhpcxrDaHBqiroy8nUc/ZXgGdm299uQd
QvaZzVWTOw00m46+QkeRAw2a9HhPAWeE6e8YdWSjxbldTkMQFdL2JNdC7mcv
YxMzAIVipR+3TuD6wdQlGvpwzEDI+bsesg1znLXLSdAfY5i2QN+DSQR5B/My
9MDs1u6lxjPIMu8OP/2lC3bUS4NHzyF3M8p9N9WFGy+HTLPNkD15SDtrdcBH
ubGd3xJZz6HN+6QOhDR8MoiyRjZ56zU1fAKeXUyvJbVFzlKZ+PfwBLxai9X0
cMDzEbuVevQE5IQElk1dQS7zvHCH/ASU8nkcMruG3G7USzGiDV5CX95+dEVO
6tvWq9cGFTFKVi53XM9l+mqlNqxLng24ewvP/8QSaYM25Mskrgx5IU9lu70Y
1gZXhemLx3zweUxUfu1qg4yyfEuKH7LFXoZGmRMwf8j7KMlDZE6FONPLJyDj
aPU720c4fkqYJP0EOAIdZ3UosuTGsvbPEyBy3PyR6GPkKKeSKS0dSNFfsPv+
FJnxwA/jTR2IPc/Ce/0Vvj9Wv8/39cDY2jqs9Q3ut1ZjelgPGG3Tt+QzkMe2
4mYOn4RWh5+O0ZnI6xF1EdEnIcLpaM9qDnLNfZ+pCXQ/LkHHTQrw+peurTL6
QOnWll9UhO8/+Sefqz7UeHAJcpTgfp6c+vJWHwLu2Ed6lSFn3FqI7dQHjXvZ
2wMEcgS1LN2aPuz6bjofrcbzZMt1pDSAsgDNgaRafH8C+8ZpDcD7UbjubgOy
6I2ifXsNQCWsp+hSC3KexdXsRX1YfywgWtmO3y87h/1XfSiIvhoj3I3fp/6q
4mN9cIv9QBLYh8x6gZJPWx/kEnZcpweRraRl2uZPwmKS7rDOCH5vS08HfE/C
+9Rog4xxfF+07ef3nIQrb4ZKqKaRXaaoKG7pgWiGmOS1WeRfM8M0fbowkXnj
efMCnlcA5YSELqTmlpDL/cD91qUNOunAxQ97PJ6s4vdO4Wvx4gTwfjw1vrKB
XGoesFOmDQOlcWeMfyM3n+nw7TgOJlXSMmwk4+j3BZ3fmy5NMOg4N/2CDjnL
0Y7k4xHY15N8bpsR2SL501NTVajt/15pzYrc3Z9TNX8QtMbupQjyIGv7PC4g
VwTVH6/N0ySR/ZW0uhX44Nfq0ldKGWQbr8yTHSxQ+OuQ8lV5HDe+cMtmL8jv
NjHKqCBrBPaGmv8pXyRl93t8GJmk6kqRAx3xfq/N0rIasuDoCVsndkKcbr0h
/ziy0aP5Vj1hwth9n8SADnLN+riAhhjh18cbSKKPHP+NX3NLgshSUxyXOIXs
cyrwsocU0f/qhPoZI2TDRg3HPBliL6Vl4u1z+Lyh4gbpcoSSi+tWshlyfw+z
hIwCcbEjwPTreeS02+66EwpEuEpcwaIV8hiXe6mnIvEpMZOB1QbZ9c297XFF
YoqkwuWoPXLxbvcVaSWCybG7wc4ROUIvccZIiVBvmhUPu4q8z2+x86wS4ayw
8zDfBZmypnReXomIi2Ua77+BfGE0/syCIlHzR0ydxAP5Bvvzu4GKxMqlI4kS
t5GLPNhO7ygQvF9Pb532Rha59fSsmQJxUsre9LYPsswwwSssT9x+cqcg2Q+5
lDy07KIs8d96OMPXAGRzd4/Hl6WJtvOpLotByF1R0aeP7Ce2ywsbWEKRh7PU
aMbFCdPQ4Yd2T8bBP+jpsm+REBGw/HMsNAbFVabukA3wETnnKNTzY8ehYu8V
93OMnMQ+fvmtf4kozi5yaJ1sH1Fa4O+SnIHP/2D7Qy0VzHDENtRk4nnNhZcz
swDL/XfiiznIDpWGvPu5wEW3c+xIEbJyLf9te2FIyJo5ZvcJ3y/PMpeUGNQy
/X0R+hnfb2LAWosECHwTMe2vxO9RTLH6rQwYaqoW/KtBdnGfM+qQA680QwaJ
euT2iaB3jgrwlsbW5XQTstlv2zYDReh0u9VwqxX5Dc3mFzYl2O0JFU/uQA5b
C/KrUgLpoykPa7pxf+MUg2cOgEVqwdhCH55nfpcQcQAC99YdYxnC7zndLJJR
GfKch14cGUF2/LLGrKkMw20/Nm3HkbmXmEyMlYH6ILlp6BSyTqb/Oy1lUHnB
WZD3HXni69wQszLY/ZNh6J9HzmCZJq0+AE8cNF3+LeH3W/O6zPgAlDWYNoj/
xO/XN+hIjRLMyjmLn15HLrwcIcSuBKzPfB/e2kRWLQozR+fT/B0zlvQHvzfG
yAV7BXC9mH6sZgf/vNWl5FTJwYvqzy8WSCbQ5/WusyfCZKBOsn2TmRw5an2i
U1gK/b6bMjlCibwymXr3sQScsqBjCKVDTmWvslkWgjydl07rjDhe9ZdxjReY
DypWXWJF9t8arItjh14m01sqPMg2bTEjPKRg05Q0NCmJ1zfvEousRFWJ3MEz
MshGplln1HkJsYyKyFJ5vH9zeXCpEDEfOKUZrYJcH11w+L0kYehxO3H7MPLY
eGrSujSRa7tv48oxZLd3+fpc8oSnukyGujby7K/gHlclolemnPS9LrLPWafT
pQeIwzxGF9gMkPPajtvMKRNJVBOF/qeRM0Ir1P8eJHY3PegXz2JL724tqhA2
M3udzE2RLc4typUfIqq74yqrLPD5OOSUr6sS4tX7eeSscH6g5PSWKhGS/9kz
4RLyFuHDZHuYmH95qpXcHpmTTOXNm8PEqchRCTdH5PiFtNLqw0Sez80HQ1eR
Jb/sFys/TDBf2zOkcx3fRzYz57PDhOf5WOUCN+RP16326BwmenUlIvk8kStc
RdO6VQlVlZLvIXfwvDoaczVUiURRA831u8iMqtYR4YeIXebhF5d8kfUeG8oU
o/OQ3lhvfIDc7kHuWnWQqPpBclolCM9fu+NbvjIhOhKT/ioEr3c/JvPoAPGo
WZSULgJZtcmTREuJmCsttvR6gvu96PJ4RoHIiRukO/Mcz1PHUH9BmmB85HKl
NAH3kzZ7q0GS8PDcrRBLxha9dStSjFA9K+y5/Rrf36yxaCUfUUXtPPguH5lk
T1tw2FS56O+/B9iKsD2cXh5dUQ/+/vix/yfsd7GUl/aCYU2+hjmB30/HMgct
B+QUHH9RVYXncTbPcYoXmF71rMnW4n62NaiPCUHv/d9p5C3IGmeqtk3EQdUl
nMStHd+f3sOBRElItOSzHOrC79dQtjxHCnb1cj/o9OH6b8kjQmTA5pAmXcEg
nk+yCZWEHFSJdTnyjeD8VT8iRB5EWS9XhIzj+z3/V95EAR6RbXKtT+H3d+JS
b4MCzK2EeFyaxflyLaPcilCqMf05agHP/11VlqEiRERpklct437GXm3aKIL1
WLLh2k9kr/CTBywVQU7hzzPRDXwevg29Q4ooz2zYdAu/j6wil98K0NFWIBb8
F/cXNuuRqgD/CTC4ftr9/3tojpdVAM8b14rnSCfRero0sePycIKo2+Xei7zC
4bj0WxbYGUR1Dfchk1Q66D2UgdmL/k/u0yAr3AxzHZWCkpxvfTn0yEaqJ5dZ
9kPYrqrgGBNyu5+Ur6AEWJ2OdWJiw/mVmTw0YrC7dOq3Bw9yFNeIQ4AgtB97
r/mWH9dfVVmU5YVXjynCeoWQNdr61GU5QFuW4D4sie150zKdCkJdFNR2lZH9
RQ12ZEkJy7KIQHlVbIcvC0M0hAztXLPNUVzv3eSPAyxEa+Yr62pNvP5g//pV
PiL1787bdW1kwXeeSxJCxE0Dy2UxPZwff5DigQjBusDsF3IaecyHuWdagpg5
cqOu5CyyjcsD/bn9xMewJoYFE7yeL7+tXpoIGZSw4LVATt0SMXkoS1hKBaae
uoBcwXK6iVWekL47Nut7Ec9z59UXdQViu0FNMc8W90OpPDasQLRyJXiPO+D9
hhP9HRWJl1c3Kpmd8PwsuqT7FQm3krPU2tfw/XRymygpEVpUOca3XPE8k8Xe
eSoRLOepE9NuYhNb2ylKxFSG42SfJ74PItk1X4ko3qqSpvLC699RLGUqEcF6
Ap5H7uH6yh7lkUqERfy9smu+uJ/E1aLzSoTUbB958gPcb1zcOp0S8feQ8qnW
QFzvesb1LEWiOTgq9l8wjtO1OBxUJFL6FocVwv8/j49a7xSIGxInxe0icf4G
rRKVAqFx563r02g832fiBllyBHMd6ceaZ/i8LfsERGSJQsdSXYlEbN/xzrz9
xKNi9iiLFOzJz2daJAhzCo/+0FfY5H8TOsSIP2+lry6m43p7DnImCREwnRSW
X4j7/3E0Tp6JqHptUtv5Eb8H2hPBplSEth0t2XoptlF2+3kSQn/0nrdKJV7/
6ePb2q/qzckHisxrsE8et6NeVz9jtbDiVYfzPy7v3CIDkwFLp88tOH7zzSst
JuiNY37zrR37uEDRPjY4b9Y4utOF71vu/PpLTvjGGsAj0If7CYRNMl642HXY
XGMQW0NwQ0YAxqJ/xtgO4/f0fn2VVgjsjd61BozherpyVOjzzAy9LfWbSewB
K/U4EXBq4dT5OoP7UV0VzxCF+fD2BzNzeL+3jI+ficF1/ZAvlEs4/iYi6oI4
rOzT+C25gu/jRZbitji4120q66/h/bO9yW5LwHpQrtu1X3j/WO3+egm4o30l
K+I33o92P/W6BPwhE5jN3sbrn/olbkmAT2WvSNs/bPa4uR4J2PWLvLRCNoXu
4/pPXfT3/oG6TiITBbJN4hMaAQkg39npVaLCVts4ECEOjz4XMZvQYteP/e4R
A6q710/fYkBO7XGq2RGFCFWxsOfMyCQRf0z3igL95revH9lw/aRtymVhiC56
RjrAifM36TRLhIDV0/DYHx5k/5+0L50F4bkSuTePAF6vNBpBwQ9JuR4r1mLY
OfUe0xyQ9s54dEIR5wdHKl4jB0knah7ygzjOm7Pk8Ec9U7zKTEwVe/EKf8l3
9bzXiq1X1LFpK5zP/CwvTWb8sqiPXPHpvyITZkLNqn6L7jSyRgrt8Xg2guD2
V5Y/i+trP5Iv5SS0Bg65GZlgv/QaKOAhauJ+ZN40x9aYi3/AT+iYpX+PscTn
MzPkiRYkGlgviRRa43pqZ8VqhQjDLvZLPTZ4/87D+WPCRGt064tf9nj9zM/J
ERHCyOhRL8cVPI9oiUvlokQXvTrzYWfc3+E9t+6LEWYtG6csr+N6ZeGRvOJE
f3h26D037J3tby/EiQv6l78meeB8+Zb8X+LEyD4+0vLbuB7LE3l5CcKmrltt
1BtZMLuw9IQEMRkU4UVyH/fbmFR9WIJIaqnMu+yP18+dOLpXgjBh25xtfIjj
x352Z4gTtNYyQgrBeL1ZfZ2oOFHzxvZ8bBiu/+DW27tihM/i8+g/j/F70LAd
yxQlDio3N1yKxvW+xR8uESGW75GSfX2G610VPf9GmEirVjkiFY/rSQen3xAi
LtK4uD9J/H+/srV8ggTHuVfv11Pwejm5BDs+ImSChod4i+cnFscixEFoSGme
E32Hz0+StVHDQvy+eTs8NOv/83inepKRcCYd/3vuA85PWKPiIyOET7IrlxRj
tzOtXtsoH4oycOEvxd63XSswWG4oWPxttgJbTjdQYlOd3GmB9XQNdmDxz2Ey
KMsVPPWhDt9XYkjBPyqQhfAv91vxfrmZKS0sMPOoYmOiA8fP6lftskNK64as
Xg+O9z2LJOcGM3Zpx+x+7Dq20QFeoL9ok8L8DTv0Xo63ANS+je29M4rtq9v/
QxD8lhrphyfw+Y28kvYIg+pBEl2tGTwvx+GdX8Kw4nPQL30O7/evyatOBDJq
nD/SLuH4KdJ8T1GwpU39cXMFxw/e34N+HrlNeiT61rDHDDwuiUFnIrWN2ia+
jwEt1yQxCJuE+Fd/sF/UKBSIgZb0rXaKXXx+mtkT/4nBH/f3+1xIp1E/9fS5
18TgQ+moRgc5dovPcwYxcCFj81bZN43/vg/nRIqCqL5+fiINssLfbyTzIvAt
2m+OhAHH846UCIvAs4FCIUdmZLeYb8+OCIOh0Pz5JjbklWsacgeEYO9VgRgF
Lry+5NINekEozzNpjOXF683MgpP54PZWKNlfAeRUxmqVRW6Q0yCO2IggCy6W
dtFzwvfgdfev4jiecvYQNRtYcFyafCKL+7VcJD1BB4dVlGtEjyKTiP7h+dWm
vnr/6naoOnYz/+79yfL3X1OUf2hiX3X3N98s5zaleluih9fLlyyO7SM6k9SH
+Q1xPxZ240oMRPiUB1vgGWySta8pzMS2x0jQaTPksVM34BAnIcI3kuV9HvtJ
/71n3IR+7XDXGyvcbwHDt2pewv3G8J+2S7jfr18+V/ETCZzDQn/tcL6jEa2u
IFFR+U1P3BHP43tjBpMQMev87cbZq3i9bCFPhRDBwPrtuY8L7pcr7+5ZYULl
y9CX9Bt4ns3ymzXCxEXHoalOd1zPs+43lwgRxDBEs3sL2aj6hoKRCJH1aVBp
vzdy3jVO1ysiRLft4HkTHxzXVq28JEL8pR709/PD9cyF7A6LEMKFA+nvA/D+
7K9L1oUJfeuB1p4gXL/ovUWMMHGTYmCDJBTHj78mZREm4nP7eWUi8Ppi9Yw7
QkSFRf9x8yfI7b4h7pWCxHfSfueAGHz+1PzbkwIEfWZfdHYsnmfDGj8rP6Fi
0vepPx7H4SMnJy9hvdM7uicJ7xfiPr7KRWSd6ZW1/A/nb5FfVWMjurZ6TILe
4v0blf0/MBN/XvXcy8vA67OWnjExEifXuxsocpH993teldlLzMR3Xf7wGc/P
Ie2Pc506nVZXxEg5dtAo28FFdeWFzg9UVditj5+y/FZ/eKyT1KYe+6FNCD0l
vJ/pkAxvwu/j37mjlLTQ+aTjTHEr7mes0PQSIwhOtCfT9uD4VkFJLivohbfX
HOrH/etP7ElihxvK7Qt2Q7i/7YQ4K054PtzGHDmC++t6FrXEBeWP2g6XjOPz
PP35+BQPTMu32UxN4fhtFtu7vEA70BrMMIvXH3Poc+MD5YDWnCML2HojrxT5
4YJ0a8/lZbx/RYNaCT8EdLdsR/3E6704pKkF4P39FpGydWSbBi9lUQHoEG/R
/76J1xfeTacQgK225pvMf3G84P7tXH4Q9G6OP7aL30cYh54QP+gKNxNOpDPo
/eyKO1jzgWtT08xTcuRUR6ucy7zw3LOJjqBEVli8fFyNB77wNSnPUyNXnNQw
muSCqdrGC2z0yIJxpxysOYHWrTFAgwm5/QutfzY7HOBqfHeNFdntpt98LytY
VjW0P+dAXnmRJTXMDAHXGjYruZGNUhgHqhmh/Uv9CU4hZJLZJMugfSC7cuJq
sCjuxyTN+tIeCBOujvglMYM/PwQPyW6rawd/6eqWw/kW44bXB9VflRzZPK6E
LVr0abK9fHfhI/eHg9jaN+wWlspLjApso9WQxx6pN02TEuwP5YNINPB5/nju
HaYgPIuyMm4cn/n/3/veRBqi4/v+5hEdHH99YIGWkZDjTv9xSh/Pi/c/cXFm
ItxQlOXLKeQMVuIoGysx6/tKReYs8qzmxP5eNuJEPr9logmO18peu8xB/DeZ
eJ/aAs9Hnny9nJP4x8b1yvsCzjf7VDbBRVjpPa+ZvYj78yvdbuImSu6yzJrb
Ids0s0nc5SHYs6No6i7jetEstgs8hMconbzKVewHMaP8vEQ7U7jxWxdkxjCx
C6y8hJz2vtusbsghPxJEm3mI8NtBCQ898DxJbQ/q8hCzGWRfVm/j+s8Wkx9x
EzpDfmO2d5G1hWu4oriI13Q7ezru4/ygGxEWnASJxl0JjQfI5E7Pwn6wE9bu
m/q5gchvxuZrLdmI0jeervwhyP1BQjkRLARH38/ox+HILhoz754xEZ5UN4q2
I5HVVqJ0VumJjqOL/ddi8H6yYrG3qQk516vbg7HII9nzdI17idlO++MlScgq
pJGBxZvl1kkWHbfeI2uMZHJU/FQvbe1Zn8pG1qtiKF3/q85Jeo7TJB9ZpnTY
4hcZ3DrQfrS6EM97XV2ygRI6L5+6pPQJ359YhoATLcjHNwa8+oxMO/L6rgMj
RDTqpjESyA4J+X/cmGFuu6bBrwrfj+z7URNW0JHXWlr+ilymvVePlh1e2xKM
Fxvw/OhUmZ9yAMkzNeWWZvx+DruVTXPCxdoSc7V2/H6+k0WScsPnLZV7mV34
vmILxSe5gVO6MIW7D9nieRBlKA/ctlasCh3EPy/2976u8EDXk5zprWH83i+c
2uHiBQX09dFpHJubsWQPLzxez5Dpm8Ln06P/mcMD8+LiRjqz+L6fmmjx8IDu
+dceRQu43t5SSX1ueBMuGCf6A/e7+VFCjQtIy5NLn64iO0X2/rfGARdXuEfI
fuGf9z/89zzYoUw4ntT9N17/cWqynBW4TNnExrfxeboWH/Yzg+SvpaMaJN9R
nIHxcgsjqMTVGr/cg+z/+4CpEh0YD9zxt6ZGFsz3MIrZAxHWg0MDHMgkMpkq
n1rKX+wWrKryYDv1hBctlWe8DKeK58d+0Pdu53f513G1Q2ZiyGPdJTprlER3
ANvpIklc78QmiQYdMSGy7MAqg1zBdnMSfd/cvfwyplMJecVqU22TjaCl9Hqn
qILj6imZopwET4ZRRdRh5Pb9rtMS3ITUyf19P9Rw/GKW+TYPoTpPunxaA5+H
7YpUCh+hEz5InnMcWUM/LolKgDCR+cBDp4vP9/dMH/q8a9cSruSij6xKyVYa
L0jcdHU42XQKOWplwHJdkPBnOGYjdRaZ8Y7FK3khIjKP7U6oCXJq/8rwSSEi
6ezy41lzvP+xtE9aQsT71do3uhdw/IEOF7cQ8enpy89pF3G/bMUq7YJEnbJX
51473I/gH5nLgkRvj9Gcw2WcL/BU84MAMXV7P0mNE+6PITzBip9Y5SDjEHHB
8SnmhnpegrRkUDbgBp6npzfZH26C0fKD9rg73p/vWtoaJ8H/N/yCxm1kG8rN
kU/shEySg/tLbxzfDGs/xUocOXYsdNcH7y88zfSRiTD3Wy4ue4gdMDN3YB/h
KFjXwhOMLd0wfYSM8Kx8OXU3DPczUaEltFUetecs8+FofL+C5feWC9Ubgz9c
L0rB9ak4hQ2poV8yIpD1P2znw/NqjPC9wSHR4y2ud4+85ygL/HI+VtCZgdeL
Fb/gZQdyWvYGxaz/zyvu6iAnMGcvj0bl4vz7eq9u8IDg6bpfPwpw/g9rrj4+
kPvxku5MMbJRjNzGXkE4FuUlmlOC873S+8mFwFDx7FG6L3j/46RHZoTAsnO/
sUsFfg/yO6oZwuDkQXa1qRr7TZPASRG4zTrkJ1WH76coKxh9ng8s+vA8tBHf
97KLjbAoPDWLyJ5tQc4j//zNQhT+23So0e34/zyFbJxFIS/+2FBaN56PuJKf
mSjIJo6NNfXh+8mlZ0Hr3yc/nFkZxPmvi2laREAyVXyRbQTvf1O3xVwE3v7X
8PPION7vXWtnlTAIv3XZvDSF39/2qU56YUhNZ9gJ/I7Py/v2g5oQ8L0vIHs/
j+d1hi74lCC8yDLd17aE7/veE7MgfuDI3aJbX8H77X06f4QXnuUnsnCt4/ym
dkOCC54Uj/Pb/8HzZFlP1mIF2pJA0ZAdHL/re+IkE4R9lpDKJplF56mkqLxI
C4EV1w9uUmAz+LWm7aqTVjMe5aXGXnNeEP6p7vv1g4YmHTJJd7yteZO6d+Nv
g3AWHM9ScDXbKv/VnHQ2jx1Zo2T7mcAewrMNzHu4sO093++hJly7g+wEBJFT
W1kul7EQC72STtoiuN6jA56/2QmngabrV8WxC4IcuLmJmSFXj8j9OH9gy52b
j7AfYfL+IINsQ/uwbV2AGBsr9O2Xx24jOWOMvt9OmgfuKOH9uCb+os/HQ9N/
QoVV8HrWpnOlIoTFbPIT3cOz+Ptwt1qtKNEzrxHrooZcEdnhWSRGGC9NvogG
nB9QNBIkTrT/eJRarIVdpntTRYI4tbo/begEPm9G685XCaJxvTmT5CT2X48m
JUlCb/NGvpghru/D5Hdfkvj6m/mj/hncX/91j9eShNZ2UdkNY+xUKtc0SYLY
tah6Zor7/cNkFChJqJFu15VY4PVHxYzUJYnSPS9bRi4gjzF9EuyWIA5RaHXt
uYT3M7c4qCNBFO6b7pe0w/lT5x1ixQklmpCRU5dx/uQGUSVG5NJJT7k74Xxv
yrxWUUKGsXUu7hrON477g+bxjvnmjzJXPO/fBwZChAlxNtaN8Zu4PyvqnsNC
hBC3JYmMF56P6Yt9L3iJFN6dvWfvYRslWTpyEbwCqTS3fXH/m4tWVOwEu+gM
e0UgrveCXLOVjngmHso7Hfz/efHyWVAQTPtlhKnDcVwiPsN1p5xWzl3WJBo7
9cVfts/qpKq7x2eTcX47+bttBiis5tc5++r/7+2mLhUrOJ0BvdI3OD5peGsv
J/AMXdIXycBxUiaVfh5odfQ3jMjEcScDzRABeLCaenojB5+3nmvETwiUfSuN
LhbgfFuzt7wi8J1qwriuCJ/ny9P2JFF4EUtmqlCC58ee2E4iDqeERMwTynA9
Go6fIAEk2cfPk1Xg+SQHfDKVhA+qDheuVeN6eXTsWvvBsSbQursWv5fKIWdy
KeAyenvpWCOeT2GmeqIUNA99tU1rwfmHW5T3SoPflRl7hg5cT1hdUVMalNYo
HL26cfw7i9tpaZj2lXAa78Pr4USVjDTEU+s56w/hfqScGL5JgcFzJ5cPI///
+exItJKCXaFQV94J3P+VA2s5+yE/+51b0DQ+/7oNdbckOBxudF+exflXhPlb
JIDz67yn+SKOU/joJYpDkxHNnYofOP6bZFVDDHy/SXvvX8P7+wQKVoiAkpPh
vZhfuL/7p6h4hCHe77Gfww7O3yv65hsvGNDkPGghmUNxTv8DA5yw+7z1oQo5
ckX4we9vWMEhhyFkHw2Oc3NHh1MCxxGFsJv02LWNvS+31Ru/GkUMMmFHFrHm
TKorDEdHZXFid/8RUdgun3QqiGHjxZ7sjnxKSTxf73zmK4DrJ897+jASOzSs
CUbiyBrHtovfchF5ccqJJftx/uLSPhp+wkHENFlYFsf5Br6KCBEcubdehisg
C5KYHZEUIRqPPH+1fgDZJui/OwxixP3a4tfWh3D96Mes/eKEgnHf29ojOP+s
4K6vJDE5vJkur448dvEI77/9xPOrnO/jNXG8LfypmTRxckM1i/QEcupZLeGH
MsS2//kcZz0cz3b4FCBL5NLezesywLapZjsnR9jFvyhQO4P3t2cqX5Uj2EQ/
F741xv3KzoVekifqc4eK6c2wP2jyvpAn7h3d/nTnPF7/xZD0P3lCro7385gV
ds0D/1vyxLjxsS8nbXD+xVt3WeWJZyPWRIE97jd56befHKHr7FvJcwXH38+r
fpIl/mykVAc64/P+uv2lXIbIfkB8XbqO427JU8+kCRu6sTqzm8j+z09uH5Ui
WBNIGglPfD6/KrFiSaJOVKhZ0gvv/yMtca8EMc9E+8X8Hs63O5JwSoyg/fcr
+5Evzh+9/9NThDAaaH4yFYjvh/pAVR8/4V770Z8lBO/fYMcTwE08+/DfTa1w
HLd3fkDKTvQ/9jqXGo3r8bcZqlARf+7aa7c9+//6f3PU/8p5nU4f3I3DLvV5
QcyU22iJclilYA/Ur5huq8/+ahvkyMTr9++h8uYG6qnSJp0cvF+QcC2rAMh0
vC27lY/j4QMXaoTgdHlU9ptCvP5nu/53EXDLvJfS9RH3fzRH9KcYxMQ7PiH7
jPPNz7OMSEBh0Fl/xXJ8f6fZp9P3Q6+72k2bSjzvt5Lv0c/z1iUJuyc1eD/P
qzRtMsB9ivlceR2ub2yiKykHakd2ji814vw/kZ/N5eGixKwybytylOZHe1kF
8GftEjPowPPtY96OU4D/SMvZ73Zj591kX1CAmuUMynd9uH5xMJ+4IswMPd3q
G8T1V1YM9BRhX4PvHMUIrmcrr3lWEaSKrw4eHMf3ax58WkMRDF+bNDlMIbdL
7DazKYJrFJQ9/T6H/72Kt6hTAaLuS2VXzePzW0lQ3lGAAme2lJ9LeP1Lmr+k
CtBtTvJE8CfuX+W29Jwc/NJe8DuzjucjMbaUKgucSr1uvpu4vyrV1v0ycESg
0jb7D64He38ES4EVbZbxtx28vt76fZkkpM48UD5CPo9/n7m5FIhCVZeL2FVK
5FS1/mAvYZiqMGePp0YWTLt/TVAQJBNltzYYkTUypeY12UE/hHNOlBWZxP3o
hz1M4HJrz+A5jnn837fWMk5SQt6Zgc/5fDhuuHziVbW6KnmQ33UpvF8sFH1g
Iyx/3nBLksVxDopGaR7CZ8TStkkBOe+G5N3jgkTFJ4Xj+w/hfKHUOnsxYuIt
j7LFkXn87zUXiVYJgvwphVjwMWSbKmNKXilC7/o3iunjyAqyUk1n5AieBuGF
Pbrz+N/nuq1ZFIhl0attwvrIesxk1vMKRJV/7gfNU8icX25XZCoSsd824myM
8P71FaRmSoSTqpqP3znkrbmY3FklQu1ZgE2KGc4XZPtte4BgWKnX/nIe2enW
tYNVB4gJA4b936yQM96zX6FUJorSTen+XsLnU/3PTUmZCNmT9JPLHs+36mWg
pjJhdWmiR9URWXU8OfagMiH/WbLU/CpyVIXnZzplgozjRsptF2TGrpawxgNE
r3tRQOwN5JAl3sVrB4h3rX8dC93xetII+VUlwkdKy6DrFq5PQap4UYk48yhE
ftULz4fE2jFPkRCeaGVh8pnH/3/hew5zCsSvY2xb8n64/mZeALUC0ZBw4dvp
AHx+P2sZSTkiaeNVxf86OPN4rLogjtsp+77v+/7w2FIca9nKkhRRylrJnpAk
IUsJZSuVIlIqJElxkLKkEhJKFClCthQp75n3z+9n5sz8Zuac272PezucCPH2
ydVxqeFgx2/FZ5IJB+9r39KljAXWHTnckQ79LRM9NiyHJ7wfO05kgv8Ov3c6
MvhJI60eSzbkb3p476ME9opM/2d5CfbHEiXGiBdXfC0911QKHOb749mi8Snz
mbCRW8A952JfMSGXqzq71u7A+u1FPie40V+XJimjaoi/EMOdL466qpgZ3R9C
v9jfCj+WRsUc2yai68DeNrR8QQ7ZPB+srG2E/l/uGF9QRuIy0jnvnhKeDWdw
O6KGZo/7RS89J9xIfbn3jQZqGbizh78D5qvIO3aSgnJ1F810XkJ/TI/2J2ih
g5mGitu7IN4XP6NgbWQ8Hcca2gP789vpITMq4rZu/ZHRB+yQqvSHisaK2Xvv
DRBm8W1dn6eDHtI41776APX0DpwQ0kWp7hcLpodh/1Dc547poj21I3Fso6Av
RC2/SRdp8Sn6qI7D+lu3Br7qIobgw9Y2E6AnNS7/hy7qf3Ff/cAU4bxNqcwD
uui24gp38g/Y31YV+dd1Uewpk6WSeainU2z9Nl3kOJw0+Own5Juavjqog+Q2
vmwY+w3nxY7Zx0oH/crhLaJfJczXIKZ3iYo65l1Py6wR7l3Uo3Zro8vbCg+Z
0n1HNDHXRHMmtVDwrXF7T0bCkYGrH75QkAWTus4JFsJt7+0bcjSR4P4woSus
hCtqxVe01JHUFv1lGk7CjXdOnfRVQSpqfwa8eAhLCV+WD1BEm5biLykLE04u
n2RalUKeqVkSDxTAP84kJWXJ+ECQy5qgCmGa6Xad9R8aQp1FRqLVgY/wBprT
4QSJ69dMdCCej2NXhyA+S+8bX6RPeJax8PGaBM75puzFtBG4rTaEThbfrKqU
6zQFvv1H/5Eyrsw9wqhpSdiKekzzgxqui9kwnmkF9nzOs92a+Om+v88XbQmX
u+3yttXCnZubSnfaE07XG4u+oI3fqiYm1zkR3rRFZKiBij9yWR8QdyGc2i+9
r0MHf/3JZhPnStj5VNmOB7p4drBLZdSdcEJLfkCMHl7GF1g3exLu+34uS1If
093YNXXTi3ALD3a4oo9ZU8VesvoRdt/K9mBJH/MFjdwJPEiY60bfC0UDLO5c
nP7mMGE6Gaq6tgFW2OAfpBNCuLupxYnfAFMk1Bxywwkvst2je6OPN9DPUlaO
ElabKhL11cdm3+5zexwjrLRDiOWtHrZ7eXQexxL2Mai+K6GHd1Rt7JGJJ5z7
QMzLQhfvyV27n5hI2Nxm2HyLDvaLeXrhWzLhje0efMpUHLzv9BHbM4TL9hqm
f9fCUZttXe6eIxy188NYBgXHq3Lqc58nHPQl/pCeBk7j6hEMzyEc8fSLrIgq
vvAz53dfPmGNE9Q/bxRxCZaoKyj8jhpbgg759Urhju0aRkp3YT7ZW3Qrpht6
DObF0yqBvy/SnPxh/EG85t90NeEnViHMHMxo5qtR4/3H0M+LmdNHRNCvTtpr
ApiwiUhJdJ8Uoql6djKqGfZbQ+hXZznEE7PVHLUTpuQavRpTQaL7uOWud36H
9ymlKyfUkdzmtwyMXYQv19yy8aAgddX8L349hENnL9aVaSE9Lg9y4014Xt+1
tl8boZ9SpeqDhFdO2Ip/pSKrwbHTGUOEHbTSg3t0kBO+6b8wQviu3oOrBbpo
d3GAtcsY4drlkwfN9FD35IrQia9QH70z3WM9ZKOV8q10knB1oFgHjz5qPipY
2zVNmOc1prHSR4YNN04vzxKOn3bv99BHVQw6O2UWYf8Of7J10Ecqts0Ktr++
w+8jrm5S+uh6psNS2ArhDp4dqy/1kEj/x2cFfwnzWfVu2q2HsiQOZz+jmSL9
GXOe6tBF633+eM/QEzY5UdQsrIvib6foCDIT7n3BUWqtg1bmBBlM1hNmaLJ+
4U5FoQYlPf7shO0uZse4aKPJWJ2iTC7CcitGG3W10CCro9mowBT8vSTeabc6
cnIa5mYTIfxtI79NtgrqyDv8SUd8Ct5XksZliqhOPjUuSZZwRYG/XaQ0uoie
NihTQF/9vi3faRBPkmO6E3UK3pfY++32oHFq57DHMT3CcUIvP0UuNkS7rq52
biJMeVLwI5gHz19N7fyJpuB7lQzZFSF8cFyoQMIc4tM0l+yRxG5huhuDrQlb
nS/Ob5LH3Y+ers+3A39JgYwCJWxD4zTYZE84WSGY4qSKmzePlE06EQ5+Idk8
pI4NzwZG8bpAvjPGDhIUXNWzarXJlbDQu9PselpYRSRNyMcd/KXfsuhq4+ue
wt/O7oX8qfZPhahYpLT0Yc1+wv6FXjkjVJw1rXt62Idw5IbOP2d08HqdFheW
A+BvrZ8jrIvjo50UtAKm4P31YNs0XbzSOPLTNQjsb+pEB3VxKHPQs/hQwhll
EW0cenhy698Lt49APM+9bpJ6eP+FNO/eSNC3x7KHXw8PDgrr/D0G83jEzzSh
i52kb9IrnCDctmKWcU0Xd/jp9WyLJ1zLcj9ggy42u9ty/Wgi4TzhZ4w1Orhu
0Sm0MBnms1v6HL8O1t74ybQ9jbDBcT0HVyq+dTKIez6d8O8fxZsTtLFM298R
kSzoZ3amSbYWvshxpsI8m3C/cyg3uX7w7BCJC8iDeFWr9yY0cOqlm/bZl2Ae
rbbdqWo4WunZzPg1sJ8Ni/NRxK5m/9RS74JdKTGzXRAz8axfXqqE/dtKn6vL
jas/8T/zegD7ZXEkWYURc51U9zB6Ahx5bvrNF+MGhw3KtzDEs4yglaZHAVKW
PwWewnre3m1RnKgNu5+dbQf/L4siFmIo4py/q8dL8O9iDBaVRnJ7w+U7ugiP
3GeempNF3Rpxc3q9wDZS768poBP/0uqL3gFnewuoKyO1V7kpXO9hv5+gu5aq
igYvF+04/hGYK63wvjpKPnxPevITxL8qaVaiifSMHk+7fCF8021EoIqCxtha
Hz39BvMc5ucL10JZH7oTKVOwf7cqnxXURiblHx0v/yCsNHk/skAbTR+bFF+/
APtBstqEjoou2i5NRCzB/CSSU7aQ65UoXc3oMtSXuSUsgIqWJtnjHf5C/MZ7
R0KpqLhOeFs9zTTRZzSfu5OKnFLlRVQYCFeI/FgVpSIaN63xHGbCJi2rtk+1
0V1loyp6VsIsCfeu2Gij3ctWscEchP1vHll9AM9TzjZD3IT72wTcGbRQTZ6n
gA0/4eANhdb6FOTtH/C5RoiwA0/v52INxGMQeVdWDOLfknxWqoYamROiMyQJ
j9AlMJ5UQYHvzm3+K0O4kfvnHW0l1B5R+rFPmbBnpYWtsiyKe9DHkaoP62//
0hzmRBqJnweXDAnT3KAfpzKgD84zJV7GwFXvhwZnjQ0WGZGRJTDtKRf+fw0/
tHWDZp2Ak2kmm8VxAZ3pRg8XyJe8/1iQNLbptmPucAUW4mL+KIt/X9vVo+cx
De+bDx1TVcAlId5XizzBPrzjtqMSdjYNPsTlTbgwdT23vQqm447RP+4H/qaV
zJJquGLkNP3kQbC/puzB6nhPxfnXLoGwfjPLOQ1NzBZ39dLTELD7Hj+gS8F1
9rf9KEcId11otH1Ewf6SD6mXIwln/NYtlNbC/D+a19bFQD+4ojoCtXBzw6sX
ESeAU08vFWrh4PTB3NH4afh9Zbz+oRaW2DPu5ZAE9V665lVF7ofU5zXrU6Df
9419M7TwxJ62yR9nYF439R/t0sJMGVduyGTA/sh+zMVKnkeawj13nAd9il5z
JRSM5m1Ek3Og/73C0uoU7C4r3VeXD/aXGU5GmjjS+VfGdAHE10vkXVbH2Ykv
baUKod76FyfOqeGqmiKm7UWgT6xbhl4Vv/4a1ZRYAvFMUo66KOMpIYeY2jLQ
q2MhdUYRyx9bnROvgPg+fxbLZHEe2jH07Qn01y8zilMAPwhWzRNthPV3I7SS
uXH3Ndrt257C+tfUSz/XYVaGu23324FZogYVfzQo6SacGu8EVlro3PvU2MLX
zVi4CzhKwF520Ti2jak6tg+4M1RcnhVdXP4QWDkA+sdbPYu50UOV+8pjHyDf
5R3mZ/lR7+6UMYERsC9VHtosjGbP7L1qPQp8JTDrhRhib9B1ixmHfkyHf2WV
Qio/WPnvTUD9izPbz0ujzVKfX3+agnpO7KlalkFejrWpfLMwz8hbFkZyKC4+
3XLLAtRfosPkIY8K7nvTRC9B/E66rS4K6NGY4ePyZdCbVnlGWRH18XNHDK+C
P2/PSq8imt/8lcJDM0PiJ/p17FRCnJH13y3oCY+EnFOpUkJqZedLjjIBixpq
jCqR+50D+26tI1wY83H5uxLyYTURG2Kbgd/XWsZfKKH4TQLvOLnA35mqnaCE
rhyeyjTjBX8vdWt+JfT4SrPdEQHgMzL3Tiii/td5zDeFCXtapYw9U0CLNEHN
g2IQj9ax6as84ta2PM4uBf7Otx2+ySENL1EDE1mw7/U+1SaLbC/MzYcqQL4H
+dtSZZD/s9Y7N5QJN/59+48ija4phsuyUmbg/ba2TT5iqGGXzUcjKtQrMpGu
IIwGU6Tyg/Vm4P2yJ8It/IhvqpOjbxPwvDTtLnakJV7UzmIC/jvYZZmY0LZt
UQkbzcGuOeWj9df4dIX8SqE1cOORM//KGlbCY78ccgH2Fh+4wI7b+CrOp7tC
/u0feJR4cE71J9NKd7DPaH325cfezryzPXtB71KYaLwQ1l60uLK0H/INex0I
F8U0FyLshH3B/7Z//QYJ/Ip6c2XjAajf8Q6vnxQu6Bm4uScA4qsWjuVI44Nh
rDtPBgFXr6bfksEGvEaMxaHgHxJMKZTFTPcD7z8/Av1+UMIaKYd7nQr3TURC
/2ovvVKXx9fn33CyxcD6jd0LLfI4OIu+QeME+I+6e+srYGNt3QDHeNDLNmOX
ooDZun1FwhOBY2UbHirggZC8tpxk4CLPvGZyPeTuiHiUBlz/OalcAYdX/pH7
kA7zvOrXG6KAzRzVe/5lQnz5rfcEFDDX3J6T0tlQf/xWv4vy+GNGhqZFHtQv
I3V3VQ6XU5qHfC+B3grWX0gOR3ctpKVcgfr26G7wkcVWwfKG5dcg3lAX9yEZ
LMC189urYrC/btqxSxqP3UvOmSsFNn9wT0kKx/34Pq93F+pVObKDXRRvOyd+
zbUS8o+YPlIXwmKa9vYx1aD/WfcONX5cG1h1u6kO7AMc8cXsOIljzHWsHvTd
WfRgZsbOd/lZmJuAxXQn7Gjw7HSkt10r8E3tFqm3DQ1nb/EEdQA3mDGOjhif
Uf/QmPkS2Owkg9CSsdJhJP6uB+KXsvEeYkFLbCEvlvvAvijcNcaBWsqvR4kN
gr29nzWHB2XZkUM8BPbBZ3OX+JHnFGPfvhGw55kfOCmENM7oJySMApvIyCFR
tKp6QLt0HOrh9W3uEUcdLy6OtE+A3YV7u7gUyj3UmT41BfOJ2zOpJ428Wf9t
4pwFbhN30ZZB2rc1v2stQL9Of5UXkEU0tvvynZcgv5dR5EdZ9Goya8vRZfDP
T+86LYcKUlt+5q9Cv2eOzPPKo4MqS0VP1oD/rO6MlUcGHYpOw3Q/4O95nXrP
5RHTQVcaOibCJqku4T/kUe+6tLty64DbXM1+y6PrZU/ct7ARbuSS2z4sj4Kt
Z9Yf5AT7rdz7JfLIeELy0RkewiNnT9zYKo/YUhz97vEDT53L6ZNDg0qn+LuF
YL0aWzeSQzfbqp8uihJ2uHXXL00WRfiPhwhKgn/u2Rd1Mig6M1ssVgbsz2Lj
Hkmj2DqL1jF5wp6Gm80vSqH40YUQW2XIv/+BZIMESmQrEqtSg3pS3wfwi6Fk
XadWIcoP+P7jtjcSRmf20IaeoII/A8bmAuhCxd5WO0PQoxpzqYUT5Q1whN43
Avtnd2uBdaiArkFMxJRwnLXRJWs6VOQsFvp1C8TzrD37+JNx1e9+sfgdYDe2
Vi5gwjXSya3fdkG8S97X/7HhOhv9UHt30PPZ9XkmN24IGxer2Uu48AKtThwf
birIbhXzgnyxqWpmgrjlmUXoKV+on8Ps4Tth3DazIDZ5APKpvucyEMOdgkWt
Doeh/nezxp4SuMvEKfRhMORPdV9SkMK9B2jFJcIJd10SZ1qTwv1ZFa0JRyG+
YIlUjTT+8Hhv6PdowrM5Y1M2Mnh4jEPcKRbi3Tp+uV4Gf2ZvaK09CfpfsSWx
y+JxvcOhkonA3LPLBrJ4cq+YeFIy5OuRaTSRxTPJL1qn0mA+B9X3ysvi+cro
0O3nCFew1jaMy+ClQWXxuiywS9cMJsrgFfqBVqkcwlyzHuH0MvivWnLo6XzC
wfJxSZ7SmMZFX3ymAPoj9LbgihRmODHe6lwI9Q+/3x8riVluZoc+LgI++Cw5
WRyzvbEQlymFfv3NebpXFHOtLLQm34J6HDO3sQhjPtmi0B93wF8x6expASx6
hLbtSTXYi72FxLmxinBD6M5msE+9YGH42aBhdli84RlwV9O9m58atA+Jtcm1
Ay9u4A7uMN5QHy0+/xq4kj533R/jTePKbbt6gANe3zOkRyacA6G4D/oVeTvr
MQuy2qffdmYI5m+9KB/FjexSx0MXRqB/4sEOnbzI4X62uNsYrN+2Vj3Pj5w/
WLQ1fgX/T2O1XwXRLsbFUMXvML/EX5mlwshdo0g8fQb8j3wp1hRFnjud2hbn
IF9Wz48YMeQdRxu2+yfE7zIzPiuO/MoqxJt/A/du7NwjgQapKg9n/gALuI18
k0B2DUUOomuEM3ilKw0lkWcxx09Z2lkyj9DgCGdJlH/ghWkdHeEKL0UeXUny
vJWc7sAALCYxMySB2BYt3o8zEnYwe1tmL4EsH9EqHWeehe/zmOPSxFFsbEM4
77pZeP/cw/S8GKo1P9ZUtp6wpzjHvL8ommMx4DBhm4XvoSpWOUSQyqtFtz72
WXh/H/09LYS8z1eWBnBC/Pyy330C6PKuwEU6bsifmS+xxof6xFVN83nAX/fe
L3peZH2zePAZP7CMRb0PO4o/vE/RXRDYnfZfOwt6oi0RPi8EehqW65gZkEZ9
LrukGGGapdpvPovG/vHObg/EgU133W8fM762hbvUVhJ4JONFSa4xX3eqSaTM
//ZjeeELDVtzt5zlkIP4ojOZ4n8bktwZBovlZ+H7s1NrpvS4UbpJYaPiLNyP
yZ1+wYyXx4+HvVEC/3dbLWXZsHa5YaOfCuFZqQvVUlw4IOQX2z9Vwo2tVGtO
HnxDr9r1gjrh2u8XPg3w4o9/gktUNKG/Qt7qx/mxUJP6QiMF5nVbmWlJADsm
TaKd2oRZ+q5ymgnhVNvSM9NUwm1Dl2P2CuMWLu+BU7rQvzreD3Yi+O9bKQUR
fcK/h/avMotivUtDoRUG0J+WiVvnRHGw50W82RD07LRs/iyKy+R3sg1thHxK
jPM0YvjzJK9rmBHwdjeBSVEsVtF1Yx0inLxc3XZFFO84cnb+qgnoCWV/KymK
0w1tkJ4ZYX/l7ScPi+C2NaYzneaEL5yQMEwRxrTPnvbvtyS8SdT2cLgQNkyN
k1/eTHi1TWKbliAOtzcKPWcF/eg1aWnmx3f4VhrkbQjviuPKU+XD4wM1rE9s
CQdm3acN5MGu3pQb37aB/j2CzGLsOEt5ei7WgbDa3ye/x1lw50yZMb8TYSeP
YdN4BmwcJdtvuoNwQumVwrylhkjjEbl+F8IMxReztScbKukvhwTugnn9tDqu
3tkgly7Aemk34Yz6P99Nfhh7bO/ZqeVB2Co2OUlu2ThHKKO4dQ/hav3+10a0
aF3ROuPFfbDf/wVLyK9HH9UYU8q9oP9Sw41lHKiqhqbX24fwmKMOJYIbJZms
Soj7EY6R8jsawovcOn4deOsP9fq7WpjxIw3nheqzBwm7ry+JHBNA9B9n1iwD
CPcr7P29XQj1+03a/DsM+Qpf6acLo/K5L9k1QYTzdl+/eE4ExR37NBIYAv05
5fVphyhyZhxSVQyD/du2k21YFCmd648YDod4coveymLor1BvU24E1J/05KmO
GOq+/prNIZIwV/kWbVoxVKL2YidLNMQPCfdPF0XRNc+vNx6D/Z7Bu/BBBG0z
aZ6OPE5YKVptdVoYyXTUG2idAN782eSpEFra/ujURBzEy04T3iuIOoaqX12L
h3xRPAXk+eCqX4WwWwLsN7b1X5d4UfjcbW+eJOh/0g3Z39zI6ljpvY7TcD6T
qh7kc6LZ9CuWG9Pg/LGWiTAyoRahixkLZ6DefMfu9zQo73r2+9vp4E9NM6b9
ZWxacyZELAv45r2f7UXGWUPRl//mQT+CTHuMmbCvX8S3BxeBE+VLy1ix4VwI
NbAA6uO8mxjBhTmOHY5VuALn893g/BoPHmU40P7xKmEKz6fXfuT+Nd2bL/fa
//0d3XRDEJ8R8txrXwR6EJv9I2HseX33LeYbcH2k49x2VRTrqO38iUtgfq+D
LjmIY5YaJ5PIm5Cvk+FOuwT+gLalUW7B9ZF6v5BeCle0W/d9uw1cvlnklBRO
3G4pfe0OYQMTB4XPUthtyCTA9R7075fqZUlprOG36SF3Jehbev7QUBrTzenT
dVQB39KioUrjvmjq1vhq6L/V1YMs0vgWg2aeYQ30xy9B6rEUjk1XGZ1/CHpR
QqCtFHYSUtC4/Qj6XZr7IkwSK16XjvJ6DNeTI8V8nBJ4VVW8RbQe/Ese3Tko
hrseCHH2Nvy/P+bNU0RwMeJzO9MI/rPBcYFCOLKd84ZFM+Tbt8VBQgDbbWed
XX0K/eqPfF7Ai6WGmDY+eAb9dtp0YYYLt8/+7ZJvB/urH/fNmbCI0NQqUxes
j/F6sHHQeItrtunDNxA/19wwfsE4/KJxkl8PsPDMfT0a9Eosk7OtD1hzV/EY
G/rjYegc2Q/1KHy1j+dGSldH85QGYX5VfmyRfOiktJ5MyhDk93Of/yuM7u4f
9t0wDPUNfbl1SgwNFiXfnhgBPS5cOgMSiPmL1mz+Z7j+3mTTPC6FdBTe69iM
QT7xJLsQabTPLyFq5QvYD7/h3CKD0m+qN9z6CvOkb8xdlUGPJ/rodk9APYdu
hGfIom8qcVtYv0N8uQvmtHKIP0D5zOMpyD/mJLVNDpnd6e46NAPz9JakRsih
oJlj/GKzoHfSmjGKPB9oyrt1zkH/o4XlXeRQe/CrKzELkH+2K4ddDi1VHh1V
+wn13pbJviqLZBaklIaWIJ5bZhWbLLLX6Qg4+xvO68fc9h0yKOZIWKXRCqzn
Sms5Jo1u1ogtTf8BPkArFieF3v56ZnjlL+h/HnK0TQLRbQg6sW0N9P8bf7Jd
DGlGC7X8o5mD93mfcpaQ+53HTSz36Ag3HsWjTwVQjRFfFicT4cK1IxERXGg0
tr4PMxM2aTi8S2094mr0FQ1eB/xxboMGPTpo9qi4iw3iaR/dVPnZWHzLnoeZ
vHNw/5rtzb8O2yQzr5ryE/Zs2BiixYUj2itM5gUgn7zRwlNe3GVL3+EkAnY6
zdlM8u/lmXIOejGwXzZc1ySOVV7t2H5fHOIH/bu5Twrv5FzL9ZIkzGV8PqBd
Gic43PzAKw35dAXd+WVxZaajdIsM+NONLZjJ4Y/dKz7hcqD3TMpne3nMyld8
S05hDr6/YxMxVMAGO7b+6FUkLDUSQUujiH1ylqiJymAPUX55VRFnvbsaqasK
8ZYCY4WUcIOQdf0XNdD70O+5vxL+7jpPm6MBeqkq7BlKWOjSpc2bKcD8bvis
Erb4YJG2pAX++zn37lPCIeIzr0uowCkGHqxK+MqeXL6duuDf8+hVmiJ+cdXE
lVkf9MoLho0q4N8jE5cfGoAez+tavApYXub8Zz9DqFfsiLaYPHby2qQotAn8
n+/GNHJY762N120jmN+Vab1BGSyyxfWqMQL9u6wYc6Xxv1q/929MoN53p0v1
pfCoSoSgjxmsf1XHHC2O2woStv82h/gHXxeYiuByjvPn0ixh/bqm93MCOHz+
HnOVFXDx3YQ7nHiXd4O5pQ34c1nqm7Bgo77OE/22YNdxNSqlwUx1E7/+bQM2
4HIeamrIPSn7zXYHcKbdXzkOFLOgJTfsAvW7sw4M8yBPHxPP0F2g59iBIzkC
SMnaoz9vN7Ch5VCZOGJ7fIhPzQP6YW9TTs73nFq0A94D8aYfh3PJoDqu3LYv
+8A/iWPPpBy6En+DIcoL+rG8/ryaAopfvG/C5gP9LyhXdFBEvr7NMVd9we4u
JbRdCdn2d9Vq+0M9OeqxVGVEsRlefHYA8o16ec0qI74n0xTXQ+C/jYUpWQX9
Vl8NmAoA/wuUwGUV9OHq+rITgeD/K87ZQhU1cgt/4QkGPcy7UvxU0Y1TitIl
IdD/ue379qui1J+6HhvCwL/1jqWuKgr0s8jvDIf4/s1KIyrIacDp7d4I0FtT
reilgvRs93EvHAX7vX3DDcpIpD5oa1IU1L8pjX1RCa1pxKYIH4N+fn6RR6+E
xgrPPCuPAfbNqJlRQG08l2hNYiHfLfPmGnlUnlBm1HMC9LEm23vIoYylh1G+
J8EuVaI9JoPC/Z8/WI6H+Bxc+7dKI9fB3rkzCf/vT5Gf5HlFpmHuwP3TYOe9
zTUoiJgoNCWbUyCf3Pej07xo8hrH54FUsONPevWc6H6iqhtN+v/xKhzr/hpb
bPWx2XoB+kf/bFCaASvhsKSR7P/P76eod2yYXSu+OSwX8rE38D3mwX18Vw0v
XgQ2Dt0nLIrrku5EqBcA/xK1E5XEV34/rmq8DP1591QuRhr7fehX+VoI/WY2
ecYnj8d5FHwKroM/rZrDewXsax121bEY8tuqfIhVwl9ONA4wlYD9ASPbqjL2
rmHne1IK/eAdy3BQxaNTbttCymAeR9Xdo9TwftmbyQq3wS4sGHhEHX9y/dn8
vhzsHxbumWpgzwyzvxl3IZ6jY+AHDTz8/Jz+5grwT2pbttTEe/5+CPlTCfk5
X3Yc08QfqSrlFfeB2btGjmtij4NHx30eALMZYltN/KGwRUr04f/XF/mELxrY
/R337q5aiJdgG2Srgd+z781OrIP6G3fpx6pjN4vy14ZPID8V+59QwwPRy+tm
62G93ZU2e1W8q3KzxQ0Mdp8h6Tll3P/1fKxbE+TjPfDYRwnvlPhUy/kU/Jtj
ftxTwH3OGgstLRD/x7pPb+SwS9ox9ejnUG/l3aZXMtj5N//1sXaIN3NF4KUY
7tHw+pD/AuJ9TBTmEsJOPhUC9i+BnzpmKvBix26btEddwH9eoD5avK38RHj6
O+CZpJo8FvTyc+dd84H/518mk0qe74VFJn4Pgp3loexDAWSbVO3h9RH0pJ2u
3ymFOp7Q5gmNgL1walO1DLJZ2Nb98hPsJ89Y90U5ZOU5sdngy//77RI3rzJq
zdE7OT0O+kM2m39TQZtfnnp8/RvYV1l/Zqmh5/Rvfu6chPrNq79xayBLQwkK
+xT4190r3aOJWoIPHWyeJtzlqe1uREEWpbXFR38QpnxsS6ygoKdDjMNqc4Rn
nWpFWLSQGd924c/zEK+RNd9CCzXZFG7PXSQcHGsg7qWFTE5On7Vbgnm+MGTw
1UKNDw3baH+D/hX3JzZaCM2cpnu4DP14NJTCo4Ua5N5uCvgD8Xq3B9ZTkPFu
maPSf0H/fMhdWwqqzwyq7PsH/SmJvXVME21qe/I9jWaesDb7JWUN9PjfOgVT
OsI0wQIl19WQoe5OzyV6wlLa99knVFDdoeKLtxnn4XuuV3ZrSmjD9bleT2bg
F2th3xRQbb8xp8C6eXh/XTC+VA4ZcJ6xfrEe1v9MP4lkkF6MQoMuxzx8P2t8
QFgEHR7t//GSE/zf3hWf50PFNmnSvtyEG4/RRdhxIm7h2YQcPtCTI9o7PW88
9eCR7S8RWB/pa3+dG8uIBxw/JwbxFc3HlASxa4LEPUUJsE8WFOWJ4edOp3h2
ScP6iNTNqbL47yNdi1kZwrPp6YMMClhH+tuRZDnId6QO+ynhaz/sBmoVQQ9H
hNsLNdzvsrbeURnq01ecfaaBORoqN02oEM77mhNlS8GW8t6BJ9UIW2nPbJLQ
wjFnBAqFNQizFFBHB7Rw1ULbm0pNwpFrzeuOa+MJt2P0NlqEK04N1DBRsVSz
uu5nbcL9+x8ZRVCxi/KIb7QO4S71N74dVHw2IyuPR4+wEEfvWTod3PLLouOW
PmGld/aTEjp4Zc+vP2YbCP+2uWtEWOt5mfp7Q+COsKs0Othf3X1v2CbCJnkP
yp5T8ZULHJmsxoRrJwruB1Hx2z+NzUUI7AVZvqvamM0rbHGjKejhZPI/rI3N
O+QVes1gf7DGqzzVwtFa/TsDLMB+/uKpfxRckZeawrCZsAFFwkmKgr+ubXpc
sAX6vXNNzFkDS/j9mNKxhvk8n+LboIadX12TeGlDODg9z2teGTcXMMX/3Qr1
Tv20mZXDy/SP7mfbE3Z46dpqKIMphw59UXeE/m9ZU3gjgX27xQWfOwH/0ij6
JYQvb+iy2uMM8zu8wLTIg3sL46OXdkA9jC5bC9fh9Sy65ek7YT/4Rs9brjSY
Bn0dUnAFff0CrPaVDZF9+ZzYDfxDVYpyOfE9IzvTne7AX4sLNrOg8eJ/oT88
oP6z4WwFPEiMrbL49F7IbyTU0SeEtod59Unug/iNWdI/JVDqID9L7X6Ir9rw
+KgMajRt2+DgDfVaSTt4yCMNLvXLcX4wf8rk2zcqyPvo8CuhA//ryet0VUeX
PmbSVB6E+oUoJx9pom5LC23rAPAfYu9epCCWO0tenw7Dftqyp+kXOf98ZdlR
QTDvmXM7RrRRxLHdrdwhhJOPc67eoaLyz+zLZaHz8PwwPbBXB41aN6qYhRPO
+KnD8FMHhfpLuXQfAX16PvUHdRHd6biT+4+C/6TFTJMuyrwxUj4fCf0NDp3+
o4ukWkz646PBP2PDKQE9VPG5kJ43BvS08Axy6yFES6tZdBz6V1KWOaOLXknu
c6OegPMmbfnkti7aY9yU+DQO9kOXvJiNLpp2l67cHk/YbjxJv0MHxRw7+WH0
FOGC8J/6ajqI7eIn5vBE6PcPrpVgKrpUa0plOA3+ZqoJ+dpI5d21PReS4bzZ
ebSUaKG6n7Spcqmg9+Nd/osUZM23/0F1GuzPVNG4CQ3Ur908YnEW+v1qdSVY
Dfk5yrC9TSfsryuU+1IZLQXF6/tkQDxNm9NMioj/jll64nk47w8bpVikkZPi
043P82G9x7rm9DXjT5ayfi6XgBcdjyy+MQ72PpU1XgD7YeD81s9LDeeumU8w
FcL1hJ6RyYIXd4q25GwpgfN7tLa0WAHvNpRrfldK+GZRc3aZMp7clTDtV0aY
yymr6awajj46JvT7Fuy/HzJ8WzXxuhwLi+RywmoJpjGzFJxXXRwkdJew+7MF
XjltrNTDcOnmPcJumxjuGFPxwznv5waVkC8mSB7p4M1cz+baqgiH7o1xl9PF
fRry4q7VhBP+1HlO6WKfrYlWEw8IByh2K+Xo4cVDX8KiHsJ+Wqvgk9bHCamW
V9c9Aj0fPn5N08e8ZTc68usIVzO5ufXp4+utjEvKT+bh/Tt31TV9rD3uI11X
Tzim6fgYkwFuYnhuZ4Oh3+uqzKb1sYOsQuRgI+Fu2nUDlfp4xDSp6GAz4bvV
bwN26OMgz/FXK08JM/HY+/Tr4X+xm1dSnxE+ndKatlEPp18ukRdtJezR/kXh
hC4Wf8LkeLuN8Fil/1KxDi4f9I3Z2EG4ZHWh5w4Vb1p+XvriBeGmd+1VF7Xx
C0HFnt0vCbf9shAK1MJueqf/fX9F+OeAYYISBUeFbdnB1k34YZuhWa0KZskq
jSvoIdzakxhWoYjzKpjL1d4Sdpxu3Zoih2umW+m29s+juO6coYA3oniky1dt
bWAeSfVJzbB58uH11Ywule8hf8rDfyXr8N5o8zL+YTjfYvVNpqPGqR6fu1tH
4Pwk/IpgZkDVJidXoz7DfjrryX+aG7EwY/uPXwiv0lw/JiuFtCc9ojK+Eu78
KSZ8Txa5v1y9bjYB8+6KkxVWREkVlzoXJwlzTMp/d1VBlecNl0qmCMudZy0+
pI4+RAxIus4Q/iAjsFOegpjcIq1ZZwmLFS5eidRCFCPBsPo5wum4PqxCG7lJ
1RQELcD1eveuXa1UlEC/47n0T8IinA4X63XQ3fGFHz1LhDWYvotm6qL+9izh
pN+EJcpnDyM9RH9Hy9xgBeZJ3VDeroc0MroCJv/A/ltZ0VTXR7vCgnIK/hLe
3+rqc0AfxbtwNG5bI5y1KrE+Th+Vb7gzQUO7gGjKa52DA/VRn5gd7306wuOI
bauePjmH3zf5MBAefHzPpl8PqYym+AoyES7QEljnrIecnytltDMTVvu58Sq5
HsWWtT46to5wRld71bAOunnGd1SdlfCqtd2vOSrqDmJkH2EjnNdQ+3pUG/11
KtbL4iAcafJ+20MtpKRn7mnB9b+eXwcDKchJ+HPKEjdh/5MHSwQ0UMmw5JAb
P+GbzQomtEqoq7mBiV2Q8LfLf8SeyKGVGx4ULETYszVKYJc02hZw6ZSsGOFZ
pUCm83wo0t7wzltxwnHvYtbdWI+uaw/0nZZcgP8/y259wW/jX78FVKZkYL1H
SnYbDS5MzOqqVia8K2lgo5AM7vDXWvFVJVxRY2lgL48XbbtkhdUJF643Td+n
hCU0g7a+0CBMCX5laaWKrXk4jh6ngL5nP5b/qePwn+WFmtrgv9orY0rBV/pt
Oz5RF+D/11K+4KuF2x5PLpzXJZzMrWYVqI3nr6SIb9YnHNyXPetCxWLxSlt+
GxAWqlG2liTXH5/W4FuGhLuqTdme6+BgK9+L7psI1zK6GNjo4kuqjC0cxoRH
vswJ3NbFzzmKpxsR1Fe+ve2bLp6dMxMMMyX821xZjU4Pi7z9ZCJvTrj/JLvs
b11sURt38J0FrM+qSOvQxQqdCWkBmwlzhVu5xelilpHkclor0E+3slFIF08u
nHmZY70A38sKS5/XwS+YM2dUbUHv5Y7COSouF83mbLIjzMKy2qlDxema+RSX
bTB/84cue7RxsPllx+/2oE958gG5fjjtvBYa50hYqc+S05+CdQ7dOM+/Hfo7
y/k9VwPznyirvuUM86QsPdAj95cllUu9O2H/RRpVsCnivUtN0cp7QI/B0AC9
IDZZ//xSw17w/yJyXYPc70p0PNm+D/TfKHS+yYjHLbv/HfdegO+ZZAf3vDNu
c+2T5PUF/zuMl83+GZcdHjS56Qd2xYsB4qwoIPtzfPdB4AXaK6bCaFvZeJFf
AOwn8ZVrYxKIUj/ZsnoY+kf7SE1ZBvG8mfmSGQT6Wi5mN8mhhbF5JsUQ8Jf7
E2+giHp/Lyk+CQW9pSFsacqohu2PlWM45B+wy6xSRXlSawfGj0A8D6Vn1eoo
Woc+7dhR0M8Ycua0JnK3Yi7nioJ+GqwvzaEgI3fWlzei4by5Px5z0EISwZwz
hjHAtbTjc1rkOsHL2XWccJt9t0CUNvqcK0jxOQF63Ko4vmijltuijitxhK38
Yp7qUVEJlgw9Fw/noW83YwAVne6RPS+XAPXUdz5OoiL/r4rVjxLhvLnmqyVS
kc0f1bfbTkN/9sXd9qciNU7K0mgy6N8asEyhIg5ZHcGoVNjfRycrP2qjWT0D
A44zEN/n08VQbfTGZpNr0VnQY/t897QWqtpjEm1wDvSMCt6210IXQi0uvcyA
/dVu9Ivcn0QkWT3ZnwX7Z8v8vauaaNdFu6Ff5wk7rGV+G1ZHos3OkjK50N/G
w7bTymj17S6Th3kQ37DneqMi+jjhvs/uIuzvxwGVR+TRdW6foojL0P+dzTfP
S6EE+QMtrFeB1xsfYxZDPhsOfykshHocN+xvFUBK+44oviiCev3ihMRY0L2K
xNuSt8CfxVR5Az22SMiZHL0N9u9mN9Y4cP/OUuWbdyB/+pCcJT+mWWsrpVRC
PNkN3NJS+EL3wPhiFfgXbWO9L4OVSyblH1WD/juJDyTlcUPUH+/jNTD/MY4+
H0XstJWt2LQW1iPpvYnKeFxKfJSxDvK3cAYEq+LoRXWZjseQL/qfqYY65mgz
3pdeD+vnWWcfauCiS/aFThjq/5adzEjBBkGewwJNcL1quO+WRcGdZiES75th
XimRYvRa2FMg3uNqC8y/327jDi28OJFV4PUc9K7Xi0zTwsn1Re8V22A/eHb4
39DCYpnVIlPtcH4VNvdc1cIV3s9cK14AR7DRnNDClgZ9eeEvId7zj3tNtPAg
69d3Bq8h/9U7CuMUHDj8S+BvF/jfWLwWTMF091lcmrqhHqtugWZNnJMknJ3Y
C/5/F/JDNbCKm0qvdR+wjT7zohpuUN/Iy9EP/aHufmutip1o7Zy6B8AeZn7w
qDL+2uuemfMe4r0J5o1TxDE3D3e5DQELbFbzl8dcMbGcksPgr+FQSZXFBrKF
Z0s/g12p4Ns6cdy5VNF5aOz/68dhAUUh7NnRxEoZB3v/nyF1XpwSMppSOwHz
eDovbEmHJSwX22K+g7/4smH0bEOVECOL6TRwG5U86RsPYoWk9lngskhnOkYU
eF7/2dl54EhbYUMOROdnxeC0CPElkvLTeFGOoau5wBLYXw9HPxVEqhwH4wd/
Qb4a2UNYFDV+im66sgzzFnyz9agkcn6QRuP1B9Y7iImESaNvyQVI8S+cH8aA
o3SyKMb9Tuz3f2A/v3ebnxziojTU36NZhH6ePF8oj4rpX6+G0S3C7xm8sbcV
kMG74Y0GDIvw+7/GcqIienlrNnqVEfwPeh+lKKH9sbR1jcyE45h1O8qU0JIj
z3LCOsKey3v6Z5VQqrysgTUr+Bc3jjIqI4ll6lF29kV4v611ZkIJVXVa1Lzh
IGxy4YbKZSW0pXDHz2wuiMdwmk9KCX0I89Vx44H1h3WOhymi4C1HwyT4QN/p
1yGXFBCDaHLVZ36I5/lrKVce5c3kzZUIAqN54wA5pNZcRjkkDPFirmWIyKKm
7LogTVFYH3Uu8IY0+g9KyQ2w
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{0, 1.2566370614359172`}, {-0.0003931360906065384, 
    1.5529889223996576`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.622658432788204*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     SubscriptBox["\[Theta]", 
      RowBox[{"1", ",", "1"}]], "[", "t", "]"}], "/.", "Sola"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"t", ",", "ti", ",", "tf"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6226578581962147`*^9, 3.6226578649594297`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
osL/AHQq2ZE=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 1.48},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{0, 1.2566370614359172`}, {1.515756738226963, 
    2.2429207880644007`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.622657865547673*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"ref", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
     "-", 
     RowBox[{
      SubscriptBox["\[Theta]", 
       RowBox[{"1", ",", "1"}]], "[", "t", "]"}]}], "/.", "Sola"}], ",", " ", 
   
   RowBox[{"{", 
    RowBox[{"t", ",", "ti", ",", "tf"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.622657875141057*^9, 3.6226578820707006`*^9}, {
  3.622658259537595*^9, 3.622658265595736*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1:eJws13c8lf8XAPBLsleysrL3JtvzXFv2KCsVipCstFSSKCGprEooM0pWRDkP
skmiJCQavlJJUknrd+/z+f3V6/0653PO+Qz33qQCItwCGSkUih8zhUL/N+zv
y2NhZ7dhFEq11bxTEyZ6eDYxztwQp/B3vgmJ8SR2xnFF25hvxikeCS4t1nuI
kwzX51TMvXGK2KCTzNxBgu/hvIyEeQgePzHhtUP9NFHq/kTDLzQMjz9ozy7R
lkwYv200vnExAo8XHaGu35xK1Ca0K136Eo23PvDeWiSWQUwUnTcTMj+CxzMR
4sWPMwn5jwk2BqOxeLyMyqDQYhYRqXvQ0Tv0GB4fNBXWxZFDMHX6el+9eAKn
8i31S2y6TAh+zbx3/ksCTtXptq53vUbg/AFD683P4oVrSofK/W4Qu+9tc5fl
TMH9jur4DAzeIFJ8t47qjtKs0nmAz7iIeFpsO7k1NA0vJAy2yXAXE8GbNOZy
Lp7H49drnhUrKCG6wjI3bVHPwOPPXxMU+VdCvMDWHfK9RPPTKq+o7aXE39fs
q2HbL+DUx6GZ1gJlhK3K33/nvlzE/Vai7xhGlxM+f2LNsj0u4VTFrdvrOsuJ
fY9/JOTfv4RTclyONArdJC7u/7L2TlImTpGqyTvQeJOYvP+WY2hDNu5nOaC6
a7aCiHLoF+Izv4xPL/P8S2W+TWBWP+cu37mM++nvO7PD7jbBiSk0S4lfwSn+
P56+SLtNlGqc8tVauYJTbWpNZ7iqiHE+4+suVXm45J/O7H7KHaKMIyR6TPQa
3qrQa3Xc6A4Rw5Rj4Xf2Gl54ndjJuP8OwfN96V3E7nycujKceGX6DnEjbGuW
DVchvhiV/83Cs5pgDfl4nMOyEI8fKoy4HVFNRASeCnocW4gXen/YfOlMNWGy
o0bfc64Q13wy2TJ5t5oYdeYaD3p4HafwPmC4zllDmDgUtyuvXsdd/uVLKErV
EEW2xpULmjfw1n3FX4031RCRZiHHDubfwIf22rqt860hOHQ6JU4fKcIXTWJ/
lxTXENEavix21UX4EHunRtfdGmJM5etnrv+KcL/vF0JPdtUQpbJSbVlbivHC
FOeLj2drCKrg8V0lGiW45mO50B/StUQpH79DSFAJPn10uV9Mq5bg4qnUVbtW
gg+xybe8x2qJcZYXa++yl+LT1DOC8d61RMxP3fKOd6W4n6nvaGcKLf6tPyNZ
rAyvFv3L7ZxdS5gtBRxxcC/DKXdFhlKu1xLcHzLsnraW4YVrf/yWaKwlbk5+
/Pjmajke/1Vry+RULcH74tSzsuFyXNOnb7PYXC1x8JkI7GW7ift1b9ot/KWW
sBy0Pf/14E08I4Dn8GbGOmKKKNZa41aBD8kqqN6WqiN0RmaY5ZMq8IymYf/9
inVE8qzEpO29CtyvebJhrQYtznX5dLpEJe639H3+gjEtLjm6rca1Eo+/ou91
zoxWT2e91tPESnxRw5fBy4YW9zk3seFDJS6pEsu4w62OeLmvr9pE4hZOiRwc
uuJZR2ifZDm90/UWXpjQ2n3Tt46YLDupWdJIiwfz/qEG1RFa3w4kaSbexl08
e1P3HKojTrPW+bg33sarNY812R6l5Ysuahycv41TSvYEMpygxc1Dx++7VOGS
wmy1v5LqiImtZXemTlXhhcGVZ7GzdYRmyNtEhsYqPD622nFbWh0xfn6Hho34
HTyjJnFB9mIdoVF0lSnUhea39Z+HM+uIxIaxF2mn7uCFFSty23No+b0Cd+40
0Cw8K95xmZb/0i1x+P0dnHfne3/WvDrCfKX7Vix3NR4/djxWOb+O+HQySIhT
sRpvVan+pFxIi2cVfVTfVo1LFqh+7SmqIz5KmHu2xlTjkSd7zuwpqSNyyqfb
XNNp6+t7j86W0vK1T6i+KavGC5cv2luX0/Lvi+fEtFXji2NHo87crCOyrR4w
ME9U49SahcCKijrC7LFPWM5yNU450Vhwp5KW7/VzVJG7BqdKRl7KuUXLf51j
1qxQg/Pm+NUH3K4jqGF6t+zNanCKdtr+dVV1xIdvTwVf+tTgfpx11GKas0/s
PxkeU4Nr+h8/K3qHls/G9/HfOVpcUbb5EM0fLlZ7XCirwVv1pE2baM4Wc26T
bqvBqyVMjk7T80s/qdSP0+IqzyY+0fM10rKtlmvwafWgjhl6fpMyw3OuWrzw
n+nlB/R8i969wQq1eKtyy4M4ev7AntGf1Fp86KxYhiI934PZLNWH5rmR6Gba
fNTp4kqxmFpck43roS59/hALwapzNGcdeplD21/215l4vKwWp2pYib+l7Z96
PP7DUCst/nTv5Aaa55k3egSM1+KS/zbvN6SdV1ZGS+vXr7X4dKukoQXtPKki
vipJXHU477Mbp/Rp5z1ftJolqFCHU0cCygRp95GpdplSTq3Dh0rP/Jim3Rfe
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
SiSaqMxOs03ilIxFwR0SLsSWC4fXVvPSrDjoXVHvTMjMdsqeEKJ5yCRqXN2Z
aD/vt0tcjmbNSz8HlZwIypusaW8qzYtrajkNHYgh/Tf/FG3o8csfP7fZEwVp
mhtXHOn1nOp6HewJTK9/e/Y2un+34cF2xLGzlInhgzRPG1A879oSPzT2PrO/
TXO1gHz5dSuiK/Heskg9zbxdbL7WVkT2i7X88800u9ygXvhoSeieKnRL7qG5
tdwuyNSSiB599rjjDT3OU8yzaE6Yq8h8vjRPM0X3m1ShObEuPpJ71xe6z19N
cjUnqpU4HBn+0fd3/KHyPTNi4Ri1z1TkJU6RFDvkkUkl4Mm595xSNLe69/o6
UYlz8hOskwo0D2XvS2GjEqpDB2xiN9E83VKcwYwToTKVHQ0u9Pw5s2wWU2K2
V4DQOEOPRzySDjUkLs38uJ9yjh7Pk/u+1pCg/nxx790lej9F5y1FBsRVxfza
q4X0+LYfua/1CZcz8qUszXRnMRVE6xF/8lmLAlppLvw1JyOiR1Q0zBe0dNHr
G55f+3ATsXa26vL+EXo9rLlXeBPRbKl/7tVHuu89eziiQ+zx3ZBi9JW+Xqox
L0mH4I/5dTrrJ81UpqybBjpERBERb888Rft8GG10uKFNyDLaxjRupHladbv+
KS3iPOG17bwbzRTn57c/qxMmz4285r3o+f67HhxQJ+YXxLZa7aSZ2lpS+UeN
sJSYcfq1l57/qoR7vRqxeizEfE8S3YNmEu4qRFmmPd6eSjf79+D/lIktt9RM
xC/S69nv9j2uTNyZ+LJpJJ8e/1kmXaVE7DaKVcLvTdHPN+i4tCKxzs1X/grQ
4/NO2x4qEBCCyXzroMfbKq0CFYgNlxnFK5/Q52F9o14lTwz+SOEV+kDPxwv6
XOQIg7tXfyyIv6J5/V1iRJpwfXX40xNZmuMZuf1PSROhbB5v6lVopuo7+uhK
E3nbeR/HGtLceoHV5IoUQWFOKmXeSs+PHd1wQJLYoBmQ934bvd7pmefqkoS2
D35xIIAeby9NGtlI7K76efxiJD3+kWt9lwTR7RG+VSKNHr/1KrdTjJiOt7dn
uESPi3/otBMjVioUzd5epnvnlX9PRAnlf69VK8ro+f6KB2dFiPQyTya9h3Rz
nDwmv4HwWKHWOa7SLbbK+VuAMFh3fksuZZq2nuuAdr4AYVl6/DEbE91vj82Z
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
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{0, 1.2566370614359172`}, {-0.07690321557053803, 
    1.5084899789297168`*^-6}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.622657878721962*^9, 3.622657882513805*^9}, 
   3.6226582662913094`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", " ", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"dref", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}],
        "-", " ", 
       RowBox[{
        RowBox[{
         SubscriptBox["\[Theta]", 
          RowBox[{"1", ",", "1"}]], "'"}], "[", "t", "]"}]}], ")"}], " ", "+", 
     RowBox[{"\[Lambda]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"ref", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}],
         "-", " ", 
        RowBox[{
         SubscriptBox["\[Theta]", 
          RowBox[{"1", ",", "1"}]], "[", "t", "]"}]}], ")"}]}]}], "/.", 
    "Sola"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"t", ",", "ti", ",", "tf"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.622657898877101*^9, 3.6226579895915337`*^9}, {
  3.622658040671687*^9, 3.622658073936616*^9}, {3.622658304566313*^9, 
  3.622658312517832*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
WNQKfMhCKg3luYyf+u/muodCM5Fru5RZgyP07xQPyERqQu7eUfchX378mIh2
3n2ZbuoNucDf+0Q01cpFlQkCf/3yJhM9nlh8GvoQ6ltk5tOQ0u831R8fg6eU
7Nbui62uUikJ6jPPSxBRsnhaWTIR8rv1UUSkruRdupAD+cgnhky0YGhepFMM
uU+EVxrKslfJLyqH/PI2kSykHSSWs7kWcqfTOzLQ3zSmLPN6sN3ZLVmooGo2
/Vkz2F9o7X036upI4emEfmXxigy0caok0akP8ulDZ7JQ2d/IuK43kM9YL2Uh
Uy6nxxLjYKxKJCEWKf1I/ykw56H3WahW5ejDd1+gP3mzBAldN+YNPf4f5AV6
abmI0/lPYOzv9f1K1GajhrC3fj/+QT0lhYuE7LOo3pqbxmj5VXXlPCTwNONB
zjaa6VJReQ5q6/Vzo98BOevXpix0b9bqnjEv5GfbNXORKIO685PdkDOYpOSg
Xt79dzjEwN5V5CzkdXDb7VuSUC86rJ6DJM9+s315CPLTcSY5aNi0+7qIAtjJ
T5CEglzLLD0JUE/aOJGN5CJjzN6cgZyNoJ2D3ue6XJU7R7OSx2o6CUVQja5E
6ELefupZNlIcPG40awS5VZdiDpr9JqB/5hrMYzFNIqH4Tf90iFaQO+jty0Yq
ghNaf27SXH9RsTUb/TryQtPAEeaFhI6SUPr5bHWKK1hRsnvt+80q6Mw2L3Dt
sXwSWva4oXw9AOa3lDdmo9wYTUJDGFj/+61spFckpbgrGtbT492fhRgaWRVc
EyAfrmfPRqUjP4/0pcH6ySfHSMj4v75D0tmQKwwNZiDmrVUyIYWwHn1JWSZ6
IpwgOUmBebmXrmQhy+NuEoRq8JJfCBGx6xqLJWHoX3aYXfs+uIFE5hsh15UQ
yUF2PkJC2u2w3sxnUg3iTWTYVdgD9o7nIOFm8iTvpiFYL4L9eTR2ftm802wM
5nl8/3sf7RnP21E3Cbn1vy8k1LUYysb9GeY/s2EnInfWWyyOP6He236fDhbf
d4G5cxHqF/lk0vEAOrhZfBXybRNmYcjPYAejH+M7eD+3+CUj2dvzdGPMYCZ7
zxI0FjD49xg7zfWazKk5KCy1ZvkxN81CVTj+CTpWmbz4bRfUV0gM5CKdd65f
e0TBPz6VlSDbLQYfKg6ANXf9y0R+hw+/iT8E8w41sOWiFBO2V24KNCs5Pr+V
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
CVyRqriH9VxuWrmQpH508G01Wth37vt3x3Vjklgt+/qrd1KhK5PT2OAhjm/r
ukyBT13PFgc2Yv4rTjYW+LiLm8ta0JLtckGwfvu1q2OP0Z6PfT1B296CrOxE
uxaM2JCTiUo/Dj5F73kUFEj8m3nK/XvRQWbht0nyj4HzzOforf+1U8hd+bIN
owPs5+f3RCbpPh46umIIrZk+RCWTEdYZB0bQHLrLcshi2G7hN8Y+34EFOUT+
M59wyTvsJ6Con0N0JYefvP7APi+qM9nk9JHKsOWT6DSH3TkkIChSZ980WknA
k0JSy2w5fGfRIot7csi9UdX7hT+w/7bJXZmkV3iJ16vf7P30kcgiX3THlZZy
fGJ51+KNVCLoU/Neex7LAU8njNKJQl5srjcPOiwlJ2fu9+nZk/kL0d4r/qYS
Oz4N8UF+lmsPiKhnkaA9K54JCmG/EM+zmST93IfovcvQRp+9k8n99Hr9Cyuw
/kK1TA7pe5LES1+JueeJ4gQyw+FS3y+O/jcVkkWWbNW5vFgS/f3F+VSieFpM
RUMa/UVGJ4kcjJv64i6LHlzilE3OPGoqytmA67vlyBdFrs2mnelTQEv6PM4i
mXKe0nxK6EnlY3EEzPReqimja9ulEkh/qORt1x3oP+E8GeRb1axx9i7sH/nJ
4jJZ/uGxQO8edPQzq3SyRSK7ZYEGuvBhsCsYGFy8tlsLvX6xqT04Xjmsfl4X
PaEX4kpuMGR+Ug6gO/1vOBPq61/lT/XRkoklulC7tMuFxxDdLyXrBYNadPld
xuglX+dHw09P/zdOx3D/8lzuZUPzckZspDnLk1NxE3WQUP5ak2mJ+VedYxSw
NVk2+dSaZQ2D3EUAW2e002dPYa6+hK8OOOK89Ffas2xTbtbzADqU6T93n2WZ
ETUeVwupT5/TrZxZjmpUOFoHjh58poEuOJ9Wzn+1oLJMbT7VHffLvflbIfCU
nS9rvIBeOHbsHnQbUU6+88H5rdqCsiHry3+C/H54PYdVRHLANWYeKF7BPC6O
ZAPZut35SBCOP54iEAP8XfarPIMx54i/mwXP3ZKaE0Jw/evDFDIhd0mr171w
rN+zwjMLPJm/1g1EYv/NE99yYO+RTU//RmP9Gd5tOSA0ZRW4Nh5t/nIqF15G
RW3WTkIXXtaiQaFS/aB9CtqP1z8HfDunw0PTcX6Vcmoe7HeVUS3MxPkoG8uy
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
WL+9yCqM1MVXuWwWQycWJVLJ/0QUz/U=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{0, 1.2566370614359172`}, {-3.7487919033111385`, 
    0.0005937341188819723}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.622657965434498*^9, 3.6226579900016727`*^9}, 
   3.6226580358980103`*^9, 3.622658075168811*^9, 3.62265831366189*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     SubscriptBox["\[Theta]", 
      RowBox[{"1", ",", "2"}]], "[", "t", "]"}], "/.", "Sola"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"t", ",", "ti", ",", "tf"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{3.6226582796998653`*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
18iMga6/TtkmjX0CD+2cXXVnGKhTYeo1YJMPzxB1+uMZ6PHjm++kdz6sUqae
uZzKwNflu6+KxOTDo3Gd0FOfGChaphapUpoPtnv+fFVoZGDHV5lnXooF8HDJ
thY7aeK8+BqXGLqrAGz9rpu6bWSi8RfRlDjLAggvLy+v0GZiZunch5zIAjjz
5H7/GXsmhhQN/JigFUDuC63NQqlMVMzNHw35WAg6H/QS7fax8FiO+mRsVSHU
Wrx/XHuShbc+ZnBfkQqhX/eFQYQvC9kfXi4sky4Co7Z7iWmJLCzLvLFmYWAR
9G4+KFE7w8Jzqdb7Yw2LYfkC/ZXtJUP47unEq8S/JfCsvlaw4ewI3ut3iKkf
KoGNN5UPbw0fQe8tZb7/FpXCfgGx1YWvRlDrc6zpWYNScN6wotG2ewS/925m
bswqBZmVUZz39qPYvsle+/2Nz7C/WnVyZhsbRfO/1pTu+grqlc9KMvTHcKeb
yRzr6HcQjv47MXR1HK+NXxyfDv4BY5o+10PfTmN4ueGK4pgfMH4l/21b4TTe
eCi9K/DJD7hWLmqnXDWN9zRKgmdyf8DL+4Gv05jT+MpTWGiW/gPEdUPz1mrM
YDnlhRTXtgJSFB+1NBXMoHjzr21zO35C6461neIls7gk5YXFF8OfwPBdfudb
1SxK+130DTn6E8oqZLY4t8+ivJR0wZz7T7Ac+hcROD2L6ofP6M8n/QSRvW+K
u7W4aFUxcYi/pBJE/5O/cfI9F5/lr3cTYFWC2uuDGqx7PDxr4GwXPlMJ607e
Vl/4goeqVW/2CYj8gtGgB4Li6Tz82rVhk8D6X9Di8tel6TsPyUKbyf9sf8E9
ib4Wx3EebrNSPfWv/Bfs0o6q1LKew6lOD/PrDb9AKN7EmOo4h9/PZen+6/kF
SmbHI0I95/BYoNqqfzO/IOV+dti5yDkMfK3eylevgkrXyl6Rj3NYPrzDkv+i
CuQ0HP67tGAe7131h7CMKqii181GSc6jjWC+Or+gCpbcmWkNkZ1Huoy2JL+h
CnzAVW7N1nmU1N/1e16kGoKv2AcvsJrH1p9XS0JlqiG57IiLtsM8JlkUZ8yv
rwb/L+8mD7rM4w6XPbfm9avhnfuXDasvz+OJO3qm836Evx613eLpPK6XCdkZ
Gl4NC+t3mD14PY/MxC9K87HVIKmVfTY3fR5Dc/cKzmcQ671XfP1f0Ty+aYdv
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
gA==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, -1.9500000000000002`},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{
    0, 1.2566370614359172`}, {-1.9082945648309835`, -0.574575238115023}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.622658280435429*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"ref", "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}], 
     "-", 
     RowBox[{
      SubscriptBox["\[Theta]", 
       RowBox[{"1", ",", "2"}]], "[", "t", "]"}]}], "/.", "Sola"}], ",", " ", 
   
   RowBox[{"{", 
    RowBox[{"t", ",", "ti", ",", "tf"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6226582894915524`*^9, 3.622658290835821*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
IH41vdTJ2kh5Rdny24RDKxi+2UTZVRgcie/twya/N1OeiXK/T9zocjfbIkL5
6JYeJ+JLt6TFUVHKny+EuRIWfY3XLcWp+h/dqnEnRt/esPeTovyn5aYncen9
uru5Oynftg72JQYH8x71ylKWEOQLIC58NHT7uweb3skX9pwwGot8pn6A8rOv
0i+INxPKwdZK1HnC0btfErpfP4YHAOWbjUaviFMzUolvj41R7xOtP7GEymJ+
mY0utul7zZ4UomLJqDJIn8pXXuGeRiixLNYWG1HrhSR2pBMly141vz9H5Rtv
pWcQ+9lVOpf9R62fb9iWReRxfOqVNMPOWs3Vn0XsWe3x/tRlbLmL69yziUyu
HSN2FtjTZcu25RA7uVvGQ69ht310ycwhUnhufiu7gR3dMbkjlxDfwPtz6Ca2
CN+KkFwinq/wN/st6ryOC5O5xFYBY9pOR2xbni+78oiozX+X69ynzq+zOZtH
bN4Svfr2I2z/HyI38ogXW1XXRbhQ52msv5ZHbBQb3Uh3o+Krmk7nEUHinps/
PaWe92iTYB6xTmrntlXe1HlBky25hN+OVglZP2r9ihmLXIJTxm6XXgDVv3fc
EzmEp9yGvXeDqPXFmro5BPveIsWoUKpfYSqx2YTbvnOoKpzqh8szsj8sikuq
Y5HUfjnLuUwir0pYTSeG2r+ZZSidsDgNx0viqXp+DYWmES1XnDV90qh45LZ7
iYTLTLTWzwzswWUb0+MI+UcM7Qs51HmrlpVFE+HBrPpyxdT8sF9ZHkyc2ipq
+KKMirsl8PgStHTVs6x0ykz3UifiCtPtfFfN/z8/bq230J4f7Fccuyj/9A1/
hT49krAY6qHqnZV8F4vCVh23OvmWys/7qDEBaYRYWOe+p+pdJh+YjJa2et7Y
PEytD7PbkYay01Ns3T9R8aUXAenI/ECD3dQYVf+ugxWZiL96wsFwklp/I70n
CzVqr75D/0bNi0J5RjZ6NLDjrtQPaj7KXcxy0B4LzfuBv6j9dRPTOejTD+uH
fxao/C17jXJRmJOvk/lfar9zW0gu0lid4dJMG8fPY3cpLRcthbQ8VmDD5rbn
Cs5F2du+ub9age3son8mF5lnrPXgWI2tLbT0KQfxHZTzurkGW8SB0MxBDdXa
Pv3rsOVevXqajR7q3PRT3UC5Yk9oFpJ7F+D/mp86r9dxPgN9tMgJ3LAZO3po
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
w3auPW7WgtyEY2OU5an1Z243NSHfZVdc4/Zj1zXGLzagkDGpS+yHsJWP2P2s
Q6+av6paImzT8/IlNSg5J1us6Qj1vFNvTzFRduit5bLHqP5xTOcyUMmDA6MB
xylrbxkqR01qjCTD09T+OrnFbDTd3yb90QRbZOPGHdHEQkXQajVTbHrLsdR0
gjXBaDL5Eva0slRIPsFrM5h+wwrb6PyHOwxCSC/er/06tmMdazGTED9gYSN/
k+qns89ILXFg2bTc7ztU/+VefmomVMZy152/j/16wd6ojdBsvjNT8Qh7fsuW
lHZCP+dQ5zZX7AdOvsMdxIXQf7nu7lS/xqNZu4irD6qCxjyw3XIur3hD2F58
ekvDh5qP3jXf3hB31TQMMp5R84E4iroJ1x1r9697Tt0Xy4RpD+HN3cnnEII9
4ug11kME/QyZ736BPTkxc6qXiOw37jsQiW1+x8q/l0isEC55GY2tmGab2Utk
xg+H/4uj+uVfndpLFHkm3jdLotZrWbj2EowbVibVqVT9XfkKvUTDGZnDkhnY
Wbr+dT1Ep+KMkHc2Vd8FtsM9xIBQwdLXPGyP54Ue3cQn1nsftIsoN7IUvCGm
Ph+m55ZS9xciWtVFzDWxxGysoObzaXV+J0HLqXa5W4mttLjDt4PgeXBKFeqx
bRdHBlsJwYvrxGKbqPksv8/STIipvWFb3kbdx9fSP/WEAvf5moZuqr8dSYFV
xLl46xMGI9i0zuuJSUTHxG9+p8/UPPRJ2AcTJ3d7jiVNUPFPs1O26CCR8HRh
mpqn+PsqaSiHTd5w2yw17+c2FeQiaY1KcY05Kv5e4GUxEuh9X/3yLzWvn5pM
KlGg8PXgatoknu+tjGkmWnX5j/nUMmzbw97na5Frmqc83wrssT1Br+rR7+98
bMqrqPW6FbmNyE4xsdOCC7v346XQZjTxSD4ugHuSet+Oq7cis+pKu5L12EfD
Yi62of7VOiofN2IraWYua0e6uh/WcQpgc7Abe7ajhrDrQ/JC2DuL57+3I5UP
f7LOi2CbSG043IFKtns5PxHFXvx2xaoD7bHm184Ux9Y73HG3A6XmJG7plcJm
2217rQNtW5D/RtuF7aApu6sDhUMVISWHzTvf/qkd8TzR8dPdix3/19+lHXk1
fTh/XwHbnDeUpR2xrr+xK/4AFa9fc7UN3Tu7uNikhG0UK3GlFc288mr6CVS/
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
NT1pBx7ucp037zGfHerhbNg8cvxS0Adqz1IztzYwa5mJ2zuM+T37fQcLsh4o
Tyd9xPve6JtqhNdur1aajGG95fW+1wGXqftB3nHcT/3cq2owlciPdJjEfulR
DCkF3zlHayW/Yr8942zKg2eDk5/bp/H7IBjDyoA5GZv2Kf3E/TjUPR1hQxDL
buQXes2qy2HE2MUhNPI3xv+I+0QqSd+RMcwxa5Kud1rXV0Q6xbQW58ymVkiX
Wcok9D8TP81JzRPmLlZF1vbftl7KRT20XmamhhjUrglq4KZmCFzOqideqXVF
l+dR93atVGoiKQHW/fK81BI1cwNaCNth7oJePhxvuZz6nPzWS1C8z0/tbvW4
lkXWKO6zUBOk7miXeNxG9Jb13Z5eSL1m3WJtNvGc8c5JWYzn+595xyZJb1f2
mApTW13R028nrErgWrCU2nb2rvh28jPxuEK5CHWKVQurnay6PWPitJza792H
/9qJtl3EdWkxasFKRnU7cddRznghTp27fbtHO4nb/Krz1kpqtT8FEu2kWdid
Q1mSOn0edzKbfPu+ZO1HKeqZp70L2ETqdZ5+1Cpqvu3fDNuIVrnBFV1ZauNS
less4hY3mTR7DTXH/onVz0nMjfusXDlq7/gq4RbSaLvpp/U6atbWkvZGMnWI
Jb1Mntqxrel0PTm4iP/iFQXM5/vJpVXkS9Rt8f3bsX5nnT+nEzGfNQe+K1Ez
y0yuxpD9p+sc05TxPPWv41dJxLq51fyEOmbs/kACqBV6n32phvmyWj3DBNlm
3zt2+6kLJUKuVgHPvx/JszSo67evfl8DI5MBLaEHcT+XGLl6aOIOHlt3CM/3
nKXZCOmiIQIVWphfc6t9zRC48ZGCoTa1xg7txa3guO/JkVEdvF/z+YLnoGcU
6+x9hPrhM3YoC7aeS3wgrI/1TZNTbgPhq6m5aQZYX9Z4dRtM3894sduQ2sAv
WJENXUlZ0x1G2J8eqYFsKC7OW3rWhFpotKOZDZGtRUp/TbGfls6aYINXX5nJ
QzPqgcRNv9hwYrrCQ84c78t9bZQNqvNrI+AExrM2qYkNUisaS/VPUn9skPFj
A+fm1p6hU9Rm1yLl2TCozv5zxYpa6WBWSRvUm3SuXGyN+Vr5eXMbpNp3q6bY
YH9rOD1kgf+1Nyd3ncH864RUPge7kD4f9ll8DyktW1tBO3Uw3sYO+0Fi/Foz
KJSNVM/YY76bmemNMDnwhWu1E7VqwNLkWuj4Pr261Bnr97zDsxry+X5pHHHF
fJRHqFSCx9Y5dy5fxPpEg8C/v0c1uNMFL2E/nby7NR92mfG2JHrgeXF2B7OA
w3exAOsKnqcV4fkE+sKWKpy+iuOau52vQ/VT0SM/vXF8qXrOdXKrXfrBKl+8
T9YFjhRi+2F1btEN6qC+FeEMovlr3QvtW9TjjxbNzyPrBRSm+/3w+zLXV6eI
8EtvXXrJH++zwMiyjIwrKinxB+B9uiajmaRNU8Uk/i6+f+t9jpUk21zVQ+ke
zj+lLlFNHjqrRbQEUXfJfM2oIW43NUpP3cf+6XNdWkeMH2v1fHuAviB7rJ4o
P9P9ExCC+Yl9dLGBiFYarJQKw/rHJJ9rJDMvjFULwrGeV4wVm8ibYbOTWo8x
f1PTnU2E+dvC510Efi/mzz/cTOIWno53e4LxapqENxNfmTPVvNE4f/doYTM5
vcP+fUwMvofFHJnNZP9hJy7FOMyHyarLzWTNyQurm+Kpv5fprWgm8y9c0rBI
xO9pWsOjJvLR78qZr0mYX2PDsUbSGnnN3z8F4yudI95IMhk3nq5Mw+9biufq
BqLmGzrS/xTvu0n6Ux3pMkqWS8nA/G33968ldusKbe0y8XskJDO7hnD8rU9W
yMJ+ncVhVEUesl8NTmVThwuaBlQQuaQRmaJcjPeg86FyoneYL2FPIX5fol/K
FJBBCfH+ucUYn4/d62ziMSUv1ViC97/aMpFO4iN0YvTKsX+WivCGkqnh+5GW
tdjvxvIPU8CvLP6/1fX4Pfid4s8AseDc5R8b8Pu2d2NqLjCsakwYTbh/d0dU
IagrdYa7tmD/dV87XQrdvB9eKj3HfojT/FYO599+W/KbheOcVskVMDuHx7CC
jfWxfrSlCkJvLgu50YHfo4L5UdWw1nRtx8FOHPfsHqgBkN+5mL8L36vWCa46
0Julpcd+hfHyKM+qhw8dZsGh/+H8k0Yd9eCZYs8y7aEWmRjxagBBTy+BlW/R
gc4cjZCgc0+7vxf7bU6ZcSMoScfcTe7DfhB4c6sRmqcZzecGsH+/bQtsBIvG
Cl6FQaz/n7N2jTD1hK059QHru/iWdCPcduq/XTiM72f+nLwGWKE+Ve85is48
JtUA2SJzefZ8wvq++WZXD/s/Ch+Y+xnra+4XWgfd5bI3G8axPt07Y2vh/IPt
NXe/YP4fet2rgdk2Gpx6U1hfvXzLaljHf9an+xvut7OkrgKY7zwqon5gfDMD
ZkwwyLvDYfmLWneTQE0ZeJpleI3+wXgWfA8tAEEFKMv891vy3/fg89czuZAw
5/mMy2xqhZSVilnQkjbuMTOX2sJ0NDkRTnnNKmZyU3tnza6Jgukji374zkOv
9PO6Dyt+bLm4YAE1B29/mgvJblbLb+NH3+F+fo8ciDn6NUQQDSnaj8lrF+ut
potwf3llrjjieOCiywohaom6ar8kwinql90nTB3DGEpKI+Fj4RNJS6l7y2+Y
PSPrK1MVzi2jVtV8zWKQipBih42i1IJDxTuyyf8A8BypCw==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{0, 1.2566370614359172`}, {-5.885437235786384*^-6, 
    0.20615356086339243`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.622658291651779*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"dref", "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}],
        "-", " ", 
       RowBox[{
        RowBox[{
         SubscriptBox["\[Theta]", 
          RowBox[{"1", ",", "2"}]], "'"}], "[", "t", "]"}]}], ")"}], " ", "+", 
     RowBox[{"\[Lambda]", "  ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"ref", "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}],
         "-", " ", 
        RowBox[{
         SubscriptBox["\[Theta]", 
          RowBox[{"1", ",", "2"}]], "[", "t", "]"}]}], ")"}]}]}], "/.", 
    "Sola"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"t", ",", "ti", ",", "tf"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.622658338253448*^9, 3.622658344573155*^9}, {
  3.622658477037118*^9, 3.622658483226088*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
1l72gycKNxdGw0lneb22eO0HR1Q+uhucJh0gvmv1sR8oqCu/yonE9yPJQb3u
B7NaJ/Uo50l3ZhfnxfpBoV7Tfa840v2ly7on/eAgsPI1JeB+TmyaIX4gYeIa
J5lCOmY661qQH0yY5y/GppIe+vKvJNgPcqznvD9dIa1wqjI5zA/22mn0WF4n
XWCTbBHhBwKOkVB0A78fOnRbz/nBkHPbI+YcfN8n2W4n+ME1Ny6hwHzS2iu/
eS/5geO+fYldBaTH7AZNrvkBu9e938qF+D6sDQhy/q4D3w9efoCfz1jxHtLJ
vnpvfjwmrV/NSX/FD6wDYk2cSkk7dU4Pk/03Br9+Ul6O+y0rm53yg+ZQfjHe
Kvw8V2WaDvpB9In9F8NrSRMNkndt/IA49Wh1GJGul2BdlPGD9bPL/npN+Hlu
+jS15gu10UbDWa2k24NP1730hZNxSRbrbaSDn6ZJpviCZuKbco9XeP8uTg0z
X1hMEZVs6CadEy1utXQISi/7pYn3kzZk05vOPATB155SYgaxFx8/UzsESplr
Rz6O4Plqt+9qPgjzWRZvzcfx87Q842RxEIryLtsUTuJ52mmeNvrAoYLRqk0f
Sf9+2Seu4gOShVKyh2dIezNxeV47AO8fBKV3zpGOKPBQ+7Yf3J/ShV76QZq5
eH9onDcIPds+ubBEehbq9jV7wXD1dXvHP6R/VgqU/vEEp8atClsok0DJkJmh
v+EONj07P95gnYQoOyFzOjdXYHyTvXOVnXRr0ieRY87QOvSpYR/3JNTzLa4Z
pewE44lTOWKCZN79qHN/qD35d9zCEi1C9ntO7VMqsIHnn9hOfaCSfpmWeeet
BWh/u+16V5Z02Jqy/GkCfv340rJRgbTlIYe0Ph0o+6Wl7qdMmnF+V/G0Kiiv
d7AraJKOatd4gnhhnoYnMkWHNIX7h8a9+rqiDZ5fvuqTJr5HMaTyImnWxbYn
JqQd/tF0n1dBjiGMMsPmpOsFHx76o44iB4ViKNakg5cOJzLooIf62yZltpPO
s+C9V6ePhvLNDO0dSE8s8nhxEmjDxt03j+/E640cE1KMkGrAkd/ZLqQLY8P3
9hsj955o5xY30jOpLdNzJihJ83rp/F7SshtEFl6bosqbD9i4PUmH6zffiTBD
U5T6AL39uF+Lx/cfZojjYH+b90HSnpeivbXNkWHHjHSiH54n9b2xhTnyV1k7
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
zBue21D7TiUD2cfYJusrVDbo0/4hnPSENMHUJ5IsDmPCFetfyvD6jk8/shXh
6yeD+qc1+Hw0BXXr2rDcSZPPg/D+G07vOmYAlNKWcycb8Xxhq7xbjIDz9HYT
aMPvR6x6p48ZCHpxSN7qJO1pzn/Y2QIkzd/Qb+jG68Xl3wpageLWzI+H+nD/
hLlzFdagyb6vtX0A5/yHEiVtAZbE7imO4HkWaZ54bAfLkakLqW/x/LvPPTto
B46o0PfnBO5/ss5Kxx72FARYuUzh8zSFSg3bQ+/sCl/kJ7w+ROeHsANYb0uY
uTeLn+/1nw+1HKDxBG9l9xf8PEM+zpDWrbtz4c8CzjdFhkk4QCm9uqv4Ip6n
csfnz/Ygb9MobbOM+yt/eb/HHm5ddvgVukJaLGT4Z5YdCAyNt2St4fpierXS
7ZAmEnithTJP7n93o9UtW2Dy+XvgKx1psSyB0AM2EP0gQZ13I3bQ945VK1j5
zktPMJEmgg9GBVlCiPbdPl9WvN7H91KzOcyeVb99mR3n9crNS6YwwrzD+AMP
zjMbaDcagaPjOw4WAdL1el9P9xtAe0bgpLowNlf3xZD/OrjveCrbMA7gRqGX
rOyQvcexj2PcxrFHtggpK5FdJJUkWUmJFClRCEVDmTelSJIkIcpKEbKSkXrP
df78fn7Xfd3Xcz/PczjvR682qpNMjU8Sh3qetUg7ArqGnjfJEiimmXR7eZUe
cybZZziogY8f7s8QxKmdXzyPa4LP079Ok8axbn/+dOqCJQLVStTx4o3Uzl8I
+tnY6KwR8aFJvnxhY9gvX/mWlB52j9TQCbOAehatD1FGuKf2+X9XrSm++euu
pR4ZW9I4DLbsBj8wd56k/P5gOlI27UCxd//+0mAzTDofcmyHC5xP9G+9t+b4
wfs/5rpuFI98jN1gscRyAml8fh7Qf0esu5QVvuXN//38Psir9plzWWOBkpIn
NQdgvvEQjn5rfGlW49wXP9iPXvZctA3+T73VhSkQzvN6zvtRG5wQ6yClEgy2
s2xWtsXrzSO/3EKh3xhNEbLFEYyhLxIiYL73QanatnjaZvNy+RHYP0eVcckG
H7ic5tsbA/W7aZuv2ODBQX71zeMwv4a9Ho0NdhAtpZc6Bfvr1Lyzs8YdAZrv
bROgXmFPeYgVNrrXeiv6LMzrvu9IqCWuW3aIuJkM+daU/RYWWFVn1PBVGuTa
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
kFUtgilmr9P0IZghpsoVn9HDcP/yZ/3dzRHiKss+FkrxwSWtSA8LdPT43jaO
cIqJ1bNt2paoYmz7WlkExeZ7SycWLdG4RbOcURT1/bhnlmyFIg6KuPQcoZjv
X0vjbytEdy7+9IFo6Nfk9EbXGl28PVKxGAPPg+KzJ17WSKTVoD8hluL+yoZK
Z2tUNXaTfkccxcmM74fFrRGipVUuOkHx94pipg4r1LVrv7vaKTifLxunzKyQ
l37L2efxUF9tvp5viWY9RKsdE+A8DFMOdFqguOOnh8bPwLwyocd7zRHLtVHG
qLMUs3TnFteYobynhmpbzlFcZWrfHmWK5D4Wel1OhvMxT/3HZoLqftGmSqTC
/uUuFqnGqF/12Qj5PMWlC9OMEgYowF6M5UMG9D9wafmCLloJTdDyy6RYMNNi
7CkRcVcaZZzNgvO1+fVxHwE5SD/XeXmV4ijCXiO71aZRE/EAlzyKG7aETKnx
4TDfM5cm8ynmIuu+IUviC4XGUww3KSafPPDhshru3NmaY3aH4kdP2o0cjfBe
ksSzjyUUrxqzCZuT8fSexNmAMrj+nr//JExxbPQE3+pdiofclzy+meFtOWRy
cgXFnU5jKUkWOPdRcSjfPTg/tPZhqxWWeb8lr/Q+xZkWtsNe1vjJgu9LYjVc
X15a/0UbbMr+YqH9Adw/iW0hBba4T0lSyO0R3L//3mrG78Z+NmfNpx7D9bi2
K+y0w8tBXyOPPYHnIeh1sbcdTkw1ubGtluLg4HDpC3Z4R9ntjqt1FKdrGCuX
2OFbbVtXZBsovnx9veKOHVad9BOta4T36UT+WUp9y5aX1paY4vmyd/v322E7
camYwWaKi8OIDJT9RgyTig49g/qHb0/E7cah3pNd68/h/ooWeeTY4r8nTddT
X8D7x1o0lGiDM67fkdzZBs5iIZlbY6EGBvvydni+WN+zTVjiikH/OJ0OeN+U
Ova7WWDdtZclr1/D/j/CjcvM8Gte6fd730DO8S2m3wS7a577+6MLzn9STfCb
MT4WaebM0gPvo3jsK1+Ea2bb6Gz64fMgaO87U1k80u2v8G8A9r/wWkddCP/3
aKtL9Sdwt3eexr+mfbHGZdxfoL6kCnmIolTPsZ62EcjfKGV9lEePDE7/OTYG
8+4XdGVSQ0yMePfnrzBPpHYWqx5SnfY8lvkN1tus1U8ZII83f24ZTcH5uPEG
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
Dw==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{0, 1.2566370614359172`}, {-0.0011821403272644915`, 
    10.689031751240218`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.622658345713252*^9, 3.622658484638919*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     SubscriptBox["\[Theta]", 
      RowBox[{"2", ",", "1"}]], "[", "t", "]"}], "/.", "Sola"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"t", ",", "ti", ",", "tf"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.622658530314227*^9, 3.622658532106764*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.88},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{0, 1.2566370614359172`}, {0.9091432649613731, 
    1.6258352977906765`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.6226585338928137`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"ref", "\[LeftDoubleBracket]", "5", "\[RightDoubleBracket]"}], 
     "-", 
     RowBox[{
      SubscriptBox["\[Theta]", 
       RowBox[{"2", ",", "1"}]], "[", "t", "]"}]}], "/.", "Sola"}], ",", " ", 
   
   RowBox[{"{", 
    RowBox[{"t", ",", "ti", ",", "tf"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6226585447702703`*^9, 3.622658548106935*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1:eJws13c41d8fAPCrrGxlr+y9d8Y51whZ2SuyGvjKSpIkq5LdQEZShJBsUj4o
pVAJSahUkiRJCK3fvef8/up5Pe9x3mfczyMxv1CH/ZtIJBI3PYlE/Tf47+vY
4LN7AIk0mOQmeJsQjJ5JjjPeAUmRva1H/D2gdxxrhLnxLkhq0DH8rRIEE2iu
zioYu0NSP4np34NjcOv9OQkR40BIGpkXkF1NgeWOz1V8goJh/N3NNiMTaVB/
ulX/2vlQSAqJcghtzoQNiffkLnyPgF0LrcJ54ufhRGmWEa/xMdhVf+/vzKE8
KD2faK47GgO7QiF5o+ESDNOMsnEPioVddPuF25byIe0DT/fC8ych6Vzq2Gm/
Isjz42Jb1vdEKGp4yG4osQRCLr/BbcZnIWn6WaZJcxnc17bHUZIlFZbQ6mXU
qV2HqZ7Oo5qjqdBH+/AoQ811OFJmMekclA7JdU63cwrKYYCWymze+SwYz1L1
g8mnEj4MvqjlpJwNyS83eVcMVMJXgPOo54VsGH/yyfP/dG7Av++ZNoK9zkFR
9rboswxV0ELh77+M7+dhSaLG/vHz1dDjT4xRrssF6GMkGh7zvRoeevYzsfjO
BTg1a8h9zLYGnj/8ne7WqYsw/v6NE9Wbb8LJO9PMg/y5cEr7yMvsPbUw3Lqf
d6txPuza29Cm618Hwc712fxb+dDOjTfj1dk6yAJk2sWECyBp425X+606WK6S
5Km2RnEoeGO5XgfHt+pftastgot/vxn8TKqHFcyBEWOCl6Ho9hcti2X1MJI2
z8Tn7GU4tTMl3PhBPWRfXfoYuq8YkgXHbq1vboDXgp1zzFlLYNihF+s0MQ2Q
MXD+BLNpCVRVsY1mzG2AofuTDjyLKYEkS4vtsfUN0GBvvY7rbAkc5CnMaJpp
gKO7WccP3L8KffZoWlRbNkID67J78htXoSqJt97TrxGWWuhXL6hegz6Ho7Iy
jjXCMKPA2KjiazD76OD2qPJGyKzxQOT0sVLoI6bYW7jRCCNUPBks60qh6jNm
50S2Jjim8OMb66dSaJf20mtNrAmWS4p15ziVQXLDk50F5k2QzHPC/7rKdZid
evT0pwxKfCuXdeCB65BsVaofW9wEWdmrNZUuX4eL/EoRtbVNcJzhFV0zUzkU
vbw6+f1JE4xc16zs+VgOS57WJYoyNsPxlf7sFKEKmH3igs0T7mZotOR3zNqx
Ag42dk9JSDRDti/ZliNdFdBn+ivTiEEzvDE5P/+hsBJm369/diC4GXK8SnpR
MVQJVTOTAlOONsOoFwLEf1tuwDq6uNS9ic3Q9KlF1o+oG9Bna4erUl4zfNNZ
prbZoQqG/YhqjupohhrD7+ilT1VB8n1uk8cPmmHKjMikRVsVzK4zln7/hBJn
zT+dKVINRRNijwa9psRFR/fU21fDqdb3VyemKf00tqmNJFfDrrjyAp55Stwj
Y4L/SzWM57xk+XW9Gb4+1FdnIFIDSzZplqaSWqB6AsNpb/saaPdWjHWFvgVO
ViSoXm+tgSS2a5qa21qg2sqRU6rJN2HJAS7acLkWeJqx0cOx9SYM089VSVem
5AsuqkTN3YTZN929YjQoceOg8Tt2tXDKjD9hyKAFTjhX3HqTVAvj038OGhq1
QNXA6WSaVkp8+tNo3M4WOJ61V8Vc+BYseZldmGzTAlVKC2mD7G5BHzreK5b2
LTC5ZexVetItSKbzfz/rRIm/dkge+nwL2rlH5NbtaYHGa701MWx1cDFHRXdi
bwv8mnCAl0W2DoY9Hjw+5UuJ55TOK++pgxzCXaonDrbAeRFj167IOlhiF97F
HdQC8yqnuu0zKfHlceW0YEq++knFDxV1kORdSPcmhJJ/RzgvsrsOZgtpDbCF
t8DcnXdp6Cco/U24GEUOt0CjZx7Bect1MN7+sAHLEUr8fZ5Ru0w9XGSZOHcm
ugWSg7VrrIzqYby35y3umBb4ZWWE57VHPez66EEkH6fknzycEBJZD0uOm+u+
iKXkb9k6/y+Dkp+SdpEhjpJ/vs7lXEU9JIXftRA6SckX2t0t3l0P64ZvPNoW
T8kv/6rQNF4POULkTy9Q/EUlPXfncj0UVUr/XpNAyb8tT/OStQGK9nMc251I
yTd5/F+ATAMkuWefHaX4y8DB0XVyA/Qp+5RhnETJd6E3SvNogHZKCd8uUEye
KqsWiqTUj9Pw9FP8JdCEpzaDUh9x5OAsNf/Hu3hYQakPCrSYp+afiP8y2EWx
TKXgS4rn6Le7+I03wPhzrcY3KM7J7uj68aMBTvlbCvtT8wU8FU6xNkKO4ekt
dNT80o0cHplGqPrXdn8WZb6LSvmkSnIjHEziTNtEMWzV+W+HByVuovpiL2V/
c+TRF32HKd8VfouiMsr+L/ZFkj0zGuHiyzqdEcp5PXq8sPMQ5TvD0X2+ZYly
nr8fBVjFdTZCO+8LKb9PUN7jo/d2WWON0MeN6/d3yvnv7/V0KfneCEmsp/YO
U+6n4CHl98XUBO0qvv8qodzf0wd2vvckmqDq/v+27znWArV7TIOnnZvg4FCb
SG5UCwy6T4SvhFDyTVZSeSnv4co93aP0KZR8PVLxacp7YexWTJRtp8R7kp4o
h7XAVx1cl4JFmqFd/XxVbUALZOvIvHxCpxnWqbLXlh2gvMe7jKWZds1wcfjM
wdR9LbCq/ffNOsp3JIz0eEnKpwXGtk7fX55phj6vr86XurTAupa9j+kov2sf
PyMFEcrvZbp57CkPfwsc5E/+cZbye7JpGnila0VxyokNbesWKFLf9C32VgvM
flNaPk9ugQ51yisZj1pg/Oq2P2uGLfDMrcqN4neUezpy/PiaXgtcvFlE172t
Fca3xdc912yB3VXJgnTRrZAjoJVvSaYF7itzMs8gt8G6kx+zOFla4KXSp9bF
7m2wK1YtYz9jCxy4ZuFwK6IN+khzHrxF2wK1rhp4PS9rg/H6ihZSf5ohfbHk
Ye4ttyHH9/Key18p39e85eLLz2/D7Otn2KcGmmH6lEfK0/nbUNX/HK/Zo2YY
Itcd/o+hHZLe72++dr8Zat7JMPUF7bBEL9uS3N4Mu95Iz0lWt8Ow+aA3HBXN
cEzKXasm+Q70MZz+LHWyGTI2dfS363RAVe4NoVU5yvc1wOT3F9su6HPCuTgq
tAke/3Hox8+Y+5DkuOwZtdgALzWJBZC+PISLtit7jmrUw6/Sprq/Lfsg+WeD
7NO+WhihXfv+givFzH6ufB21cHUnX4bCPoqT5jf8btVC0v75dx4n+mB8vK3v
xoVayFV6Me32LUpcTMlFx6sWGmz/+CaKqx+KDjTvF168CdN5T5/6/rofkg5a
z+Xw34ScMosqZ+co8d+qFiEsN2Gutse46M9+WDJgHWD3j/Jdd1ZWseMYgFPq
wF/jYw1sujA6Vms8AEVrj3rF1dfASXYZxeCKAUi6rs0cZV0DFRgfDc2EPYFT
JW8ef8yohikGsqGZcRR/zSBdSqiG02EpzNrpT6CPyd/CvUeqYdErC9NTFU8g
ya38g6xXNWSrftws8YYSP7vX75ZSNVy06b/kY/UUdh2eDNszVEVZ/+necaln
0MfMW+6hTBW8khW0cuDQIJz6wVonNlsJLw9dnbGnG4IcBt/C1QPLoXZI9int
nGG4OOL9qe96KWwvM/HnN38BSVvGpyYPl8DG8zLlPyZGYXzmTS3u3gKYKzgo
M3B+DMZfGT4lzH4Rcv9RcS02Gqfk56n+ep4Ko2HiiY/mFJNerYiUpMLJhJFS
RdtxGL+bYZ9RSCosoz+22O5Bif/b5JTIlAo1Oe6dfXmYYolGuRXK35kOEk53
Ocop/tCcWtp4BmbuihZLYpqA8Ut5mmYXk+FSWp95H8cEJGU/OLDLLxm6PBUK
4eSlxKNs3lmpJkNhx+72KxKU+MJKp+1AEqzxZHK6a0BxxfRFa9ok2B9adHol
hJKvTcesGJkAGXO7vhwcpsR/L4QrVsTCsTlWZp1xilMvXCvSi4UVcI88/TuK
13z3szw9Ds0+rwSULVC8vszzZTkGJhsozExtmYQkn6D2X5S/u53ORdPVcVB8
ot7baywaSsw8kDzJS3Gv4cWE0Gh4L8vHX1iK4mt3nZeuHaXsM2fKnUzxo7fP
bwpHwUGdD/9kzSkWeCnp2nUEXklX3b5mQ7ES4Zy67wgE2v1euXso/np1b2R9
JIw9S5oYiqJ4JJ2n0vMw/Kny3wurmxSHPtUM/hEGHya3LQs0UZxHf/1ddRjM
fUXHNddO8f02ulP7w6BmUolDyiOKI18kJbWFwojRF896PlA8NDLAX3sIGitI
fLswR/X2pReqhyBnfBib/3eKm+QfXGsOhnVyzDY0/ygOjr1r9eA/uBBL7jMU
eA1Jm+YHv/0KhMTzjM8sYhQvKhjuzAyEGdITjJMyFP+VSggUD4SKg0fMY7Qo
nktTItkFwCCJ6p4WO4qjswwudR6AM4+5O1XOUEyu9j445w8vvPt5JzWD2n/9
56dCf0hef9X28QLF54nVy7b+sFC2uKGwhGIPBbm8Vj9od0a6nKGdYvX0C4Z5
vvBPMWOpXxfFU1k0s/a+sKpl7krHQ4pt/zWWsvpCupna/MPDFM9Yy4IUH9hu
qpPxdp7itVgtwW3e8KAnf6reD4pTGBlLLu2FXJG/TuesU6wZWsAguheGlnbG
W9G/gaTZz4d8Nb2g5CaLyNbtFM8rFUVF7IFZnW57shwovrTVZwdwgwYv9dzm
3Che7nSqfuMK5xaEnHd6U1z2/FtOvCs0FXln++s/itMVlzseucCN2EDjg6co
birbdTfQGVZctIL30igW6h5x5naGTjVKBsLnKZ48xWZwzwnemviuNVxMsUHA
1vHtTnCfXowcbKNYN4Jm6LMD5HTwlC4gKOZae77zigMkAoHESg/Fbiy7p50d
IH/+JuHq59T8BeOoh/bw6c9UDt4vFPOliFxpsoO6zYU/F4TfQhJHYV5Pog20
fxv99bkkxaorB5/R2sCgLS4fmhQoXtt/50eKNSzy4ngWs4PilOXY/XlWkER/
qpzemWJZxQu/+ndBflW/os97qPnZAVNeu6C6Bzw/4EdxWDt/4XcLuK92/cT5
MIrJt5gOi1jAXpcQZ5F0irPd9cbTzeBUvJUVzQWKF8vsCxTN4FqVrNF0PsWP
glRXnuyE8v/eK1ZVUByQT/Lh3gkzK1xpte9TTMpNtW8xgS5r5EabDWr85Fsd
fSOoy5nldIk0BUklQ8nV38nQtPzEsy20FMse2+Z+gww9Bz0ezDNRLHp5q40Q
GWZKctc38FFMVn3PIwpgwe3NipJCFGdvaCZcMYQVtkvlOdspHpRy4RAzhF3R
z4qipak+8POovAFcGjibAjSp9XzxUc568K9v9OY6HYqnvjxk+7gDMv88ECem
T/VXizNRO6CkmGkkrTHF8ZJOa8W60OXIX+++3dR5/Ib/0erAduHDOi7/UWxn
tHPXdk0YLdZxvTWEup/vm7/3aUBtKQYu/ghqfozGxlENWK9YuDgRTTEH7y6B
UXVYqX//hu9pihd9U9auqsEDkJXv/lmK634EcripQQkT19OSGRSryojtZVeD
xZZf/D5doK7HffN0girMcd8mdOgqxT4X92/+pAwdvLxSn5ZR95fleny/MuTw
rVhTqaSun6W0dUYJpgfov1iqpTrCMOarIkw86p8ZfZda72tO5lKAYTmNpOSX
FHdlz51vl4HK+X9CPo5TXbtHyFUGzheZvzZ7Qz2fpkSzFWl4sGzi9paPFJPy
E/y0peHexs2Hs5ao+y8TIfVLQqFWm3eLK9T6yVMvD0vCV+15ux3WqflNmkIi
ktDpnoIiN+kdZd7fBS+iJKDVc8ePBaxUrysd1BWHjC8uO/7moDr9Mf28GHw4
9qnbi4viko9xMyVi0HjqeLGoIMU+hc72bGJQ91upa7ksxfECk5kL26E06/Lj
ehOKu8JD7H8JQocIRplXZhSTQu3fZgjCky+FkkmW1Hw1Lz5xQTh2dSfYbUdd
r0o8arcATNPOa5j3pFp0Ra2DD7YVVrNz+VDrW3QjPPngNKkrWN+fGr99SekP
LwT9s9KpgVQ30/0y5oWL3nqFMlHU9Q/ke7zlhkIPbNdsj1HjZ6Sfn+WGu+T9
naNiqS4PzNXihteW09gfJFL7e7OuZ3NB57Ovk/yyqPUcOedctsH2hvjgy5VU
b2sN5+OEM7w5j3uqqebfk/2CA247cUN6vpa6H2OJxgscMNh8aEqvmdpPqmZ1
KwfcPinhPNZNjYcqhumyQWsj3YZ/PVTv/SZzjxVGl1uzyzyiWry6xoYVDoUd
eXzkKdXNLoxBLDCZrtdw2wTVRbOWrUywLmiiQO8N1ZXGd22Z4Otn3376vqOu
9zzx0actULuAr6HuE9Uu28+LbIGzykHStstUO2uZFDNAGzdW9rOs7ymeS+V5
RwvrzK4ELHO8p/Y3mT1DC7dqqd3z5qLGG8qvqNLCUU7nI9qC1Ph47/zpzdCn
v2jigyw1nm+rY7oJ3rutrLVbkeoh5YlVGihV2ZXZrkLNPzb1oIoGziVPG53T
psa3Pt3DQwMjgWIlMKU6r37j5z8wqkjQVJlTrVWdE/YP7BC028NtRXWMS8iX
v+Dvz8Ns8/ZUV2Tc+vQHpNTficz3pvY/fil+/RcolLQyWo6hxl3aR2PWwN+t
rwu846juXFfctgZ8aEKX+xKo3qS84+ZPIPnmfMXVFGr9hJXnzCqozRtn3Z1L
Ne83muAVwHE6+GB7PjXfQ9+acwUcjvzbJXWZ6sjHvG3LQNdePPJ3KTU//yMX
0zK4xxQ0fqOe6pcPV4glILn+S4O7meqWmfjQJXDmU0ZGfBvVA3EzQkvAuqee
7NpJ7TdefTT5Oxg9sV5O+4QalxaI8VsEnxdTDnvPUuNuuyVq50E7+eOd7C9U
55wKMJgH6dlGtPcWqG4WChv4ApRVNy5KrlAt/rzo+xyIDP2v5TPNB4oTcjns
PoOdnb1/Beiojnep/zILeNglza0ZqWZgmEiZBbdrJ1/WslGdb9Te+wn8/Wqz
fliQ6j/1zK4zYNCwyui6CNW67GF/P4KrGfSpo2JUG6boVHwEpkqdAjtkqf7t
N/97GpwNVjX4q0l1TOvl2g+A68vWkym2VPeZe/i+AzN6ob237an+dblD6B1o
Te1n/+JEtdR/PK+mgId8conNHqot+JacpsCVwJXurQFUy888qX8Dwm7bM5n+
R/XM5TO6b4DxllqHIyFU5/6T7H4NpisPfHgZSTWomH05CeRnX9JeTqCaNCgj
OAF+6WjaPE2mOv2ZTd04GDiTnfPvDNWq3NNm4yBUZpe0XybVmiFN0a9A04F2
c5lCqrmcTn17CeDHotT6JqpZ7g+JvwD3Sp0eDrVSzbOu+HwEmPqxbFpupzpC
bFvCCLB8e/yYdjfVG9cnp4eB0yuPgDtPqB4rMm0dAqN5W8smB6m2yzgRMgTc
Xfre/hmm+iFxW3oI7B3e4Uoep1qxyrPgOQh4wmf2YIZqhxS1zEEwlzaYMPOZ
6mLFGptBcMgypYPhK9XW10TYBkFE709Nyx9ovzsfSDwDsd2jEs/+ofO4y7Lr
CTjXfJHmFd80xaI3S2YeA65Ia8MNQarjd19LeAxy1WmPCW6nWnZIXuQxKLp1
eNFLiuq6jSd7HoHyGw5v36tRXan3c/YhkA1gEqTVoppx8E/WQ1Atfc9FSpdq
C5Hjug9BXana04MA9W+8mfEAtF/m6Ji3RP1EK8x7gIHnozVWW6p1meD6fdAp
EK+pYk/1LNO2mvugJ+9bdbgr1aR0De774Om5pwWr/qj+OttKN/hwKj2adIJq
8svtTztB0ZPuuv3xKK4gv6sTOHH/nO1LonqwbN9DAvSU+brnpFLdJanS2wHK
72vryV9C+eme7+6AvczBEVmFVIfRvAy+A3gdr1YtF6P56fQ32kHKe2bBzutU
+zDfEGgHQTTvfjk2ovW/EmFtQHwXj+btFhR3MGZqAxPZVsEi7VSXKMhdbwXW
oi2Ts11Uq4a4vm0BSjCt48RT5E+O+5vBYqzWyYrPaL+x8a0NoLInqJXlK4p7
ywQ0AF+Wkm/hi+j+3Bf4G8BQIZOPwU/kH8UJ9aCx/S35Oe1HqvtLvOtA8Cbu
Y9qMVC8++sRfByQtLesLman20aivugUuvmoSO7CV6pLsxeJaELV2dtOv7chB
T6/WAGVyp56PBLLuS5ka8OnMcsQDaaqnOtZvVQM3Xu8PWUpUk1X9H1aBHdqa
PZL6KP84wXwD/D785pStC9Uk97W160BC+E3NMXequ46xlV0Hlg9fD5d5ovqk
Y3bXQT7fa7FfflTHv9S8WQa0OyY6KkJRva3NkVIQTv9qhXQW+cJJvavg0q0x
IcV0lJ+e/rMEdLmNmbhmof6MF5pLAFv1y3M3c9A8Smc1S0DN7lElj2uo/nH1
8WIwc2l4f+MdVF/RtVoAWI2H098QyC3nMgqA5pehxi33kM9/lSoASYZDND6P
kHO27MkHou8HL7O8QOZcH8wDFmmDPTpjaP0HLWF5IFRz8IvfBDL3FGceIE4/
23H7HcofP+GWC/YoPH2xfwHtf1x97SJIHHnyO/s7mo8lo+wiqDrxROLuMorz
3HC4CNaeDYRv/YXi+kkNF0BuZD9rJ8MMtX/AjfjzYLDj0U4+Marjp+86ZgOl
xZ2BZySpJt0PYs0GqeL301dlkOvCsrOA6ZmO4RFllF9el5gJbts1+J4zQHEd
w/h0wJOkcopERi7eS5cOIptrKkNNkOe3pKcBZYGKbzaWqH45qiQVXPtQeILJ
DVnq7UwK+MfNf/XYHuRkhYQU4GmR2zO7FzkoWSQF8NzMZu7dj/plr+09A9Ki
TuUnHUZxLadvp0DkltDm35nIesFqSeC5/vzYf+eRb7S9TQTKIYG/x3OQG2mz
EsHskL/J7SLUT/fg1wTgVeT2/EgViu8qaosH7U9fLE/fRPGcT6HxgI/Gkc+p
HnkuRSYeDO238VZvQ04CWieBmYrx14UHyL8mRE+AUt9Ojr2PkUN8y2IB6aKB
5pMB5FtH5WLBnTXt49XDyEpyhseB6j2FLQHvkGleBBwDGcuVii+nkasWlqLB
nLS0ndksssrmuGhQliaaJ/kNWUw3/yjgd+aWevcbxz9/OwJkV7/qk0mf0Pfw
x/kjQDvvocOVzciOCrpHgMOro/FeTMh3Tp2OBOle4xOveJHZ9bUOg4K/DUu6
gsjf+qYjQOWVtC2XRJA5F3IiwIN3BjouUsiir3+Hg7/7r5wfUkdeej8RBlgY
om+oaSOHdeeGAcFKu67sHcgHixzCgO4czYItGVkTFoYCs7Rx2loT5H1cAqHA
SbFRkNUc+WlYYQgID9m3q98Gma+8/BCIZzf0kbdH9oxXOwQy67iPnnVCdjrc
HQyqlh6Wme9Bps1a/g9MR8mRegKQLXLOBIEl3k28EsF4/hS1IEBze1wpMRR5
7udkIBD5lbaHHIXncdQJBK4nF1ruJiETW74eBH1nGg81FyPHjZL2g7pLhhPl
I8jW/i3eQKlwaqr/JXJlF4c3qLqcNLM4jkx+E7gXXL/2+LveO2Sf86JeoKDG
mfHZV+R5m8segPfWGuvyIrKsBK0HuFhfuI1/GbmM/YA7yGp5J+K/gRycq+YG
WG4nS6b8wefpcsUVpN6Rkb9JmkX1NAyuILnrkNZPeuR5hq/OgOY+h74QE3LK
vTBnEPegkWzEiuOMJGfwu9fF7AAHcll5lRM41rdulbYN2XrikBNYHSiyr+NB
drM1cgKRz6DrC35cf17YCYSMnPLbLop80XzEEXwZlQ0wlUC+W97oCAJe9R8K
lMb5W3MdwcxEyOFMOeQBq+OOwP8N57FGRWRNWT9HMDXVFDemgrzoaeUI9n5w
Tf6jjlzToukI3GYvZ5nvQE7uo3MEL+bIOcEGOP/bFwfg8PVDwTmITHo+4gAG
v50uaTGexb+PBgdgsyRXPrETWTWlwAH0LQ9Uk3YhP+qMdAAWP0Prpazx/Nku
DsD4d/PdUAdkFlcWB9D51+3eRWdkxR+L9sCA5nfvbTfk2Ylue9C++cqTN3vw
+r019kCH3nh4szcyV126PWhi/Dgm64fsExdnD9SZU97Y7EeenA+1B7dYFaYj
ApCn5A/YA0WOp5/z/kMei91jD25sDf92NwQ5WM3BHkhzc628C0eue29qD8p4
WzfojyA3revaAzEBD5JiNPLIb1l7UCz0h87+OJ4vSMAeCG0vYY6KQ5YMYLQH
+WImnIUJyCWeK3aAR3KGpysZz5v02g5clD4r9PEMcqxSpx3glFMUZ0rD/XMv
2IFMhWcyKpnItMc87QCLcoSS0zn8fnbw2IGzqtwaxy4it83l7gb0Gm26xXnI
unZfbEGy1h5wvwCZbxO/LaDR/Wsyexnfj7+mDWi6L2JmfxU75YM1CNgNLdrL
kOMd3lsDwQlvS4lKHI8VswFPD8Rbp1cjD9LE7QYJSyW2K7V4/8ELdkAzrttu
bwM+f2HK/X/a8t6htxm/J3s1R1CQs8lZ9TZ+bwU8jsBGTMI1/y5ypNxFB0C6
aeK+qQvZ03DGHhzoSfYaeYjfS1aDHVD/QX8gegSf5yULG/AxTibg3Utk0RIT
a3CJySLIcgKbw8QKWOUGBDe+wb9Xspkl+Ct2NkToPXJXj80uUH/zRtipj8gB
qh4WYN+OvoiFWXxeMMgc8D2Yi3Sdx+tdrTAD/XbMR7u+IdupOpmBuEmFY3I/
8Pvn22EG1AOsj59fRbawUjADH38En/i1jufpEjQDl05mnNz3B5mj88dOYMVc
m/CE9BnV5x3ZCf7mPk3SpkVuE+k2BfXi305dYUAmB7Gagn217CmMzMiyZYkm
gFdPNTWc7TP+vQiZgL4HdunjnMhdgZPG4IR9eKYJN7YaowlQfX0uu4YPeep0
pAn4ENBwnlsIrzeyxRTkLg9djNuO+6d2mYI/zFz5dtLIAXL0ZqAuT7Pwthzy
2A3KeeyTcL4sroTrY3aaU76/R66kqSI/2jRhDvr0cq8uayCLbk+yACcetpR6
6eB6Hc1dQNXh5fWHenges8pd4MPrnxUqAPdLmN4FcgP5qi4Z4Xg/pyXYtaJb
Q7MTWVdJ1xL8jnevDbJA5nvqZQluscTUDVvh/OV8S+B3qaDBYDc+31OLloBb
8k7TdQdkn4t7rcCjWxMtbC7IHD/HrMBx/d9tR91x/0wla6DcK3RnyhM5W9HD
GrxzMOzY5YPPw/uENbj4xquzwR/vh6/YGmysFN9PDsL9baeswc2EzgdfD+Hz
byXZAB/WqV6XcDzvge02gCuf1NcZiUyqNbQBvZJiA7LReP+0e2zAHCdLh+tx
5DDjCBvA8m/15uk45EtTKTZAef5dcXMC8qBsvg2wezWQNZ2M99NRZgMiHrbG
b0vB8y7W24CLjdfCjdOwQasNaCnJ8AvPRI6uuGkDxjKiHUvOIdexZtuAjRh/
02cX8XrdRjZAKMBW628ecsnEiDUAzjuklQrx++yytwY+xpK8nsV4/o0eK5Co
ws6YdhXZLkTUCpQJbazdLsPvg9XREjzc8vHzbAWOGwXuArOrz8Z5q/H9vYu0
AEzT7f1mtciLT+LNgeLz63eP1OPz08wwA2GU/2QMt+L9JBWZgjVvGb+sHnye
fjlkIGCz1ZHoxfU+UhAY6P0x+dqH71NwhyGI5xqWsnqO3+c5ix2A8XHcZ/o3
eH1aGnUg3xI4rvUOxznsVIF1qVP/vml8v0IOSiD7hPzNe3N4veBBacCnPhoW
9xM5nuk6N9Db3u17cwPb4T924MlS4zD55/9xNVpQMpOgqUc7h+p7Lg133BsO
lgpkwL7It9Ex3eXKc4kJO+o8A0Ffa8zQy4rcdTeXg5AtVFpb4UAmf9vOTVim
8H2W5ML5d77wEcFHNo878mKf4hUkMv0W+hIFkOPX/QWJut2v7tQL43h3ggAx
ZNBTMyWKXcfITyzL3brMLonN/5GH4OEtyAQy2CdptxG6tKdOHpLH/c5cZiY8
voeGFSnhuOINEhH7xsO3XxW7MnSmo6tN1UROB3s6kwQsDk3SfzTBzvcWBoKP
xb9sNseOUREDC5KBz8QtkUuKtSRAzuRKno8d3u9MsAx4b8UuN+mJ84cLVUBz
hTPrL2/kKc1uVZCyueg7vz/yoPNTNaByR7bdNRA5bPWHBoiVN7YaPoLzm97q
gt2nU1SWonG/IAY9IP7+6TbOWORsRqAPHufvmbRNRLY7mWEIilaudh06hefZ
NwVAmP1sWXoKss+PTxCY3FQ+W52GHGAbRgY8W44c6stEjjb7Qgaf992x/3wO
uXL1sBG420WjzZiDzHiS0xhkC1kIyFxCrgs+bwz8ozP/7izEZncyAdojI+/3
FePz135iAphUBXuTruJ5hyRMwes03+prZfi9OMuZgrpPFVndFcizH3htQJLJ
wuGpKrzejVeWwOWKptu/m8h8kcASyP+KMRCpx+fzVnAX+OPSLWrYhM8z87U5
sHw4Xt/WhazaL2YChMXFcl/ex3GT/cZg8cTBmNWH+LweRxqBnlc393L3Ia85
eZFBntayseYTPN+JUwBMl7GO3HqFzHHdWxu0kpzank4iLzL7a4JUz4Kir2/x
/VUFqgM1Lpn9CjPIotZAEdCGHdpl+Rlb9KosGOtvVAqcx+fj8EMSxCWRV8uX
8H1dtuYH9m9Pjz9YwfdtvIsTSOo/IabXcP62XZvAz9xtpZt/4zj5QqNh35L7
GfF//8/XZyQu25b8Z7TpC5r/raUAEVY1s9uHDtknt0mCMKVX0jzJiCz6/qks
wet3mK+YGedLXVQkRM111knsyHY/mVQJecVfr/y3IpfEFakRGpyd7Q+5kQdt
JTQIg9XEQjl+ZNU/OZrEzgmz2HQh5MVNv7UI2y4mr2/bkTn6d+gQrtefGjpI
IIfJ6ukSPqnnRZql8Xzyb3SJwFCXf7zyyFMH1HWJCCeBqRgl3E9KS4c4vuNN
12tVPE93khaRLHLtKlkT9/sWrkFUNtRLDhjh/fj5KBD1eUfoVHYik37byBHt
sTtmzlkgx+voyBD3ff88XLZCJv/XIEkMmHVXuO7GcakbosQLhVMp7Q7YpLt8
xBuOXYHCLthvt7ARi+OD8h88cf8W/XeGOzYvqm4cxf20nygD49lGTq/jOG61
TQ1YPzm61BmHXMfYrA725v1rPHUKn8/URy1wMPb+xdkUfP6+kTogzPfMEat0
XL+2rgsSFdh1OC/g9U1m9UEaxzBvZC5yNoOdIbi4krs2mv//eW4BcHnc49WO
y7i/xmYyKO8UaS8qQV5jrSaDW2XvC/6VIqdwWBqBtrPlx/0q8PwGr41Ad0iQ
54MqZNl+K2PQ56hsKFuL3NZpbQyGdZeE0+rxflR8tcCkcMvfr034ftS7xYiP
m2Le2rXh+/BtMiAWPhl2Nd5Brlx8a0P8HKC5ytOJ83d37SZIDQ8Sjt3D9+0a
vZvYGmtjAh8jR7pcsiMEfTklrw0gm+5YsyMkzV7Q0g3i93fc055QUsj/eHAY
uUyn3Z7Q5vB62DeKzKXJ7UDAFdEKpXHkZT0PB8JifPpM9mvcv/CMA+HQWRnw
YwrvN7/CgdhTFrzLZRq5J/m+AzE0t8F38hOuF3nrQFiqnZ2tmMPzf/ztQNw7
yts2+BXXlws6EnrE9TPri/i+irQdiQZaTVfxZeQa892OhLzVPWmrn8gG5Qcc
iWvn7FYPbyDzLcQ6EgJjbx4U/UHeN3zekTgvcijnAWmeaieP644E0/5f+xY2
I7NsbnYkEqvPavIyIKtueeJIbHznpSUzIVt7fHYkInTLhwNYkbue0DoRc3Ga
pec4kCt9tzkRfg/uRbRvQ05WlHYixpntjT/w4PiIrBPh4PCWk0UAmcNf0Yno
u3TonaYwnsdb24kwfvurzksUWeicihPRLpUaf1oC2WdU14lQD+azuyWNvOxI
cVVD+fYxOWRPHz0nQnxd8xtJCTmsXdmHKID3CTlV5KHmbB9i62n7TAcN5Nn/
zH2I1IG3Xse1cb35d29i07YQpbIdOG6i403EuP/+PWCAbPHLZy+xdCV1YAUi
M9IleBFBM3xFIibI6YyXPAmPw1r6YbuQ93kTHsTQ7ftM+db4PDdPuBOWJIfx
7t3IU9p07oReRsixbS74PEGIKyFQUdHa4ofc9oCy//Nftc683Y/7p+tT7kuz
x4UxEDngSKgDsdE1teIeiswkcN2OGB/n1/xzHPfjTLAkHMQqN0ufRF6sEttF
9B3UHrZNRB7w329OGNf2XDt6Cp83n4QZ0b7sEFGSgnxJ5Zgpoa7/zuhxGvLg
bRsToiohlHMpE7ludNWIKGBLrzPJwfHxa5DY6iwQH3zp/+/nuiGRWli5O6cQ
OeXKjD4RI/tgYeYqfg9XQnSJpRBHgv06cvbhh9pEUPO7DN1KvL9lbi3i/a9Q
L99q5JLlWA3C3fivYmot8trOT2oE/Vam9dV65Oh+L1Wi6R33A/9mvP4zC2XC
r17s3GAbMumGiRLBkaDkZXgXeVyn1YUg7HbIVXXiOE+VGxEsunOF5z5y7c8X
boTAol130kPkiMdNbsSjTs+MxcfY7NluRFRWgLvXE2TaYT43QtI7UqpvENnM
vMmVGFKO/649giytPORKnPyb1lH6Er/PPTvcCMWneWc5JpAtHwq4EeOXS51P
vEGOPVvqSqQcuiU29w5ZGXi7EtqGd766fEQGB8muxDRL7+37s/j3FC7kSpyf
HDqlOo/MZb/iQpBr3thf/oZccHPEhfh6fE6Y6QeyaGGNC1Fgtfo5ahXPdzDR
hbAQ3NTyYR256pyvC7E6x5po9wd/H7x1XYiydn7bDtJXNM/Me2fCIVVKQJ4W
uWj9qjNB8lCbyWVANj7i50zsWbeIC2ND5tGfdCK26kbXSgghS0pMOBJdDMkx
2duRI3YWOBIhL7PM/ogjRxlRvmePoyrejMohO4gsOhBRZo1VJkrItJT/ehCS
PJ1RdarI8V9CKN/Xj33GwprI1vmaDkR88yhbqg4yi+G8PaF86v34qh6ynm+6
PTHptFDuD5AXnLTtiVTJjYhBI+SGwBd2hO4yHTTciaybfMiOmLnPyVxlgZw+
+GU3cfGC8Esea+QBpZe2hLG/XGnSbuRHxXdtiG/qWqGLDsh3wwusiaJNRvpe
LsjLedpWhOWQNUOfO56foWsXsXbVbVjbC8//wsKCKA/fd6XUB7kHfjIjnIzC
/uPYhzwi0ruT2MQZq3PiIPJk5rApsbfuwjOXEOTpkwvGBEv8lcL74ciLo1+N
iPbd1QdVjyDPsm2QiYDtrRqXo5E5GhnJBPe3e/+2xCJXulgbEveIp/1RJ5HX
ejz1iLDM8bwPicgBiQ90CZG9M/52p5EvVZrpEgNKSyodZ5FTDFV1iM97H819
S0fmE2LWIuizi6+LZyPLTn9SJ8S7I32cLyCHnb2vSsAlS8GUXGTyaUKJ8JQQ
G23PR7azyZInop1+Zn8tQs5+9VGGaGgppXcsxftjWxMnnn061n2qHJs5TZSY
57OLbbuBTBrwFiIYLaV1vtQgi57bxENIHf/9XbgOuSvbkp0wrhmqsWvE+S8S
aIm9rysPJrVg7+P90XGc7aR4y21sgcuThpeg8+vZu/j+Xl7/Y9gcpnBJsAvH
ycFbwNBVGkfb+8hT345xgoWhl6wJD3F+WyMXYKatfdT4GO/X5hI3kNVKTpoZ
QPb5I84DTA94AP5B5BL+UW7gm6e6bjWM543h4gZxj+ib4kZxv2FaLlCwPhlS
/wqvr1nDCVrlG+WmJ3HcU4cdjOw5O80zha3yiBEspntf2fUBr1/URAKshJZH
7AyuV89fNJT/xsx96zO2z78SQzPR98/ezWN7X5nr8LdvS+VaxP2WptY64hMz
d5r/wP3k2GmIosZ9pJhVnM9zm44Y5eaMevsbz9+jxk75+ynQt2rLAoq/FeEn
9jOThV6zYL+TFSQSDXhesnMgx+vmCRN3iu9ZH+FB7to7I0oo+wvqkiVwXPyN
JGF18ftShDQyOf+zFBHwoPfmdTlkH65n0kTy6uWAMUVk0fBKGeKqTKQEsype
70WBLEG4Wb4x1EAuyXGUI8bPiuaHaeP4ViV54mf7qmPpDtzf8I48wTU/wDZq
gPtdk1Mg1IRLHzOScb2fhgJha3ssWd8E2zZQngg6uRuGmOH8XcfkiDN1Uhsl
u/D8zgmyRNm7X03D1tjmR2SIrq1DofR2uF50lzTx2qRSfocj3o/4c0liIzLu
438u2C9pJIhHXHUXMt3xvI8zRYncpndG9Z543lcK/MQ+p22Lw974/EbpOAj1
ZdPiVT+cXz29iSBdjLLmP4AtyrLQ8VSjckM/EDv58Zhh0GFm14RQPF9EPwPQ
3WZIVxaBXdnEAegbQxofHsH9J+W4wYhDie/naLw+McwHri09Z2eJxfmjzIIg
7PxmQvkk7s94XBgAda1g+0ScX/duO2AZOiAQeQrne7KIgVfhlx7lpuC4cq04
KOfsi7qdhuN7oyRBZP0vyclM7AYhaWBsrzT89xzOd9gvCzi+700Qy8Hz7fkk
B95kZ6uYXkKecj6jAGpU770+UIjjFlOKIGbwR9rZYtyvpEsJWIRJ6dVcxfe3
f0wZ8HC4zj4tw/M3F6uA6Vspud8r8H2s26mCht3tplzVeH2dMVUQ/+3LknYt
7m96QA3YZglfda/H9cz06kBIZffu2CbkRVKWOph7Gv+nuBVZ9c82DdAW0lDd
3Y5s1xOvAU6zTbtPd+B5zg1pAKdabkaGbryfDhZNIG5r3iLXg9e7taEBFr9G
77PuxfHcag1AZFRtDe3D8yUraIB0pcmuc0+Q63afUQceT1hDmwZxvsNzNSB7
CAq/HEbmuMuiBlZZwvvXR5Gzi3RVQU/NtWNC47jfxSZl4DNPN+o7hdf/zaEA
lNN1kpM/4H7JBnLgt0KgesUMft/fDsiAvv6Cqcefcb19pRTI+28gc34en2f2
uATYx/zXgH0R14tFigP1apUvaj9wPhdZDJCsfPOdVvF5GmuKgqdz582PruP1
XeJEQFFqz0r+b3yfIfYiIEh+tfTuPxyX6xQBun0yDm83fUNmUBQB9EHupE30
yPHnbgqCkS1ptZJbcHzZnfKeb9z1NGdBJt34ygXCdi0wBbHj+Ho6JwCft99O
34rrmwtZAMtZ+4O3uHH+cjE9GJdN4h7iw/GAahKofNR0f1kQx7NFVg2jAmbC
ebdjXxb9bhhzLkcoThy7/OiCYVy7ae+0FLbsxQXDxA8/wq3ksPVvbhieYikV
alDEZhugASlaDr18qth9EnQgfS9NxEkNbFYDOpB9pk5oRhvP0zDEBC7Wefda
6+H9dCZzgEuv2CIaDZHJZD9uULSJEBIwwvVzB/hAicKh3nhTXM92SACUOglF
fDLH9UalIqD8RL+QrRW2HIs4qCqP6W2yxf2k7kqC2mdyEYIOyKJ1u2RAw9qY
UKIz7jfeLAtaxFJ6Z91wPLlEDrRb6kTs9kSeaqySB8ThGaEWb2SfL1MKoLso
p1fIH/cvslQCPQ9MI5IO4HjGfWXwaOGH0FwgcsmDvypgkOwQ0RqGzDGnrgZG
AmmERSLx+lk9amDsfF1v8lFk1Ze71cHkHe+ILzHY516rg7fTbMIOcch1M4c0
wHtWorctAVt2SQPMaB+K2H4KzxMYoAnmvIWET6fg/iovNcFCSn/vfBqy3YS6
Fliqj4lwzML7lYzVAqvjcsLt5/F5O9RrgY3Nr3pFc/H80S+0wB/FlIgz+ciD
5p+0AMlFR3ihCDnsyTctQHtyptepBK/vtqAFGCtzIu6U4vXuftECLM9NhcUr
cD/RD1qAY+NHb0oVjqdPaAEuidKIbzdxvxP9WoDP2kHYpR7HdxFaQPAIzaO7
Tfg+6qq1gEhxXYREG45/ytMC4r3ewql3kBcV4rWAPD8R4XoPv4cEGy2gbHxI
mHiAz6tGUwuo/yf0SPIxvo8NXi2gfbE/Im0Ary+8rAl2dMQILz3D/b8+0QQG
M3KP3IaRs8cLNQGZ/VVE5yjeT5qHJjDVTRGWHsf19YsawMJX51H6a7w+nYkG
sE6difgxhd+H6z51YNeYI+wxjefZfkgNuNEtR8h8wfszH1EGnsqlwpkL+H7k
+hSBj6vDo+Xv+H60+uXBwRt1wvfWcL+oDWkwriHfuvALz5NvJwWsiVI7wX+4
3/igBPApY1uRoFlE+fdTxUF+YL9R+yZk0q6jYmBIOSXTjhbbPV8UsCybTszQ
IXe1XtkOdt6mkT3BgOMLuiIgLo6I3LYFOf7RjBBoMznefYMJmXzqqiD4zqjL
RmbB8dyDAmDfhfqKYHYcr+bhA7sqy8YfcGOHzW8DiYd8ZTx5cf70z63grrpI
5BIfXv8481ag3JHHul0Ir+9nwQECEp08moWxU8fZwFVzzgqr7dhAiRVwDaWS
o8Wx+Ra3AJs88ww2Sdz/ly8jOO1JO14mhX3hBz3oEuuW1pfB+Rn1dGB95sTh
57LYN87RAvUava6D8tj6GZtBcPhPlr8KuN66ahO4rt3kflEJu5NmE3jzK6xc
XgX7SA8N4OtW+tGlil17dBOwPz0HXdVxv/Z3tCDVqiL9qwaOmy4wgh6Ofa+S
tLB/EqzgzwtRaQEd7ImdnEC78HVEnS52Us42cEPKleW1Pj5Pnp+84P3cNvfD
hrj/fWEBIFQ3eH0LxPnmbELA+UjG0hUyzo/OEAaZepZQ2xg72EkEPPpHnz5g
gs+/olUE0Dy4P+a3E3vHbRGglxovtW6G+x/5TwRE7jaMyLLA/e8KiICbXBuE
lCWO694UBjOvWpjvWuH6vzrCQPTKYTcHG7ze6U3CwH2f6vVZW+zh10LgvNzX
73F2ON/mmhAYWLgBuB1wXFtDCNA1HUirdsTW6hQE4JjEmJEzzl83FgTRYEpy
zAW7flIA1G++HB7i9v/7OsIP5h65E7QeOJ4hxAMkM3mYC/fgedmG2ICX47Cr
mhf2iBQdyOXLLuvdi73zOAkMvrb+7uWD+1Wp04AtpVvAsi+Ov+2kAW8U6c7W
+ON4GzcNaGghjezbj+Pdd/4Znib/FhE+iF2j/M/Qo+9n4IuA/59n5V9DZacf
TRlB2HR9fww3v1n4tzMYO7Dqt+HYwTnLv4ewi3h/GdZ8/5jTEopd3bRuGH/8
3VRI+P/vf+CnoRPdawWZw9ibopYNZbPGot5GYutdmDf8wzfSnReF3bN/yHDo
2jMWu2jsfVYTHeWK/a6MMdhnW5Y6bMn3vkafwPaYpCfE+zp01U5i7/7BSqw6
3k76HI/3T2e1leh73fT0aiKOi9FyE1cO1vF7JP//+9LGQ0R+r9639TR2+EVe
wuJ4xa2+M/h+r5XzEkJ0pRuJZ3E/5QJeYjGzeKd+2v/P4ygv0cNXkP0jHVtL
n5e4dC1nojoT95Ng5CWCFc9J78vG/VQ9hAijlvRwofPIU18/yRA85JS7Ixdw
//C/qsTc4ySGjBzkQdMhDeL865jLfy4hL34T0ScOHIyabS7AcWtjSOh9D9cI
KUIuSVwnE2zHD8VJF+Pv7Ua+EfGBNvDxmyvIjDuUjYm2zH1ceVeRZSMDjYl0
Ph/v3aXIbr5bjAmfa3uqGK4jV946YkRoKrqudJbj9Rt+kgnGFgdydCWel+8a
mZiEtmmqVXi9bfpkou7xrtHZamS7M7mQOOW4U+zqTeQ69xuA8HhNDna/hfP1
mg0J5YMGrZz1uL9WnQGx6bvOpr4GfH61qfrEaIyGTWITzt9M1iOqaFUu6bUg
ix4e1yXiMuU/LLXi9QrO6BAy18SO+d/B9yGiqkX8VhDuEezA62fxaRKDzXzs
IwTO/7yuTkQ/Zr9ueg/nb+1TJawdmRd/38fn+SVKhRB9Ta/f/ADfX5y/ErF8
YNPpQ73//154KRCPF/8MSj3+/3upkCOKY9YF3/Th+YzqZYkI2pUDuQP4vj2k
ZQmzzMV626fY8g0yhADf/G/6QewiExnC3D3HqPU57mfoK01EFoDTB4fxPLdc
pIirE5/6eF/g8/FUkCSeCp1jfzSK5/f9K0788tJzih77//saESNkr3y4JDuO
3VsjSjhNpb8em8D5GkzbiQQxbfGzr7HfE0JErd/bAzve4vttNBQkxktTqj9P
4Xk4dQQJho9qi/nvsavmBAlN6QlNy2k8j/hrIcL3YPKxjY/Yx5qFicxKJaLq
E863kxIh7nwe3bTnM46/WxMhZuXjzZm/YPvQixLcwXLpd+bxfacxiBHGN4cG
/1vA85vIixOhC8e5hRbxvA8yJIgiFSmPge+4P6lOktit2RecsYbnfzImS8Qe
OVxvuIHvo1xWnqhsEVr9+guvZ++sQGzaEXrS9h+uN89TIlRi+Hr+kr6j8/50
WZnwvNPNeGsT8pRTngpx9neQjTctct19K1WixZDrPDs9jqc9UiU+xHWMdjJg
y+qqERxdBwTDtiAvlhSqEYY0HD6izMjZh2bUiCDj22WDLMiD7DTqRF6S3+d4
Nlx/vl+N6OlhVlbjQOYgW6kRi3TNEe84kUmkHFVC2Hxv67ltyPFnI1QIyxSG
30bcyF2rmUpE1OM68hIPMjn2sgIxaLW5z0EAe+2cDJFsVzm5TQzXL4yIEPXn
7MV6xHF92pgA8WZoY3+kJPbdMR5C19nm24gMXv8AGxvxxX2JJlf5//NMqRny
FRaamali9+XOG5pOmqatqmGrNP42DBdeeFaugdfLDKUDxXvzuFy1sJXcWED/
FbI7gw7O/3SRE6xNfb7cqovjwd+5gJT4hfcH9fD8J/X4gIO/gQyfAfaSvyjQ
fmHpX22I692eyQABc/crAOLz5k9QBX/bDk48JyPbHYvUAh/ko3j3G+PzZg3S
A4+Kkh3XTJB9VqMMQQ3bhay0nbi+f4QMsuOv9ouYY/f5GIHIpVsMDRZ4fVFn
I+C2jzDZaYkcHWNlBAxHB06OWSFbVM6QgbjFxJ3/bJDd9raQAX37559/bfH5
CpSQwZzCmsZ5O2Tdv/5k8PQyfZiUA+5/UYkMGti5a9oc8by//CHIS5CYtXLG
8yZqAxD7Q03yrQuO7xs2AD77yT4RbsiiH8P1gewur7FLe7APD+qCdo68Rx99
8Xk1VWmAyStMN06G4PcvrSoJujj5P24Nw+v3z4uB60kyYuXheN7Yo9tByEHT
/IFIHO98wgP+Kced5T+O+3XkrhlOl6Q/qInFjiW/M3y0tZCGHIfdNTzRkb3a
euxAAr7fziObiMiAh83riTiufHUL4T4+8j09GVtmFwcBrD8oiZ7G69EUbCPE
ie+BjWdwvKKeh6BXJZWbncUO2MdPzF1le/8qFc/L6CFIPN0mLHIoHddnGQsR
jacUPEiZOL/XXoi49HNH7oUs7MgeASI20GJI+hy24hVewmfCha39PK5nl+Ai
TG32W9pcxP2X3DgI2c7Dp6dy8H64zBkIVrXEe4fzcP1f3fWOUa4regUF//fb
ZcP20zejlIqw8+QZQPHanYauy7h/6xAnSAzqW3C8gvvllvGCg5Nj8p9KsOnE
KH/fbpXeX3QN1zswi4EDuw5fsS/D9U08EuDjya5X9OX4viXppMC+FlauuxX4
fVxfkwYf5j1sw2/g+6YVkwN+EpUp0tU4f6paAbxzX7k3UYPXY5FVBj7Zxn+y
a3H+nQBV8PZhlo5ZHf49XShQA3v/TIb/qsfziGaogzca8jV1jTjf/JAG8Ao6
OrO/GX8/VYw0gYdpzTO9u9j5YrrgVcz6lsUO5DBv3h3Ard7M9Honri9e2gFc
Rd61sd/H590Row9GnZR/9PTgefV0DIBL2nGlmIfIql9XDIDTGve16cd4vv4g
AIaV/Sfz+/H+9QQgcNhfx7P7Cf49G9+AYKjwjx3tM1y/uAGB/ZBl2u1B3L/8
AwSDjJcehAzhfq/DILCDH/9JjODznnwOwLMj6nqvXuDv/RUeAGxrTkZmvsTf
94dyhuDJ+4Fak1d4PwnD+sCaX+Dz2jiO/9DRA1anm7z83+D68nltYOHz2Uz3
I/59a4qogt5c7YSvM3j+8WlFYPYk6c61Wbz+t9NyYKeeiCrrPM6/sF0CGHM5
8r9fwvdx4yYT6LYsccxbxr5s+seQnPA1w3oVe23TiCFcOLOpdR3f95ZQWsLg
0d0vaaQl1D9q73bizt8t0kabkOOb9cQJPS1Xn9XNyD5EtySx49r3ER8GnG8l
KU+0jQF2ni04Ln9akdBlT9/Vz4Trn+qqEK07XyXFsyCXNGyoEtqx0oQWG84X
ZlcnDn0Y+/aEHeffp9UgyizTxA5wIi+yPdAgxusNHf9uxXGRCGGCk38xOZcL
mfR2mzBhEX+tRZkHxy39hYi4T06zD3mRuz74CRLNtgwC3vw4XzKBn5hvvm31
UwDHx925CXHh4BNZQtgshhyEe7LILRkRnG+RR0c8dEja6iaGzXVzpOPqN+tX
bTI4/xHDVjDm8o/JXg6fx5ANL2Aj6g0+y2M7JwqB2HSeEn5l5KlTmhLARW7q
QIwm3j/nFiXA4n94Wd8IWzZcF5j0SUmPGCPX9ZftADFqY67BpsjZb3v0wKd/
BneKzJE50rkMwb0i+sQ/Nsgp2q1ksL75dmPObuQ2TzMjoPrffx+V7JHdPPqM
wIEhYd6HDsgBv6AxuLxj0GKvE86/12AMRkoSY1ad8f5S6EwAE6NWTaYrjguq
mwCj0E+vpd3x/mb0TED0aD57pwcyY67FTnDL0NrI1RN5tuylKZgp+xvxzQvf
Z4GcCXA87D+63Rd5cErUCKSOczO2+eH95oiT/9dymcfFvH5xPFqJJFpINW0m
LZo2jTJPMzU1E6Gy3ErcUKIiWdokSWnxE4VEIdqpe6tXSJqjErotJKkUlVDJ
cl1qhPDzeo4/36/nrJ9znuf7+pIaXsNiV1/cl4Rf37vPhZGBw3443wTNJWSh
osm5GH/Krl0sG+Ib1ndfbRvGk6qyJpm9qRJlAcjWNZakzZFv7hxEmdH6jxmR
KxFvfr4d+3swZkLsZhedigjGfjwOGZDQfevuzQzBecR66JLigelfinah/agH
g7xwrjG034P1HA+ZS3ZtZaxt24v7obhIhUxOiDm4KQw5yEiBpOb1F38MR97y
6ieHUc/tio1EHs7oEW0gtfG3YzC/2fg8eOetXbYqFvuXPKANUfsOPn1xCPOt
StKDzEqehVQC2idcNATDzosbTiaivdZRE6gam5Ssl4z20ZYscJ696WrFEcqs
lefMoMu8rp9/FP1/GliAv5vOtMcpaK+uagXi4Fhrv+Oo37fV1nA4ZWDTWCrq
0dW0GJRL7FPiT6Ae93tsIbfp0g3lUxj/GIcDliOTX+WlY39hywncltusuCgD
67tuYQfuzNu2d8/gPiuW2cFzR13/tZlYT+MsLuz0PZQ2mIX7QDoISBx6IQo9
j/sjdYkDxy46vJbJxvvkdtMWNGtyfv3vYjz3m4vhr15JLjMH8x3utwbO982B
13OxnhSnRdCsXp8uyMdz+duWsM5Gr66zAOP/tdsCRjzi3vkXYbzA62YQGfZS
bfwy1qdSYwpT0vn8xGLUq/G2ETgp3vmvoRz1OHlRFToW6mt4ViCHzVEEv+Xx
wtdX0d7SZRLEJTtemHID68lK+8yplbrrsvQW6svK1yauuvPDu2swnzZfn/Tz
DucE1OH+1icakB/RTl+T72D9Z81MyZIvdwuamjB+aaMVaVJlPlrXgvej1d2a
eC1K+PHmPtr71rFJxG7BmmltON++h7ZELq0gJuvR7/dTwCEZpbLFxo8xn6CH
EOYD/87qDrzPfjO45Nq7e5OXd1EOH7rDJf2tW4x/PqG8UyOUR6ZWSK8t66Hc
IH7PI5ancw9sfobzvDHMI39GOhQp96HelVG/7v/6gbZ7/fh++PdzSQX34ETE
AOpzptaO9Ooy5hu/xHlXBXGInOytlb2vsL8OGVtiPrI+4vgQ7l+yD5t4t0xc
sn+N9XxMsSKHSzObR0cwv021OSk7YSPOf4vzfS7JIk9Dn2h5vsd5ZR8xIjJe
4c7yH1APndVMwuKo7hb9h/MYmqVHvBjXsoI/YX122QwSJ7nmrvYY+p9uUSd/
DX7695EY7c+oKBPJEjMH9le0b30lRYoXl7yWmPSJxq97KA3f3XMXpSlQ7t+w
1gQMFjn48BUpM/YZscB9zkCSeCZliZp8M8jv03rmpUzZ9ViyJbTWgcx0Vcql
ah+t4GveetYtNco7V62wBr2kCc+QuZQVO7PYsCIo85DuPMw/s3kxhK+0KXms
Qdn3jaw7XDJ/0pGgRdljtMsNmpXDJWy0KbvoR7rB53EVw7c6lLMLpriBztOr
q87rUTZ+sMMVXG6t3u86H/uxjloJ2fFprRULKLPTDrpA41azr1uMKLNaepbC
6LJW3TkmlNWOrXMGZyWFsP0s7Fec6gR7xoqzTc0x38QKRzjftazxuQVlnzVK
fPh4PknDyRr1WHyBB/NiDQTjbMrChEAuOPnd23nZBv2HzxDINJKuVyCUt3oL
bIBfGRPQyadcqFFuDvOb444EOWF9I/+yQK4/sXiSEDngwEJokk19b7QM9Rt9
xgT3Py7uinGjzFVvUgHLwLwTyquw/v4qRVA+UFRxeTWe636Rhq78MnH7H3gu
sSOfU1V1VTXAE+PJh45xsu7fYP/0olxzZZo0iR4QeZ70Rrazm0H+FNdGLtiA
+trJzibcqXcz4U/s76gMH3Q0G6tXbcR5SHo7gpT5/WfDm7B+qyBHGHRs+7Hf
F+fN03WEBs8OrVlbKJ/09+dD0fZubqE/5TiLCgdIPti7kbMN9b5x1wGCTg3E
tgVQXhIhwYcVRYM5/kF4Xi7LB5ZopH5iO+XE+TEOoPTw/avUYKwv8KI9fHr5
UYYZQlmuO48H7eNiZvUu3FebIi5cm/ZN6LaHcpfvdC5kMH5uG9xLOWPZr+9B
pKXkkX1hlD9o2tuBt1C2WDGCMt92Khc43vIteZGUn7okc0Fz54z3NlG4X/vs
eCARN2tG6348jxbxYOC0KsvvAOVcoaM91F9Rd/sag/FJoT3k39LadSwW+7sn
5wAJj3RP6MVhffPWOsDWIWbFjXjsd/iKAyz9ZvR4RQLl4rJxB1DQtVSNSP69
j7l8OLmLn9lyHOe/7osjhB4WVm9KQ33ihE7gcdbl2ecTlCu3pjmBet1qLZ3T
lMOjGQKYeOzBvZ5BOWu9nwB6X3tvdDmL/CBPADXffWKfZ2I9l18J4NJMv5zQ
c5RH2xhCiNPfVi9/Aecf6CEEv8XbX2VnU44aSRCC0/IQmUWXsB79QiEYbNzL
bMqhXME9I4SpeyOEPnmUh7OIEN4m7t82lk/Z+/ZNAdzPOpicXEh5vNdEAH+X
xl/Rukx5wirFCfhx6SMvrqC+TuWO0PVHwYLCEsrVn27yIciocmvQ3+jfXOcA
Ej8bClhl6K9eZw8n254Mjpbje9IBPFiQP6J/owL12cHiAkR8891/Df3/578E
3JdPy+VV4vsom8mGQYbGC+kq9A+Xs4LIUROdxpt4P5RqzEChgWxMEVFutROZ
QE7mymz3W3g/K+WMgB3s06dS+/t+qhlAs32IZk8d6tXdpAc+KrHrL9Tj+Xlt
LRh9nZa1+S6ya7wKJIpyepgNOP+gQ1IwL7Vi7tt/kEO7hkSlvnc8S5t+vx8P
hjiO7I6MPS3IuwsmON3yQ53sB8h6jdJkR99nle+tyEvXziDph+ecim/HfAev
ziGGXobtzh34PanYrEnAxHaWQhf2V22gTYbavVPTe7D+dRr6JKpwe6vXM4xn
qs0kilHRM7T68H1tZywgbN3sowUDqGflKWPSLC5tDnyJ3GK4kPg01sqzBvF9
OpZnSkbPtS0dHaLc4OXHIkkhL5IqX6OeUoksouk42hD1Bu/HaVMWKVeTluO9
w3xkrilxeqsskP4X34fgMyak+9b8w/98wO+ZUb8R2XHC+s7Rj9ifSvMCMtlf
KOU+ivmr1zNJuo2ng4oY+53bpEeMFAJiuz+jPhZEh9Q8j6w9/4Xy8cYQBll9
9YjE5m/ozzirRYYTs+yY35Hvq2qRKO+S6Dc/UK8d/9MgiiwQ/S0xSuNtL1In
uZIPJnZPphzj2jmXsDv7bNlSlH36fNRIy+UPkRPSlLkq+rPJpuhJVTWylCW2
fVMgYjelL3FT0F8pXZok6+uyneXxXPnOOEfzi0XY9OnIFbrDnPJm/rWHCsiV
qb0cQfaasVOKyN4FjzhPd2+x9FJCbl12TbRTELZbczZyu9QLkZR6YvmAMnKS
sViU8T7jv3xVZMvg7yLjuiJW4BzkZhkpqD1VFWyqjvXtlJeD/wMrmg4p
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{0, 1.2566370614359172`}, {-1.496483050589248*^-6, 
    0.0879504849230357}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.622658549615696*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"dref", "\[LeftDoubleBracket]", "5", "\[RightDoubleBracket]"}],
        "-", " ", 
       RowBox[{
        RowBox[{
         SubscriptBox["\[Theta]", 
          RowBox[{"2", ",", "1"}]], "'"}], "[", "t", "]"}]}], ")"}], " ", "+", 
     RowBox[{"\[Lambda]", "  ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"ref", "\[LeftDoubleBracket]", "5", "\[RightDoubleBracket]"}],
         "-", " ", 
        RowBox[{
         SubscriptBox["\[Theta]", 
          RowBox[{"2", ",", "1"}]], "[", "t", "]"}]}], ")"}]}]}], "/.", 
    "Sola"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"t", ",", "ti", ",", "tf"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.622658563612512*^9, 3.6226585808339148`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1:eJwk13c81e0bB3AkFcmIVCRkJUkeScV9DgohyUpCVoWECglZUXYI2fPY65xj
FOk2I3s1jBJCUkallIync/nr93q/Ptd13df9/X6d35OgpaPuZQY6OjrtzXR0
tP+1X33vaR90EQlc566RGmYn8rpN+nspHyMIB7z96DXITrzkxXpTTfk0QZTj
NanjDTvRlz596oDyBYLJyMtD17vYiZwN0/v4lW0Jp6/q2ZJr2YlDmQ+VeJTv
ELTbrmopZrITCVyW3duVgwi9pg0mMjbsxBtabTycyvGEOL8hN9tRNuJwDenw
Bt18QlpIsPKjblZidKsz0SSslCDd0cciOsRCzHu8kJLcU0mYVXmx+8vkFuJ/
NirLX7RrCQZd17fk124ievy4/mPRvYHAnblX52rFRmJcmaAN3ZcmguSsaYjU
tQ1EC2R53ud3E4GPNe/ilMUGosTLDFU6pmZCN8OGqVSjDcTnQ/tE6ASbCVGT
LYqbVTcQxxhEx9YMmwn9knYHsMAG4sFzEiZr9c2EsZTUifrXDMT6GRmd1YSX
BA02i9suiIEYevsWwSv3JcH1P3m5X7IMRAP6MqnV8peEbbebz7seYCBOcR1h
Xe1+SbCbD9V02clAZFU42rrC1ELQsnaRvfmdnmgUfOLkys1/LrpZFJlNT5wR
PSm/rNFKkPh7VFWNg554U6547NH5VoJ01Uf/xs30xF+ndoYdsG4ljAVvvn2a
jp5Id/nrqPHdVkI9+3cR+zk6IldmdEhlSSvhe94Wc4FOOqLC3olhV642gpTd
1FBOGB2xTups0DbBNoJ1Q2PBqwA6oiqq/C/7YBtB4+mgHrsXHVHHNCzwtWob
QVhqnqXCgY5onXhERvZOGyHwNyW+WYeOGMpzP+Db+zZC7LOOZLOddEQOsflD
QdNtBNcQoRMFHHTEWDnjQYHFNsLOIMKzrSx0xDQDqUM67O0EyW55R/7lNULZ
ozf9xcrtBIU7L2MlW9cI79jEJO1z2gkCmwPMrR3WCBZ7I99sKGsn9FdaP8iz
WiNMSv31SaxtJ6S5qZ7hubBGmD/T9bp1oJ1w0ufmS9uTawTG0Nve+7d2EJb1
5P728K0RDmx+2Tvp1EEYeTVZSe5bJQQqiDuGe3UQyCHvf6q3rhLGnQJZ5EI7
CO8MO3iWalcJSQPqJwNyOghaLFV5KcWrhG0FLeX7hjsI7dd4d5cHr/47ry3O
XLOTUM24WVDu5CpBy+/Akc0XOgmbuy8/Nz2xSsitCOkpudJJ0EkUWfOUWf23
vxbzmm8ngZHtrk2iwCqhd77dI/lpJ+Grx7y2xPLKv/t3mg2KdBHUh+huWJWs
ENhfSv31/a+L4NPdXGGUtUKwXw5/vF+piyDv/ItXJnGFIHL5bLebSRch15N5
+8P7K4RYuW4lnkddBL5X5rqTF1cI1V9tOCXouglJCt8jxuhWCKkP7X5eud5N
kNNq75E7skzItz+U3nSrm0Dec1g7SHyZUHF6QUvUvZuAJl89beZdJnRu8CJN
3O8m+HF/z2BmWCas3o7Us07rJsTqtV4t7fhLMDN/SrHo6ybwf+gfmrH4S+A/
zORgcqyHoHs+ySTHZ4mQ3Js+eW5jL+FJwDvhwuzfBDmHiAC5mD6Ce00Ut+Xo
AqGKpGK1S+01IY2eyUOgap5QGiWW/WPoDYHobTsoVPCZEMvbLdYe1U8wyuSM
ZTgySuBeOXQ+RWmQsJP+7MWzpB6CG8Hv7oTaICFuebUu7HIP4Z3vq0xJ7UFC
BNuaT7toD4HEdGe+yniQQKb82qSZ102QZa8PentrkMAe0fou9t9z092nX82e
PUh4qvjgSJlTGyH8tJvgPeYhAlG34NXl+AbC95BWtVb2IYJ/VonJIm8DwbCT
z4GDZ4hgUrF1LSilnrBHr64qdd8QoTbncAAls45QaMKsX60wRLA5m7Z5p0kN
oc0x6f5PhyGCw/6R0ImAJwQp6myhgssQwfZMvIxESAUhaoHYd89jiDBexBF3
I6KcYHxnYi9n4L/5z9KYNyWWEqb9pCql0ocI8xFm70vMSwibY2u/XO37t9+J
PPc5h1RC/zQry9HBIYKPWXOVlHQiIYdwUYJpdIiQ9sX7avG3WILq5582pNl/
+624e89OhxJ2IJXAWz+HCHTq7OGbnPwJE1EROcrL/5wREOA5e5tQ9ul9E8eG
dwQ6Z60XiodMCP4KByZHtvwznd3K1NII1o9020hmp7n7848rpWjf5Athbx6a
fapndgTi78e3n9Tmp3nex//QE1T/0NxqjwjNdBJ0XrdR1HiR39cDNMvL9KW0
I4tjf9OfydBMPPfC7wWSDlevCz5G84i8heUTRPcxZuQCEfqbZV564O6jH9fE
1Wg2//2ZLg2nhkrv/X0GzveaZ8xEDqN3UbM+zbWCn/7WICTXZhp7EXKfzmNP
0LaQnXcvW8J5T6PnI9D7D5eTZG0hZ1SoLcSFsqXPNjhB7pLSUYQ9g+iGel3h
vPcXF3Kx1vCZpfS7NKeFblTMxLz/Je664Q/7brcyyMDTD6bkiSE0C6QeeJSB
q94dMWKLgn4vlVOZOOjwvdvDcXCfHX9JmdjofndsUSrse2OtmoTFh/ZUeGbD
+Zp0iiS8eOjaa80icHvn+3Tc5P90YXcZWOnE5QwcO7CRa7oK+r82imbiy1J6
/1XWQb768y0Jy95L0w18Cff7FZGWhRn7Z26c74LzP0vzZeE+yRORom+g/nr9
aCbO8A0k/3wH9cPvPTLxzTevuxo/wnzX7b2ZWPnAvrlH09Bf3zWZiTl8nLZZ
fYNc3vJjJh559fygzG/Iow4fJmHyfpYz9Gvrz3tEPwv7eBnZd298T7ODU2kW
PtuXFZK6Ffy++hUJ84v/yHfYTjNd8vX/SHjWk9iquBvyyIsumRj3hH3eKgg5
44t7mThMdGjzOzGafWZsqjOxiYe4eIEUuIpyJRNLdruouR+Bfo9f//ZZFm64
clqB5tqGFT4SbrvDfn+nCuRvzxNIOKHTNOvTaZi/8OgoCdvtK2is0AH/duYk
4eNuvz8GnIf5Jq210XhLx6kNBmaQs/kohaF+wUdCwpfBnL4SzjjXdUTpxzU4
7+Yf9kzs1nbQov4mnLfmFJ+J1QQ8fCLvQD1v2cNUvMPlZaq5D9RzcYRn48kW
7ppDD6BeVC+chB+NLj4LDoPzOWr352Pin4GnE48g/zihl4Vn2avLiQnQf2ab
dS5OFE+hJqZBvVnR2RysTvQp+ZUN560lvsnCv85bFp4rgvo7hz7k4kzHk3mF
pVC/S7mWhHUeiGZvqgK7yNjn4JWUzZmWtev7qNtk4fyK6dTnTZAPh7DkY6PO
9qSdHZDXiZfm4Y2TxfG3+iDX5ziehakrEbGdA3Beof2RXGzOfevR/hHw7O9N
BZj1oEGE/yTUszMp5eCqk0fDPnwF+5qFZuGrJruCj/8AXz96OwdzOf+9H/MH
fPipTzZ2zKzx0WQaps3jc3TIwXzP0u9mb6WZeLSsPRu39t5zp98+DPuyl2fh
29OXb5vsgvqJq8L5WJhB3fnJXqjX6FTNw727JG5witJM5y6el4W9D291uC4J
uc7NnwVY8vSs3UsZyPmF/hbgQfPuq/uOgRcu7MvGD9yo1l4E8OfX5gVYNiLa
YuAUOEbDtxCP5biayWrBPgteH7Lxwxqjiw91YX5aYmoeVnh73GjaCPbjdJnP
x9OzfAanLkFu3PQnGz9mWjuXdhnm3e0bycEn+Ue1/16D+pqzq7n4+5EGTcOb
YI7mwzk49UyWOsUNnNhKyMFalx+c2uoN/aeWbHPwkqet8tUAmD9R+u/95ERr
EupDII/1/puD9QsPKuyJAquabsnGDI1sx9ziYP/3pmk5uGTo25G+FMgv8evl
YJMffTJSWWBblQoSZmapOBRUAPX3Popk4SdCcZLjlPXnO+qfha2Pu+8nPIXc
mHvHv98XXRPRBAzezXgtC2NbtO9nI5h8szgH2/sKCOi0QX/9y/oSvCueYU9B
DzgJMSbgJvL4LqZ+MD1lYyp2ftm0w2IY+g/JZ2RiwZHc7dXjYN+Ozbm4czGY
necL1M8fvJyDPdius978tn6f7yFZWFzsLHPHIvjJ8GUSfoMObxJfhf7PrH9y
8D3D7Yz3GD/QfEX9Qi6WdvhJN8z8Af7eIjsK8HDA2xV5DsjTdV7m4pDkyqVH
PGDW4/J5WL48cXF2D9jZjikXn/vgNtMjDP5d05OJ7bYYfiw7AL4XXZmJ7/33
38BjGXA/tSUXJ5myd7kfAzddrM3F5Q9mGk2JcP7+oMY83ElprSKqQT51cSIP
fxrKIe/ThnyiSp+E6ZgCspkMwCLzQ3l4l7Rl0ueLYNfyf7/3MsaEqHZL6A/i
6c7Fmv58gSW2kD/Z8CAPWxf/uRvlBDlLlmMhvtv/5pbLbciVHHjycSxDma2R
F3jLj/w8XCwZeelEADhNUDEHNxs6GPCHgkmLC3l4xEdTk/4RuLnydi7+nS+u
NB4P83dXMRZgjtcbjzangVtP5eVjibUxyfwcsGnXVAFW2V8rFFYMTjmRko9N
9JJ3OpWDM6NG87HLXfdtetUwX1boVj4OzznPKNcAuVj4v/k5PbJLO1shN+U1
K8C1fznm/3aDezy5CvCAyNzE8FuoN5AgFuDvZ9uH6obX37fsvgLM4p7XQ5qA
3DVUvAALk+43P/gKTjK6XIAVO62e2/0AD4/7FGDD38TSM0vg+OcuBVie46F+
HN0IbV5jQnIBPpl9t2sLI/jIj4QCrHPCXsNjE80+soUDBdik2/jFV2bIJXI+
FGCby6eJZtsg37jkUohdlo4+6+IApz0nF2K/h6JyStxgt9GHhThcmJtC3Qn9
HcX/nFC5QVKYDyzcYViIc7S/Z8fshXruPSGFuOzjiOCmfWB7FtdCXOvWleQm
CvV6Vx8X43ZWzDO9n+ba5p5HFDyQURh18SDNRE2pZ1Q8eTSRtUMa+h9/+fME
f28PCkSyUH/hkSXGqxZuG8hHwdOPSZWYZfGKl+AJqL+KZ8h4Z6jBnygEvtlv
9+/3W/CkM6MyWOzAv32kK2TmXE7BPlN9RiVYUVPQ7pM62Pd1ewnWGGGbMNKC
en+l7SXY0GX1UutZ8OxrjTJsyTwzeEIPzmcNOViJHVOHDIoMwWe6Iqqxp2xr
N78xeOnEIMaBLU81I0xpNlfTN63F0WY5TfQWcF8/4X11OP1HjNIta5pHju0N
rcPFgf7V41ehv1zwWR2u2nPrqOE1qM+9F1uH3QSfZz1xgH2H6+kasJzIJq5d
NyEnXZKvxwvi5/zcXeC8cc/EekyRTJwfcoP9T0+cfoYdpCfMFD3X348QEwVL
yh7qSPGGeWIVjsV4+uidE3T3wJnz+SU490RDnsV9mH+LKZmCrxBYdzYEwX7c
Wi4UvE/l/H3hMJgXe8aYjEdU0xcCIiDXnURknKLxxfLTI8ifWwaTsYn2kR71
xzD/64P7ZLxb15uQnwDzbdrDybjfoKWIJQXqpebuPMMxF7bzXU+H3KxyjoJ1
TU2DO0kwX9NKoQqzW+T8PpQLue/4LBV3Wn+7ElkA/VPf5cpxqM2J19+Lod5u
m30p1rAPUNGnwvnn2qgUvMmpi1JeDvXH5v99P423dgnwVMI8lbUzFOx32yrc
rRr62yVXKJjoUbQ8UAP17QNbKXjVa9HuRAOYd+UCFVf7KQ0kNUE/73llCr5z
P0RttWX9ezHkLMVywa/LL3VAHjbWRcELYXuF67rBn27lUTE10jZK6BXsl3bH
iYqdYkrp/N+C3cx3UbFU/IrDxCCcd+q1HxV/TVJ7rzoM8w/fvUvB+WmRmrmj
UH/bfCMVXyUNVW6ZgPldEmoULJwrIn5tCtyJvSh4rMAxtv0LuGKPAQWnlVQy
Ss3B/MTm0xRsVrrh1sPvMG/e6xwF8z05Mzr/E5w0fv7f32/V47O6f6A/sMKE
gmPx6PPSZcjbHUwpWL/+gCQ33Sht3tu/RhTM2eSS4LqBZjoNq3/13S01m/uZ
aK7NH9Kn4PCOLbePMUO9gsIlCtbs0ZtIYIV62+R/9ZtfJ+sts0P97t3/8qb+
T3WmXKPwfcgaU7D/u8PSNTzQn7z2z8ojHikCvJCvfNWiYLrxF1v9+GGeipIK
BT//xObxURDqCykyFOz+5cLnkyIwv2KGlYLl5zLPZ4tDnlU/Rca/vs+82CQJ
/TXzpmRc9uuorO0h8Ocd1CJ8c8k3o1UGPMwzGIkPrbaxS8qBd9I/uY2/0u/w
DjsG/kVpTUL5G81nZhVgvx/FwmRksyX/og4RznMwqy9CoqwLLRQVsLetUjHS
vblZbEAV6jNr+SjI+y2fP50G5B6O1RmoUOHwqNgZmD/+YS4Z9aefQmd1wCdi
NpLRxk3Gia560G8y/88y9g6/kw0hz4kqLEBmPX4GLy7A/Re7eygoRO4x9asJ
OOkJZwV6mljAxmUO5/Gw5ZWicbpa+xNWkHcfrS5FHFdetVhegfnG53zKEGqb
Eg22BbMjJyqyk165R7GH89RCWqjocQzHaL/jet5wrhQ1LokguluQa8qfpKL5
S8cTxVzhvD0LyqWI74X2b+07kN85K1iKTktYGbh6wvl2EUxU5PrwNjXZG+or
l/6WooyFELYXfpDveLxairoupNl/DYD+OuF+ClrGZS3bgyD/q+VZjsSFW0RP
hIKDPH5SkUHQ+3uWD6F+23u7MuQ3+20kKArcqC1djor1mBAlBupjGK5Q0NDT
3Yn9cXAfPf1npWgz/6Hfa4lQHxD9pgjJ3lMxEEulmdx0NHIUW0ydp2pn0PxU
rF9uGoefsWdzzYL63QKzD1AV1cc+ORf8atuTcDTJE9PSWLC+j7xXCN5+N0/0
azFYWSMrHhPHnt/bTgX/1rf499/Dar0jx8vheXyeL8/D8YWTipZPaU4j7Ob6
iZs4/iYEPQNfXxAexd9d2X6TMc0j6KXkC7z33T6D/jroV9vAmo21lOSpa41w
v8NzrlTslq3FJvYS7t8+cp+Ks1gs7LXb1vfh+FiKe51cWlw6Ie/iZS7Dq6+D
RJN7ID+d51iKD5xIudf4Cubz9f8owUZp1JEvbyE3e3D939/zxmbF7UOQl9/r
zsZku6GE48Mwb8rVnILfd80tWoxCfZzewX//njjCaBA0DvW/bL0LsVzCTir5
E+QDvyPysOWaJFv/NOTavfZZ+KG1kv3aDPjWZQIZV7cYtIh+A0dsGkvHU1J2
otoL0E8yZ6Ngrmivey6LkDcWozys9CdqJGkJ8tbXesXYwSxHsXEFzOJfQMYJ
Dc8SvtCN0fwyzIqMm8W7FzkZafa59ukW+d/v/7j+8U00E/defEnGAj9+UyyY
Ic8cYiDjM0asbEGs4KQfFkWYrJpqs8BO83yW5pN3mPPI4fpLXDC/aP/4I+y8
r4G3jQccUmefgN5wGLjI8YL1CmUKkTzdp850fjjv/XZpMkqcdRNnFaK5lv8v
HRWtvmP2cxOB+u+k20+QeVvS0EdxON/kVAcV1VdKHTkrCXnLUn8ZEsmtDa86
BP30/l8pKDBWd0rkP6gfbPhJRtP+40qRcnAeP30bGWndck1cPgYunrCkoBKL
zT+vKoIzYpWpiFMnQbuPCP3No55U5Iwkc9FJmtOuCZDI6I0kps9Xg/zUaDEZ
HePVucitSbO51agbGSVtGSvz0YZcLCKvCK0u3tr29RzMV9XrKEHmkxttzhvA
/m/UV4tQw6vHdfVGsL+77NV/v7cN+3mlTKDfenttCQqkPHOOvwRu3CVShKZT
z3QyWkH/jFBfCToT/kHM6QrMjw97X4TInjd8h2xhXlhuWTHivLZhSPU61DM7
GBYj5wsxslQnmHduo0EReqMmFr7HGfIzyjPFSF6u8lPgbcjt1c4WokRhTaUF
d8hzzzkVo1XO9wmXvMBqMUmFyJzecaHVF3wsbKkQ1c/RacsFwPk9OveKkPBw
VE56IOQ3HjEXovvtwvSsobCvs1lXEfpcVWHs9hA8f+dNAdLKUy/7GAXnU6Z/
F6Lix4OsZ2Nhnv7cxkLEft/+alU81OtK5xegW86rtSLJMH944+lC9MYyYndk
GjjlhH8+kj8n5LycCfVmRc0FKIFQ1nE1B+Z/4zuWh1YOqor15a9//0f6c5E5
X78PKl7/fifVslE9s91gHgXqW8gcj5Dwn7//cZdDXiD+wh8/+BQW5vMUvg+S
Kq7G06/3fvryDHJ2Vu1HWKuRQjxfQ/PIGbvXGbiYqpJQXw/z3jDdzcUc6a9/
HGyiWUD3FTkfOz+8eia+Be47fW1/LH5z9082YwfM6/pRdgvJ24fQOXXT7HRk
9ARGicZ7jIf6aO5/XXGhE62ql5SqvqU518FyoAeZH1VipQ7S/FRR8EY3qhfp
u7JnGP5+GxlNW5Aw1+XawFGYr718Lh7fZ1jctTAO37NmfnoV+jwfeOvSFOST
Np35uIo48SziC+RRpgH5ODRCibF+FvbtPRCdj01HkrV+fIPnKTDbQcFS0kvR
wj/h/qQr+/IxnY/he4PfNEdYPzieh3u6qCIP/kJ+I+dgLs7Yy+bwdBWeZ03Y
t2zs7Hit4jP9R1ou+NQ+B5+qaV7dvZFmYkjv6Vy8g01YTWszzd0DkiIFeMrM
5+FdFprT6gKXcnFl8bu3xdtoZr/e+a4YB6/KC4xw0ExXHnc999+/B2JsOLhp
Hg9I//ffUwdTvpGVd0L9WLxvLl6dOfPnFi/NNqdP8BbibsV8pSx+msUb2o9l
4/QwpuA3gjRbf2Foz8Q331v2bhKh2SS2oe0xPnmwZvcxcZpry3ccOIy47/Ja
2R2geWsd30Aymmy/XZAoRfPXAfw5Ej3le/Wj/TDNAueOSQSiIHtphVVZmvt/
5SZkIuPqUP9D8jTr8ERXZiHJrZ/bzU/Q7KRYG5KOVi6e4o5CNKsTWkg5qLMg
3bRBiWZywdmOcpT2dyVr4ST0ixAMStANTeNZEXV4Hr7NOzBSTqyQO68J+77b
mJKLuL5wegdq0+xDZH1DRZPHHZsrz8HzN7mwOxs9CW5j+6IP85s7SNkocFDM
iM8I6g8WnE1BxhL+aWcugosf1xahA+4jU15m8L6uFchQ0XKLwmGyBbyvTfTR
eahzV/ydUWs4n6kb56JU2591nDawX4Q+Qw5yqjzHfPIanJ8meysLKW8p1nVx
gO/D4XZJNtp+gTkx+wbUU2K+56Dx3Csf3zrD/JEDhjmo4nf9gS1ukGsY2GWj
B+p7nY97wPPe9Z0hGxnFeVRf84Ln4/QxqhxJTL1lTPaleb5mbr4a/T0qe6bT
H/ZrP6hZhtofRMSsPaDZvM74bjpKefv1vXQI3NdWmz4cOYqdFrUMh3095kci
EPF2lsOjSDiPTed6GuJspn/SGA3zajsbs9DHHWZrPx/DfqVhQtmo7EqVmlgi
5GZRvlnofsWOCKMUyNUvm5DQeaZb/UHpMN818GIaEjfsEnhGgvM7q2VS0VLW
AduvOWDvkqsZqO3nA8qeAuhv/KWSiZJOjf/RLoZ+yYqr6cghhqjsQ4F6PeVf
8YgwkRRMKYN9RftdKag+U7+p9wk8H7P94y/QScutDAtVcH/PDTurUbNAoyI3
hv6fgR6PkMYHjztydXBeU3G9B25P/q/8fCM41IzhBj5r8mXerRl8dvqvL+rd
nSmZ0ApmHN4RjvQHjG2edYDRfU9f9OYxJ+ldN8xvSKuIwxcMWz+s9EGu+GYp
A7/j8uPd+xbuE/zkWSY26zt2njgIfn9HmYRHIr9FWbyH/qWSr5nYSiev028E
bJYykIknt1kwkz6u/76c+ZWJbTp2qr6YBOcYT2fi6ZBu38nPUD8ou5KJr2sE
Pt80A+/n1kn5LDy/mfhHfB7qlST2ZOGbzYuyGj9gP6F9n0h4IaDE6dov6G+6
HJ2Nb5+8Whj6B3L/L3WZeIlh71TRMuRXuzKysWfdm31dazDf8oAoCa96h1+a
Zxinecr0fBb2RaqJHEw0E/vVFbIw48rKG5ktkOec+nf/+8/KOfW30uxz/1lq
Jt7ifl3bhQ3Mz7eWiUPlRYJjOcHP27Uy8bbFdy+ecINT5sIzcGR5NP3ATprp
2J6+TsdczlqKS7yQG9j/TMexMox3ePdCbnq2Kx3v+vasTEEIzFhumYaTSm7N
m4qApbYdTsP8DgckvcXBim2ZqThd8uPVtAPg7l27HmPhLwmZdVJgOnz8Ic7O
0/0wdhhsv+brjMVtmHkZj4B9gnaeRQWi9YYi8uClMxuCkNTEnSjVE+Afwc+j
ETnzcOdVBOZ87h6BZCw/bwlSAvN9EktA5QLpp/JPgg8u9cUg+Q9Gvm1q4D8G
QwmoKpn9+VcNMIvO7WSkYPLyN6s2uNc6IwXV7PaRPXRu/T7ZlolIeeCok44+
PB+0JJGGGh/PFdw4Dzl53540pGqY8ynKGLwnmzMRtXBd2ldmCvVHsE460urb
cem1OTjzeUo66ozsTPhlBfWvPWJTkY7O/Tc8V8FXuHJSUN82xHnMDuoVX19O
R4YdP88YX4fcX8U7HfWHFAV5OIEZwi6loosal18k3QI/cSKmoOHNe+ixK/Qn
VwekI/PmVwof7kA+ofhvn48BoW50d8HHhHLSUFJHHfmyD9ij5Gg60udenGq9
B36psSsdbTWVFJR+AJ6LIaSjRpLFhZhgcOYXhnTk+TU2cikMXO5wJBUdkW1v
uRQJrrb893xnPegZXkSv72v5PRVlN8gdl4iD/ZbDLdKQGYv9zYeJkI8qT6ch
Hr30/IUUcF8FYyrqTngzdiEDLGfVn4ICx1h4a7LAz+QrUhFRQklPOG/dPW9T
0J8briFBhWBZtJCCqJUFDbMlYOeWxXhkRz/6V68U7Hal8RESOr1DtrICHHwu
zh8NRWja81eBa9ciDXB0vw/p3nOw6h6ve1hLoOLdVC1Y95vsQ8xo84VLuxF8
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
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{0, 1.2566370614359172`}, {-0.000033954622872478524`, 
    4.21697519844318}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.6226585816133537`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     SubscriptBox["\[Theta]", 
      RowBox[{"2", ",", "2"}]], "[", "t", "]"}], "/.", "Sola"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"t", ",", "ti", ",", "tf"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{3.6226597682264442`*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
B9F6L217GSaWPqZ67L/fh86Z29FKKkzo5182TyHzp3iBMjtflYkTkVOZIkG9
OOY+CLNtTFyOnHf+6tSL4mWXWl12MLHx+6GrWSa9iN1gJvhnDxNxaoGbp6d7
QBlcYW6rxUSX6x3fhz09WJNcF7UETDx6bfhet7YHPrsPQl2XCZ9HcX+/RhF+
PqJ195UhE8Irrh1TPNmDBFFO3oaDTDTMB+gK7utBX2uGQK4RE7asXzu1VXtg
fkk1inaYiWPv203CBXqw96Fsi44pE9fqAxaalVJhv7dLruUkE17HTtV3plOR
svD9HetTTMQ6HP35I4oKOZ9VAiEWTFQcWbP0tTsVSyKW7B07zwToO1u8jano
3Mzr+eUiE1sSP2q0alFJ/XL9vnSZiW8DjK1BKlScrpi83niNCd/qkFM2ooTv
T7DTXt4g9iq1x3kuomJh5/C//VZMqErJ/ZWYoeDLaG9Ahg0Tq+cO0MOphKce
dXdZ32FijcpIYmAL4S/eP5sUbJmYeum7aUkNBXPivwsC7ZjY3HCr2jKbgvpP
tYJH7ZnwM4wJ0U6hIHpzpdliByb+mzxw72MMBYe1C4fsnzARzO2l+ofwmUzF
d42tT5lYIOV3J4vw28TxLJcBJybOL7Z4sNKbgoo/aTUfnZk4ckq0edSVgvCr
yRKnXZmo9z0peYTw4L3R+EvL3ZkIc+8tUia8aPjoc1LFcybuKL/a73OfgjW8
ERxnTyZepE4suUN4k+kTtn+PNxOLQlxsmm5RUCwe7Mt+wYSu747yvBsUBH0K
aI/3YWKhvfNZJcKzVptfy1/yZaI3nXZDgvCuTsaLO2v8iD2vZta+IDy8Stsj
97c/ybdzT6gz4eXBcpdFLwOYEFiZxTVH+Drv+FOT/YFM/D5aazpDtN8fh/dz
QUx06gSFPCHfX7lqR0sPZuKGs3qZC9lv9+id7dah5L488y0WIuctfXTLUT6M
iaaLSbckiT1UnuvlneFMmDrdf/OF2Jvpc0k08CMT0j1P5/OJPy/Ez/13JIKJ
03ZZl08Rf899sohbFMXE3auy9ndJPNQ2m43/iGZCVOxky1ISr8UZJtr2MUys
00tYq0zi2YHD3qpxTLj62P+uIvFOLj/QRItn4oBH+5MhLwrcju+X/pjARH6v
lK8PydfpP9pW5klMWJzusEsi+dxyVfObSAoTmr7q/kcIbzc5bD/knMbEk76t
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
xvE/wwKJ+Q==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.55},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{0, 1.2566370614359172`}, {0.5745766988963402, 
    1.8897993467023637`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.622659768685425*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"ref", "\[LeftDoubleBracket]", "6", "\[RightDoubleBracket]"}], 
     "-", 
     RowBox[{
      SubscriptBox["\[Theta]", 
       RowBox[{"2", ",", "2"}]], "[", "t", "]"}]}], "/.", "Sola"}], ",", " ", 
   
   RowBox[{"{", 
    RowBox[{"t", ",", "ti", ",", "tf"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6226597820585403`*^9, 3.622659783720923*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1:eJwk13k8VU8bAPCrJImSiKIiQrZUkkpnpEKWsmVX0oafJKkkoaLsSwkhS9aQ
fV9mrv1y7XtIlCSpVERZes+c968+388z55lnnnnOcROxvqZ/aQWNRnu6mkbD
/9ovv3Wz9zUnaDSfSucxBiHoMu7lrnoQ0Ezsb26+exWdc+dyUlc9CWhVU+bl
B++h+ywJE9KqpsDT47yaQUEA4qmZFN2magvobCPfObOjUYpBx24rO3tAh0P8
O9/GosNjxYdfPrkGaC/Y2diX41Heg+pdT384AdrPpmspbEloMDH4KL/qHSC8
ive/sapXSHzqgbpSryuIPyz21nF7BnJUuKVjaucGhPOMvurcykSsdRam0U88
wMgjby4b7my06VdYSfCPB2A6ePT248VcBHit2zeq+gJ6LMfz86ZF6GKJuYEY
px+IX7GrpLO/CPlZnOlV6PUDORn31IvPFKPuJI2hM3YBwNOhVYddowTZ7N89
EfEkGMjfBuM07jJUbx+231AuBHiyxrifcCtDb4gNty2ehgD5haovhuNlaPk9
x197y1AQIiajvJRfjjSkl/8F/ngC2qsev/JTrERmS65Hw42eAjr4OnjkSSW6
2jb3ILb8KfBM3HOQY6oSPbnxY1W2dxjIOabKuTEKoqHysbXtm8OB4/XDc29H
EPoWeF6n3z0cTPwR3yXFT0csVsNBIx/CgSea7Oc9QkfirP0bfryOANzmJmy+
j+joujaTn0f1ORBoSTlkzl2FiBN/Jp5nPwfyfAs3SvZVIU5CokxkaxTI+XbE
9YRRFUrZ/dBiz3wUGLHi1GF5XoUGeA4n6GbFgDSTc6FufNUoda2tU7/gCzB/
eEmlZ281cmaNOGbl+wJonAiK8zxdjdb//vnx2sVYoOsnGfjuUTV6aX/mmTpX
POgPuxws/a0asdtO3Vt7PB74DK0Ie8xWg65deni5zTUezDd4fTXcVoOUz+Ye
MJ6IBxO2L1v1tGtQ72mugcs1CYCONG8ovCTj2knVUn9Jn+HIu1tUgxI1Dmd8
k38JbDh6FU831SDHo7Zut2JfgkiD936p0zVo7b66bY/uJIL+ssDh60q1yGm3
xWrNnERAbxKVcTxZi/qlf33n+pQI5s0T7XjMalGKmEjVM8MkoCF2+5WOay1S
2XTvQvLuZMCe5y/3uYiM8/Bq215OBgzFbiO9ulrEtT5DQfZFMuhnDxN16qpF
A6vfrCrkSAFDWnvkPn2rRc5/FNJqP6YAxzmLw+921KGBWWaIj1AqaE47wa6z
uw4d/Wl9R9sgFSgNJV30PlyH1n0J0eympwJH05KflgZ16NXQ1NSH6DQg85JN
4KNnHRpGSXtW6qeD6bG9cW+769C+rlE2ce90wN0Xfl1quA75jG8b0ihJB0IC
1yutPpFxruePgrZlgMjhWfmgP2TcLHBw85cMwCikla/ZWo/2zN70lvd6DXSt
CiT1ztcj1WeJU3LmOcDqxZRJ54d6NLVN1ZjunAN4eedud3+pRxFpI1V6QTlA
xnvStesXGS/fGuFclQOU7551YaxsQOHvI46WSeQC7W/7moNEG9CX3QHhJ2Zy
gaf78g5X6wYU1uSsYhGYD3gZohkrhxoQo/Hbiasp+UCo80uB9IcGtMiw0XJH
+SAmqvimxmQDutRgYRT/Ix905yoonJ1vQIq1x+3HzhSAmc4A8a8bGehNJW+k
/bZCICOfNy2jwUDrKoNe3DtQCLwesY9dPsVAqhXsiUG6hWDEMHop0JCB0ssW
X+c8KAQBXHKTCVYM5FY8VjMzXghyYP+OntsMtC234LtbdhFQfrPos+klA+nn
yM0GMoqA0sE7LLMpDPQ4O+1v7GgR6KeXbyrPYKDp1zGrqjYWA/nvt/cuFTBQ
VbqX4CqXYiC2RqzToJ6Bfr9aFt4UWgwq8pyLbZsYSOqVi7hEejHw6vswcKmV
gZ6k2u85OVQM5vmPuXH3MtDFJEP1QJUS0G2tfV12jIEiE1u1Y01LwHGzFqcb
nxio+aWGfrZTCZBZ/8IybpKB9icoW3YklQCNIIcNr6YZyC6+yPp9ZQmgqfPO
PvrFQLFx8ja/ekvA2Jbrc5q/GYgtVuwG35pScHGrVpH3AgMdehHrIr6DdNr7
9MUlBroWI+B+4HApSDI8JmdGa0T9UZy+pldLgWFt5q1G1kbEGfUoyO5RKZCM
KgwaZGtEKs9pYXfjSsHM/a2D3eyN6FXETOyLjlIg3+nSf4+zEQWMmPm0TpWC
sPf6d/TWNSKHXVXX/60uAz4VX76yczciPScJc3nRMuDC7vswaUMjUigPPH6e
KAMyfMF+YhsbET/rjOwT0zLg2Nps5MvbiP5qm/HXOJeBibG9oIuvEb19RqfN
BJcBhS23Xqzgb0T0YfFJsYwyUHHEvJVfoBElSgR2nakvA0M71+zZuLkRPXL8
VfFolFyfd1pilrRtqWlK8WIZKLDT5INbGpH2CnrwBH85kGTdfd5BsBHt1hK/
s3lfOXD7fPkGm1Aj4gkLsNY8VQ6E7XmKHpGeHfqpddeWjDP2P/tOun+n6f5M
r3LAueG8+9GtjajcAW17G1cOhP5FjbiRji3eyb6uvBwoGOrJvCR9nxbwg+gt
ByrtG7tySV88+XPg2o9yUMH7XD2TtPoTk9p4zgog4PNwKZS01CB83SFRAdyW
9G0vkOYS2xmx4lgFaHYhaCKkp+39PfedrQBTXcJKTLKersIfthfvVADHXr3H
1qSLlo0NnoVVAM+5iIufyPM9V4fK9dkVoH0Np7oZabcQMfG5pgogJvAruZzs
x7k3fuslxytAztPm+bWkVXf8mDdhqQQTv9mKtcj+sRdUMssOVAIZ67sG0WT/
vyyKFn7RJ+N2e4UzNzWi1hN+sUIOlaDghc7+LPK+wvqMrrsnVYKp4y95fMj7
vS1caZaNKgFrIGuDFU8jMrMVPT4yUAm0x7qiZch5EF74vkl1AwTsv8rvxJHz
s/K4Ee2GDASZQ6126lyNaDyg4nOiOgTH+/drj61tRJnbfCtWuUOQlDCYtkzO
4wHVHdaNk2R8NHpr9YpGtMXfR+vvKgQ8hW0+b2VpRItd3xSkRRCgP+sXdfrH
QNWXylcHGiOQaRwWumqRgU75Gr7WrUVgRvHe1IcZBtpnc2zxyyk6mE7Xf9L/
kYGseIRlYszpYJH9yjtO8n0Nqlg017ahg4qaAh6V9ww0wV1UnnmfDvoNs82S
hhkoplTy7tUCOtAwLA+172OgVWvX/f22uQqI+Tw1O9TIQHsLJ3fFiVeB7jQh
Po8GMv+5BtPT+6rAWDbP9oY6BirL9yzN1ibXn3PYYV3NQA4Wv1wcPapAe+nP
+qZyBup73T/3Y6wKSCo9PxidzUCsJoUSL39UAQWBI5F7ssj8K54Y6y9Xgfmc
8T+tmQwUYKRVnMdfDZqDzGK2pzNQKU3yk7VYNRC7cletK42BxtNZ+TfuqQYx
C/71QakMpPKv8tYNzWrQnm7Fuy2Zga6+ikoRNa4GzscW1X4mMlCUwe3ergvV
gN76W6CN/H7OpMorKtwj4zK0c4nxDPRKN3F2JrsaWPlr5pfHMFDvX4+dyRXV
4Lj4B7GBaLLeZIszZxrJ/QPzcleQPvuHr7DwPfn8iqFOp+cM5J/4c+zS92rQ
re5QVRbJQCU6bbybFquB/O8cDy7SPC99nG/x1YCCZ5pC3eEMBLQvJYnvqAEy
d57ra5C2/320u1euBpiEurIznjHQ8/htrI8P1wClv4a2BqTrNRf2HdCoATah
rvGTYQz0a6bvwifDGiC/7nd/IGnhuIKnEedrAPv46yNHSJ86GVqj7lADFh84
/pl/ykB3f139NedaAzhnqhWrSHtWq/CV+NSApKXrm5+S9grdeMAlnKzHVonX
mbSP1biJUlINGIndb3mRdMDuUtf53BrgAmSksEOW/WNKUA3Iie7NuUH6WctZ
6NJSA+JffxfH+aJi9owoDdYAK8N11dWkY/9jXfFngoxvLiteQdb38lCfaOnv
GsAw9jpiQDp1TfqJO6y1gP34X58C0pn9blcO8tQC4QKnNnHy/Dmpp33/bK8F
7csxaumkC27tyCiVrQUTyo9FAdm/0hOzzXcOk+slFqI/koa8jG8HT9aSvyf/
jb2IIN+fD1Hcf41qgcB/NAUb8j7q867uLbtYC9IauOBx8v6Y91UMXZ1qQf/W
IyX7ohioXXfjrUOeZP6nhcb7yfvu3j4e8TewFtgkc3ecJOej/1tJaVk0mT9l
u+n1Fwz0ttJ/0PVVLdBVNhDLjCXn03zP9oXaWqDE+cDQIoGBJqVYj5Z3kvG+
7SKd5Px9/9NrfXeE3O81N80iiYHmI9xSFhbI9b2a9Exynhcvn2aUr6kD84Qm
m/MrBmJR3DF5l7+OPO+ghC75952ju0F2cW8dCJk9VaVOvk/rEqNOV6jUARP5
288v5DLQRqer191O1QFPO1+uZ/kMJMS9sXDRtg6ULK15cLCEnJd3H3srbtcB
4diXQ5llDLQzq2TezbsO+OxXeqxYyUBy2meVl+LrgM0Rm1uB5Pu8V3DP2cqs
OsCQ5eEyJ9/3A5MrPe9V1AH5++sjAYN8/3xe1Sz11YH+Lf9ETpG/H/RqZzSX
19WDENd9b70GGcjoaYM9FKoH3KNrZrneMZCZdVSQuxRpk2KObPJ7ZE1T6Vw+
Qdrm2LOD5O8HZ2V/039u9YCxc2+g018Gcll79i7yqwfzig4r4TID3RuQf+ER
ScY/6vDsWEn+/XTpHfmXXw90KziEFci/75EFIja0L/Ug3vTMA8/tjeg8YW3s
OV8P0q6UOt8RI/9eMV6q0dgaAE2Ee5ffrkZUOSi6kybSABz/GWf/3NeI3q8Q
f//PqAEInP7hNXyyEcnqSVn8q24AIWt99DlcG9HvATstj3by+dfS9c6e5N/3
ixmH/r1tAP0LV1bMPmpE+i4ym//Nk/FXnG/3hzUilzi53mU5BqA7GdnnZjei
6q97dZejGIBR2rD72CT5e+T2DeCexgAqD93ghx+N6AxLgdxyIQPIh+Vxhf1p
RBO8+7mW2xkgZ9YsSWRNE+JSPtC0xNYIuG983/VOsgmZ+B0+vuTUCJRoxdNH
7JrQV/HjSouaTYD7cPUl969NyEkx6/1T4yZgY37lTM9ME/p9QiBQ+mITKHmz
7YjgYhOiXZoaNbvXBHJ2+m5w4GAi3sQw/9LsJiAZ9yOJVZyJnuct79eraAIu
B8HVNBkm2lZtMzLBIP1u+KHcPiaSHFXeL/Ce3K+zOXUAMJHy9o/Dt3iZQOO+
xz1PYyaqkjvtu06ECUbAqSRWSyZSI0r3pcgygc83GRcLaybStQz06VFjArqW
qpWHPRP12M/tvWrABO2Mtd5q15nIzO38W1YrJlD5IXDnzU0muhi9f6/CHSbQ
TTtXb+bORJ/T44aY3uT6hWzeEw+YyKFszeMLT5hAqS5i6y9vJvrVeGPPQiwT
mLhk91n7MpHLm7eDTzKYwGbHgYNPAphoaUL9kVQJE0xsLFHyCGaiB/O58tW1
5H6qpS0ST5hoNbvQoGkHE8zr+P3wDWOiAP5H3j/eMkGJEUt8YjgTbZCY3u07
yQTcskr9TpFMFK5oNiA8xwRpxy68mH3ORIJqtV4lK5tBycaXc7uimSj+jNxu
Xe5mMLKxaYYrhol2Xop880mI9HOVV3Gk051XeHnsagaRLIPyb0nv9rKX41ck
n1/Mza4lXfC0tz9LtRnkKC/rG5I+mKjyUO10M+De+kfPj8wP89Jlh81J+xd8
uxjFRMeqeftv2jSDifb5W+/J+hgd7g+4bjaDkL7tJ1gimEhndEIm+X4zEJib
pCPyfJ3T+n3KQc2gf9nYSog8vzGt8n53FFlf2K00PrI/Q+slZOxTm4FGyC65
dH8mOr89tHdlAZmf/iu8/zETjcsteEbTmwEtGT2Pe8hE/xGXpPe1kPGNwf+W
yPua1mnraXrTDBg7pJN+3mGim5YHPa3Hm8F07tAtN2cm+mufKPX3J+nsFXej
HJiINeC2xy7OFjAiOxkQfJ6JfKNHd1UJtAD5mr8cl8yYaF2GVrfJzhagu/g+
mqnPRAJN23f5EC0gcl1T80lVJnrxxrdru1YLiG99Emp1kIl2fP51r9i4Bcx7
FOWzyTORNDujc9yxBTg+NbSkCTGRj7LktSD3FpA2u2GzDTcTjTn6rFUMaAF0
YwlRLVYminmjcdw7lcz3YoWy12QTmud6NSJTSOYz3yE1ONSEzqiuuddd3QJ8
uDV2Zrc2kfU1FooOk+v5V9p05DQhu3e79JlfWoDK7W+hIglNqH6j3zenPy1A
WE064GdIE/Jw05So5m0F866QTehaE9kvZqSVVisYudUwWbSzCWk/kN7PbtoK
cixjnyjyNKG0Iv+O7MutQCU4juX4Mvm9267N8e9+Kwj5L9KXu6eRvM/muy9K
WgH9U+XK7HuN5Py0nh3Y2QYcT325JUt+77kZcgv397WBkuo7xqnk7yX7xaCI
XUfbwPzxAes+X/Lvw6XT7S4WbUD+qNrpS2cY5Hy3H+V/2gZGkjfy+HxuQBVT
NjxStHYw79imco69AcUF281evtoOQrinl+P31qF0+90J9TfaAXuunx8rfx0q
OjmjLe7aDvp9vJvtF2pR60r3pI+P2gHjgJ+kXm0tWr4danAxvh0In37wIcio
Fp21Ksk930Xmm5ce+3yvBm3bw+ZgcbADCMjO+LsPVyGpdczNFaADhJj/k71f
V4UUvwTXCap1AJ+bVyYTM6vQqeTNWwf1yfUSJSxad6uQ+2bZZlP7DkATPfhY
YksVGmYxlDKO6wDTXJUi6mfp6EVnwrjeqk4g3H1SRocFIs7ArXdC13YCbsWb
8kX9lchV/fnajg2dYDqrqc8qpxIZVYTI627rBCO906KuVpWIO8XD9dSBTqAy
I/aysKYCed2xXKdl2wl03xVacoeXIzvhzYrHWzpBTrpv/wqbUtQ/EMZ42EXu
N5qzZo16KVJ/xm1e86YTOOopEGripUiMg91TdbwTeG5/InLxYwl6++t3o8o/
sp4Igc4dl0uQbkO35ZE9XUD+j8hOg+vFSNEhxFvxWRcIMdu2qySjEHEfXr1h
OboLeK4PUQoLKkSTq91j6l6S669eV3x5vRDFJvyXb5jTBayyxYT0lQoRW4/a
qBOzC9DWnL8401CA+g4vKWezdIMcbunIt9/zkcsauxkJh24QMvPG3vJcHtLv
HfH47kzGM69wvlTPQzKJxmuL73YDuopO81r5PDSifGKHmm83iO8du6nDkoc0
HIV1LyZ1A5WjrvL3k3PR5r7ejPiBbiDPP+xnP5ODypKOXdis3gOsmk4qgTPZ
yEnhdLO9Dumi6eBM+WwkVWu2n27QA0Z8RU/qcGajqA/XV1+x6gF0q2N5ErVZ
6M6O+IyCO6RbDkoqKWYhpfjFX6czSYess/UVfY2Kogu9Hm3oBfFnTrlIi2Qg
B+mqr2/4ewG9xFb3wYoMJF7ebCS7rReMnPUpZx1LR+EDHyS7pXqB1fUOX//U
dHRzM0+LyPFeoBL7eixaPh0pRDjwVd4i4wfUv8RpvkL5TyRSfg32AvmDp17N
xKSiXgU59rb3pIcEH4H7qehvr4Jd+mfSztnqRZdSkaqgqtz5uV7A/TRUUHx3
KmpPtChq5ekDKps9KlhrU9BUQWj9q5N9IJ71165zs8lIrG9h/FxxH+Cu6wvI
ckpC4YLtEs1P+oHnmO3Zu+kJiG9pt3Hs0QEwovyl0fZ3BHIBD+59VB8AKkPJ
YtebItDQ/e5EmVNk3JA72z42AiWx3ZkuMxsANOGRmKNqEUiBu9q378YAoLfH
5ts/C0f6ooYV3CkDQLhaUWX73mco6KSLyEOOQaBySa703ZUn6Kd/k3oT9yAQ
3j/VIHf4CTJqFXLYwD8IrOo33HJf9wRtNagqixMl1zdcmRYuDEWZFhyGFcqD
gJ5Q4eO6IhQxr8U8mnUg45uyQ64fDkbs4fQvV7oGAe1uWRfI9kX9k1xrDwyQ
Lr6z0+q0L0oF5lJso4PA02itUdB3H6T2edYm6RsZX5Ya5ZX3QV7K0uMja4aA
yqvTL3jyHiHDUJdVOdxDgMYVYXXU8BESHa8T8+AfAvSqIoOZOW9UHWx1YetO
0lGMnuZj3oj24dmIqQrpmtxXqVMPUfuBD/8k1cl8yeEyelEPUVyA/PZ5HTKf
fn6n7smHiFBkWoabk+v5VC4fyXiA3Hxpg523yLjQ7S5l9/tobvd/PVqvSSdO
Zx8udUf1XiUzWwqGgGfpD66CQ+4o/M0q3sky0gvnwVF4Dyk8jNf3YZDr+Yur
XJhuyKm3p632A2mPocN3llyRqrTo96eT5Ppr50FBkCva4Om47sIPMm4ScrBW
xBXl7Fqrw/KPjO8U2XBC5w765qbSdGTLW+Bpe/n6UsltBDsCP3OKkNYMf8lj
chsFig+yD0mQ3lYoUjN/C8m031R33f8W0G4zhweIW8hONKO2SJeMzw8nS791
RuONfGj3Y9KjXNcbLZzQ09G5cr9A0nuue93md0Iqf96UfHxKPi90kL6/6zqK
lozNi44nbeLa2q5zHek+Fk9ZXUaurzRrXX3aES3Fsida00nz3dtfucERpRdN
xlXWk+vf2TpUpV9Dq8aznt/oIp0kmlgLHVDZ8QOB76ZIF7EcZC7YoysWm/0O
/SLNffyQarA94nVeePTsD+mBVfxmYvboWiLy1GIbBrT5T9f0DP5DYis0nIu3
k67/vvZVjS0KRibmwfqko8wbaicuI+W+QyaTJqS5m9quPL2MJr8JnTlxjjTt
vsVpcBkd3zZ6auE/0lJ6xJuoS+ivm63qFW/SbuKrza0uotQwLVDtT1p/RiqJ
9yIyzJRV3vqEtDCTY33TBZQ9+GN/VyzpsF1qh5QuoIuHXHeBEtJqq83uiVij
DfoW4lEQ1yMtZzd8HkFbQnS2lvTeDCGzmPNo8/MVWzM6SP/sYj8oeB61zvlx
838hbc86GSlmhZQKo+e+bX0HaAGC3z7WWSC9dy5fO8RI92sGeRhaILs1Rh8K
pEl3XznD8tEcxVhyt7keJH3x6p4Xa80Rjc07he0MNou/gYMp2ixvHfPZnLTP
OxPttaZorxl40myNrRAx9coEXcz6c++JI2krS7aVU8aowcjhzLYA0jSFgOQH
RmjEU0uL5SnpkuH3c9JGaD5d8ujYc9Jum21ze88gqX/vZdJTSRf4Fh+SP4OC
Uo1ZFWtI00PH234aIKN5lXydv6QNYz7lZeshpQ3BhpG0EXKeeN6y2euh4yn3
2tawkpYXFTPYpYcs2s3qpjhIC5wTQym6KEiMLzdPgHROU0iRyWn0s9nXh1Ag
LXlMSAVqoeXzLitzDpB2TLkxqqeF1s5ddhc5jJ/vaV0a10RiIsedWVVJ+3wf
eM6niYxuLp9rOk3axenwBi8NVLb1xgGj/0hHrhO1SDqBXEQqk4sdcL5it126
J5DiztW8m51IhzhJaywdR7ky0dODLqTbZ5Gz+XGUdrjm1flHpEtUxM5LHEOX
AZdAjS/p+DvFwW9Vkegx40digXj9DTeWZ6ooVvOL9aen+PxrzBJXq6JnphuF
riaQ1s2heS6oIH1LS7/WJBzX4rArV0Hc51Pnd6eRHrmU6OKmggJsDvf8zCKt
VK34jUUFPbh9IcilgrSnVKLkPgI5PsunefVhHzrk++UQknu+5PBxANcjWNjr
ewhNxai/VRvG8fVcgbsOoStJg6VrPuL6fGS/2x9EZ/NX3gj+SVolLmiARQlp
dRh8jOIaJddLs8iY7EfiXDONucdIt7e6e7vJI30ndok3aqRVbtA9leSRR5+Q
F00T+/s/ocndqD/hBHFaFz9vuP7HOznkrxiRN2WB478L7w3KoJLojPW8VqRp
dW4rzsqgMRrd/vAFHDcXFHgvjQjmhLifLWlhSYE936XQ9LlD0RK3SNMz7sZu
24WE6k7Nn7qD8z+e2pMtiU5KXThzy410/IsZdFQSvZzxX1/3AK8v//HLXgKd
8X370DoY54seCh/aiR58+zHi+4S0lVz56L2dKMuAjch9hu0nbSqyE7Fv2z3/
LxrnfxnR5iCGyvI87V+k4fp2XtkmKorG+Z811mbgfIPBAT070MZ7r8SnskiP
WB9Z5bcD2at3jhwqxPkm3CbmRdD2IdEz/VW4Hn7p0ClhpH1UKe9fLY7bdHx+
LYxcUrTXSzBw/VIOg47CqNPxZuPNVrx+qcHt93bktarhyMZB7NMVIWAbyrEb
jDo0jOubWHuzbyt62/Z97vwori9g/MT1rUgxSiAv5xM2fxtbuhCakLMTPzWD
16fveiYtiHRMuNb7cr0nTXgbnhZAOWpxNjPcpFXo4YZT/Ihn/57qc7w47rj9
lS8/6t1w5qaiIHbtkm7tJmTFjBn8IIk9k8upyIecCZk04jhpms1JbU4e1CsD
WdLVsZPX/EzZgA4K6przaZGmP300cnQDWp67sW5KD++nl851hxv55JY7Pz+H
1+tFO49wock4nVbWCzj/Te5jIlxIJ+idhONlHD8+k3uRE/H8t3JQ7SqOpwm6
z3CgaDGtozOu2GEtPQQ7WuZ5G3XOHVuhJSN6NbJiuTbTdB/bQoB1iQ2JDT9J
TfDBjnT80rIKPWoWY+EKwPbtrj+yCn0uKzJzCcY2na/IY0VZEQNcp8Px/m9u
mGauRNyP7K+UPcfxDRyie1aiG87L9J0vcHy1nFb5CqSkt8N5MRHHPaOq37Gg
KFDQciUV25idzZUFLcmqSXSlY7/4/HQzC6rmsBt4lYu9Nk7OhobE/izs4yvE
Lgub20RDjz8FBnqW4PyaOnPB/+Bkz/ZPX8qxU/dO0f5B7dpcFWOEXQrqXJdh
Vt6xqOpq7KOaGktLcENCzy/Zemz2MT6fJdh7708Kawv21fb5gkWoZO9Pc2zH
7veTM1qE0WZbzQa7sNtzPi0twGWN7Hy1PmyxntiMBWh14ChX3gB261/m2QVY
vbPr8tZhbK2z45sWoBjvJbrPKPbBn+e7/sLP0z43zk1gn2w4ZvwXlql8LA/5
gi14w1DkLwwIOcpa/Q27QPnS1z9QTv5vmNgs9hDo8f0Dna/9V/SZ5QPpgIUe
xjw8gRqWt6zC1q/PjZiHm9aLqWuzY5s5eV+ah6VZQ31Z67ALnowvzsHlrzp/
bghii7yN3DgH24+kH03ehs0+uLnrN0wIZPPrFcGuNe0P/g2Py6ItByWxP/1D
tN/Q115eeVkBO5rOLJuBZhUBXruVsE/08V6YgTKcn5utDmP7yrqzz8DWjATL
mqPYp41Wa/2CvF94PHxOYX/Vms77AccPXWso1cNO6BhU/wGL/Zjrvxhiz5lK
DU5DMymveB1zbCn38YXvMM52torHBtv63MtbU9CxVI/j+H/YMV6LYV+g6pos
/ZsO2BdP6BVMwrG0yx/6nLFbdTbPT0CpiT7WF/exg4r/vfwIFw4o6LR6YU/+
x94/Bpsfhzz795jKJy7MMwavSZwUtw7C7hbcG/EeqtxOdngaiv3S4Nf7UcjT
wFJcG4a9ZbP+/lFYcLlMXSIaW2i/5vA7+KhoU4hJLOUi5axhaMx2o983AXvs
zv3At1DSqE24PAlbQ+CW2xD8myxtO5WKnWRlencQMmcf527NoNavsPIbgDEn
xv6cysIWPpL56g0EH2P8cguwtSPEN/fD6kTD+s5i7DQbW/s+eNyac8VMGbaL
ZHdrL2wQrj3CB7EVaver9ELNd3fvKFZR+eqM6D2w+cW+QuNa7KGMtad74GmL
L9MuDdjTH9596YadWxJlopqwHfdoh3dDwzdmNuUt2FP76nS6YW8ET9JQO3aI
dtOGbmhq1PRuqQtbeUvraBcc4n0guL0P2yRLrrILnu06aKwygF1hp5zYBUdC
fzw5/5aKixNPu+AF3VetD0aoeogbAV1wfN15jqQP1Lyu5gvqgjYtAmp149jt
vcYRXXDSv/3++GdsK8n/UrvgVU2fytVfqXpm3Mn9ptlV/khOY9sXF/d3QaeG
OQXNX9iL5hrzXXDGO9vxv99U/1VPCXbD28evZAb8wbYQ/afSDd2qekXb/lH5
TNlDu+GyR9C56RVjpGV62kq74X1CLXoDG7bbNNv7bsi6tNS7dw12bdM/9h74
qLyQx5AT2/DxT9keuMb16qmb67F5NxzV7YEBSjv9wnmwtbOPXuuB6+aG6or5
sMfoRn49MLQwjOWNAHaB74/4HsjrrH3kryB2xaqQvB4Yvpf1juB2bJuHdNgD
N/8oL1Dege0YtKauB8Zk35i23Ikt8HEd6W0O0jIektiRjKfk+gSZD1fipbEl
V2nk9kCxL1GJVXLU+Rh/Y3pgyiv9d+/3YA/teHG/B0racAiy7qfiZ9nP9cAM
8WqjnUqUAyT290C5j3eeqB3GFjJZXNkDcxL3tF4hsL2W7jG74V7rz2t8j2Jb
fX3l3w0LhRNOpB/HHtFjHO+GSu9M7jPVsZXMRn53wbIX3JVTmlS/FLVedkFl
C8Y81ynsab6j6l0QbfFU2K2HTRMUHu+EtRHfM64bYyd97uXphGpGqZ+emFFx
V9eEDtjIe060wJKqRzJQugO2hrZG/b5A3VfKu33tUFf3US//Fey0neqX22DX
OoLnoB22yufX51phv/9r37uOVL95HNSb4QfvABfaParf7JlrGDCmpSrnkie2
MO+pT/XQkG9uoukhdV7ascY6WJt03vSZHzZ7z+G4Gug2FR76NxDbMyf9WTXc
r9DceC6UOh+TeFYFU2oUD0lFUnGLuCsInl1r7xQcTZ1nVvFVJeQ3SEifiaX2
U1JkrYDtUb3vTV9ix1/7fqcM+rxfK4iSselZDmtLoYrUUQOxV1S+sZjSYvjn
+i1/30xqvfJ27yKYV5pR8y2bOk/1WYdCaMcyumCQj91+weFmAdxxcpNCaREV
5+aNyoeDIVr228qo+PrZwTwY1u+Z9LCSsuCHQ3lQW7hoaIJOnSeUpygXstp8
4T1VS9VzuEM7F1ZkC+vkN1D1RO1YzoHOc2e8BZjYIaffMHKgLPCvvNdKPW8d
nZEDxx/RZ993YOe0TSXlwNjWWVmNHqq/U5b5OdBok/Tl1/1U/tC67hy47qxV
LM/Q//fvXZ0L65Of9d5+Rz0/lHMyF3p8bVr39j21f8rXyFyotJ+mrjpO9Xfr
6l+5cNptv0fqZ6o/gpVn8mBarV0x51dq/UM7lAfPc8Z/vz5NrU8ZkMmHndEc
Vspz1LwEZHAWQL8PIDLhLzb3AHAtgKrSN9vZlilzLH0ogH+d0tntWT7iesT/
qBXC/LJ3Kh2s2Lo62i8Lof0KvjuK7Nie1zx+FUIxTc3c6LXU+vO+B4vgUKjH
Z9p6bOHbdU5FMOxNgchlHuxpsYOxRVBbZNKUyUfZAJYVwVW225/Ib6byqzxp
KIIwx7DpmRAVV/5VUwRvzfuuWNiOHa90I7sIyqmgQ1ai2CGVxb5F8NPjGac6
ceyRukL9IhjftitDSgpb5aQfRxE04T/3IViWytcemFsIuc+FCc7KU/W3a2oU
QkZKo4GZwkdqHl3bCqDnt2V/dICqx2StRgE8qKhQK3aYel5FID8f/rxnu+hL
YLcXC/Dkw/S6WIXvR7HZR7wv58EtZ9Ykl2pg22Senc2BizeGvU8ZUfl8buRn
QNGtw5l3TLFptuuJdKhZ/7YryYKKr+5tTYPPBd6KLFhT9Rme4E6B9KohDfHL
VH1vzzckwQm7oWt6ttjy96JDE+F63qFwN3uqvnc/rr+EipWDlanXqH6wqfyX
AM9eHhzrdKLqzZXxjIfe6wfXLt+k4qeNL8fBzJKBvbvuUL4ywhkLu88PmBq6
Uf1+1jkXAxc4Bjw9PKg4845UDNxR8CY1/QFVz1/v1Gioafmmtceb6vdD/uvR
8Drbm1maLxXfWukTDSOz+4VkAijfcPoeDekm/ceMgymzP06OgZ9Y+u0ePKEs
4ZL+Aq7L6At9/QzbSmn1UixUNOwr6Y+k+hEYphMPLZd6362MoezJfTQBeqX0
su2Oo+Ztw0HjlzDzdK+s2UuqH81LgYmwa77H0DuZyv/5y/sk+Deh525OGnUe
GTWDFHhypruRLZtye+SdV3A8sutSfjk1X0rbDudALtWugGGIXdLxUTgXKnzp
zF9TTfUzu4A1Dz480slixaD2372ykpyH8Q5Jfya2o0xOQAHsDO44XdSKrbQz
UbcQ/lHquDXaQdW35zJbERR+3/6Cs4c67+xsRhHU8G+vPdCPze1vDorhNYX2
L9aD1PslHQSLYfjbNp6gYSr/YrBECYSP2g6WjlLzpHvLpQR+3N1mNTaG3e8d
lF0COd+0Pl4/QeXbe5JZAhUetGYd+oItOX28qQSaS7f2XPpGPf9TIrMEPuhu
WQz5Qc2jw1+HEph+r0W0YobanzjOUwI7xFs0P81R/fio96wYzrc1X+dZoM4z
dHqOPM+d5sgjy9R5Y+4qFUH1Hc3IhmUc+8IW00LowGSOP2XFznl417QAhjsz
udBqbEl2xUP5sHIrU2GSA3u+Q2YxF47VN5nzrcMeoXvH58B9m5te/ceLTbew
lMmAZtWN7eH82I4hMz2p8MF/jXNVW7Dll7bpJ8H2SsYJARHs+LVK6c+h7PQJ
28diVL71aiKh0G9HTcBvCWzPMAnoCY8/ruzqlqPyr7gl/pBIKD00d2wvFT/l
k/iEWP5SvCV/P+WSU5nRRKlu3vlQZWzhY855KcSmh7u9aSrY7aeez6cTzoWZ
adeOYYfU7dicTXR82tU8rEb1QyvBO5eQ25L6XUcTW2CvzoV8wl9bbGOlDlX/
ya8ihcSEe4KijB52iZllZRFxInebWbQh1b9fU3tKiJcfou9xmGC7zPi5lRL/
+DYn3DHHVslDz8sIC43w2omz1H6zmx+XE6WuGyeMranzlVxXrSA2vQ5Z23CJ
qk/rW2MFceMd125FW2x2tiHBSqJ9g79+sj02zWvVgUpC7jj7LV5HbMavhC2V
hP8t7+cPb2BbiRyvryAm0lZU/rxF1cMmc6iCUBv0GDnvim1i6HmrnEjkWlrZ
cQ9bw3b5bhlBU3GVULmPrftiVquUsHSa08z2ovpRLjpRTJQlOTts88HmRpL6
RQR/34/QQH9qPlabBxQQzmuuFS4GYfuYPH+eR3Qcnur/7wl1H/pS93IIOQfb
xYFnVL/26d7MJCY6LxwrjaHOa/on5SVhGWPScTOdOh/LeJcLLGvtmRl7TfVn
ekdQKBRgMRAwzKXyHbL+FgM7L+mc21tCzU/huvJXcHdk04OEcmq+JNChbBjQ
pJ7CjbBt7ktr5UG13apfv9VRvvHZshgmnkfcZxup/umPlpZCWpiyQkszVR/f
0x/l8Gx9qbFy+//Ps58FwvJ5xbsZXVQ/LnN+RFBAuiB2Sx+2RVRqMx3estxT
7TtA9fdgeGAV7ArO+jj/lqpv1fN91VC+WnqNzSi1H8ysrIaBM2kyfWPUfNr+
lqqBk+LiumoT2NPzr1xroLpp4o3CL1Q8ncisgUn+whFi37GP3ziFaiALfFH2
9Ce2F8zIr4Fnp7cMr/hN7ad427cGVuyIZHH6Q82D+6ajNXDzGb6do4vU/Kpy
DlZDyd9fD6vQPpEW++VnVg0VI+r141ZiewbFwip4XCnOdpkNm/eZNHsV1H9z
29OSAzuy5YwSHVq56kZUcGG3a3bFQ3hNcFeW4AbKu3MTK2CA5cDgG37sHBFT
uRIYtZz3U0kQ24pDtrIQpsX5r4nchj0iWUj+PqobVT5gtBN7+ouEWwZcvhT3
pHMvtgrfO+77kHO1y6s9itg0uSFjO0IwTZcecpBycLxIEKE0yfLtlAq2Y6Xd
pkRCzX+ANesYNveoaE4aYSiTL8ilTtXj9EA4i7jucPEkUwebIZGwt4DwXH/E
SkoPO+Ti0WdFRFAO321fQ2y6Nnd3CRGj9y1wwph63hJ+KSPSf9YnqZtj6642
eFNBlDyNK085S9WTdyAKEg0KLp2rrLHt9dZvohO9PbqfL17CLrB3rqcTY7d2
0WptPlHf43OWVcRP/hX8ovbYLgEcA1UES+mA7INr2Bcl3hyuJrjN8o+POmGn
7TV9UE1sW/A3V7mF3S945HU1IRNz0SnuDrV/rnVFNXHoyBHfZTdsjdau7GpC
Y5gv3tIT2ySm8XE1YezxrajiIdXfVZXHq4nLwg0tgo+p+taf+FRFOFfFjbn6
UfF3365VEQ+sXRbeBFLPfzN7RydCVurxHAyl5qPaUpFOxCbt2hUZRp2ng2cK
Eq9PrFCZi6CeX1gDKomK8QEjo2gqvu6wTTnR9Dj/amEsVS8ssCsl+iUDvHhf
UucxPnuymPjUeDH6RjJ1n3zuqwsJVs5NjXsyqf6nfd6dQxwJcRHLKqWeH2m0
DSe09+gd5qqk7mt37fAjwqxzl749nYozqvYfJm7xDnpINWDHP+d3eAZzIo8M
pnRT8xdw3TwbykaPjDD7qHiiwYdcmP7i4fj0ADU/k23/8qFkvPgU3zB1nlFv
WhFMftn449AoVR/n+/fFcEey/dy5Mer9CbFLKoXxqeuXvD5RLnyrWg63puet
SJ+k3h9RvooKGJV5hr3tK/U+/J7jgpA/e55rZpqytNQBBMNyozdunsHm5Onb
Qoc8BcRmYg57KFDDiw6Di0a3XfiL3awr1EeHnKVeYj5L2JLV0huroF+5hNRr
2gTpRaO+A1VwNWza3bkSW0h4z4kq6EW/un+ODZtT7f2hKshSw31YiAO75Jrq
5iroXpevcpQL22bv2RE6XGwwUrvMjd0fURhCh3ea/mj5b8QecomSosPfzTF6
OZuwrVYVWCDo3AaMezZjy48xlSD80fHe4q8QtuMll8kK6NDtbb1dmMpX9PBG
OfzSK2lzXBSb24/eUwpt3jCv2opT+dD+jSXwwvCGO/ky2BpfoWQBHBkpcO/f
ja3ELFmVB89+MPZa2oud0+sYnA1NJl4Eqx/EntZz5EyBPZMqz+yVsdt/pGxI
gPpfP0SFAip/HfevCKjzc1fK4Alsmu7dZBuoulhYcU2fel6ZNzCRQMsm1WFn
sOPVtxamEcosiw2lJtjCZt9qXxMH2FS7Vp7D1q18U5FPFLB/7Je0purT+Mde
ROxd6zOscwnbxF72cAkhw936OeI/7PkOcKKCeMVz/XuFA3ZkXxQ/JMT5eGdH
r1P1ZHXUIiKJv/gv202qP5pSyXRCZIsZTcYFW0V+nUEVESu0tErvLrZM8sJk
FSG0PX7tLXfs7tyd9tXEc5FjG6LvY0uyF/ZUE5vExjfRvSjf5peoIcLEfYU+
PqbO61p3robYsEtmB4c/tleci0cNESTdJrE7iDrv2yHvGoJTzknWMBS74uIn
pxrCV55v350w6n78LqrVEGz7SpRiI6h5Kouj1RBe+82Jmihs52sLCdUEi9Ly
sYkX2AqX8qSqiYKabWp6CVR/KosDqgib00CjLAk7Rseuk04IDp7TFE3D9tHv
+YOI1sue2gEZVH8MT/FC4v7P+FOzWVR/rl5cLicU3Kt0z+ZRXv2hpJSIerbi
jHwp9fxDzroCQkdE1Ph5BXXeJT/BPIL2+pjpCjrlhxvTs4jLtV6W3fXUeVmm
F14Se3+xXXbpxvZ8tMbnEfzoLmEz2oc9Up7zMgJGcmjYaQ5i0/s9vyfAZRFf
B6H32CFhNm2vYe7rV47eH6n5kwyGufDiwSanbxNU/jSGSwFk6q69Tf+O7SJm
9rgUug9J39n1i5rPt7Od5XCvjfbdJ7+p/swbT1fCj7/s7y38oerpdBpEMNIj
0OPiEvbYxn0MOtRam3W/hfYZz98DX+8quBze+lCRFZtW8FisGubu+O4dtxq7
5KVhUjW8mLXeh30ttomNNGsN5D8k73d9HbbLjW3HamBTnW7AwAbKmW5WNfCe
3vWgY3zYPp8MLGqg/NvQkEwB7IliAcUa+MEm7wmfELakbubXahg+0xnmvh1b
vvbQw2qo6fkr/NMObG6e0t9VcGkt73NdcWzPlgaNKpgToRBdugu73VvPlQ4v
ip55sUMWW3hjrgAiv5c34/zlsadH5GiVsOlQeMLMPmwrbfesMnivvijR8gC2
49oh8RIor9+XXH+IiovP/lcIw20F0iOPYo/YDw9mwZOzSpksJyg/sLdNg4ue
pll2GtjxBq1FCdA6MipP+TTVPwGdb/egXINQ+YgFtkrRfa1XxKj+kcqTVlT+
OHvVHCJs2BLlXaDWx4y35xN/Z2NrvOyoengEMsqI1/dR3der1Hpj3i+VhBXX
SIPRdewcroIHdKJBTKRZ0gWb/jbNtIaY3MBZaXyXuq9vib61BOe/368fuWNH
XrkeX0fITY3GFt6n+setH1NP6L5pDh7zouq7+uJuA+FUX+y50Yc632yjMoMI
y395XdWfuq+bIcMMoig+0Pp6EFWfWNe5RqI/0MUgPhRb43YiaiT+ul443hZG
zYeJw1IjIWRzav9yBHZ/u41AE0GcOSguG02dl4WHu4mwUhXjt4il5kOVe6yR
eLB7Pbt/ApX/vXdYI5Ek9He+NIny316RRqJ+zcfPE6mUC5UCGMTE77YB/gxs
RsbK7gaCY6yMqZZFzVNjz596QqYjueJmLrZAZfJyHXEKhrxOKqDmYTz6Qy3h
mHE3tquYqs9mdXoN8STycvCKciof9z0D8nvjree5B2LPM4tH6cT8OQnr4Fqq
/k5b8vfJFh0eA9hA3Y+u859iQvnQ0rGvTVQ/vTZdIn8v8nbt1Oqg5jG2HL0i
2BvdP7MNU88/ERb1gVJFtgP7R6n7+7ZVPAZqJxoyL45R9xN9YX0KDLkn9bp6
krrvUzp9eTDPji/2x1fKSs0xRbDbmBYs/IN6X45WHiuDAnt7Hd3nqP7c8g2m
w0Pbq86//ovNrqJLvs8WnJn6Q0tUv0+8j62B7n/Cj61lmcTfn9c9i7Uwfvy+
wiFW7Had3sP1sLrLfqftauzItHLTBjhGN94UyYHdTw8wZEC2LNXVDVzYuvl3
pRqhZLTs/Cw3td7695tGqOkj8FmMF5t+sPB8E7S/uXLAgB+bsdBOb4JB1t+a
HmzB5j5s/bsJ5px+U567FXte8i4LE3Yq12aOCFPe4jjaBGd2Zb9YL4Y90bYp
vAlu4o8KIiSwfZxHtjdBJVZvj6tSVH26b9wbodmPa44xstjs69fkM6DbsNl5
pjy1XnNTZQOMZZ7Q/7uP8vaFF/WQXiJ/bNcBbJvXX43q4PtkQQWTQ9glxy5/
roGsT9l2Pj6CLSm7xbgaalwdYvt4DHvkonJkJRRs3PFlpTq2fPKB2lL4Tcy2
bYcmFdd7VlYInw3NRljpUj4opZQO32ut3zVkga1SPZcZThSmnuFaOIftySbH
l0z4rIz5sfkCdvwfr7dZxO5yyTJjW6rfMf9JlRJuUqpaXTepeny5+uqI0498
dv90ofLddv/bQOx437pxgxv2NEN3VRPx+wjf/G4PbIH3fjNMovG5+dCpB1R/
eKXqWoiY2QT6VW8q/kTRuY1w1JtICvDBdryZ59FOHHst55vhT+1/7uueDmLT
mptXm4KwLVbBtg7i88Vyvc+h1H6mG006iQo6iyL7M2w3uc+NnUSIkMYWiUjK
l6LFuogLLkHLJ6Kx7WMNrnQRit3d7y/GYiddKwntIjjkBRseJmDXXrJP7CLe
+p/PeJmELbP7VEwXkfMpNbgqFVthpdHTLuLhsW83RtKxm6cvm3cRRnEKJv9e
U/NQ1MneRUgtuCpvy8VWUh990UksGVUJHymg7uvSuS2dRHve6lUWxdT5L9W7
dxBJ6059di2j8nPXMtuJ23ZhLc8rsbUdJFa0E5r1A7kldKo/r5pOtBJbd4iE
99VQ74+U/NlmYvreFdff9dgmUROnm4iI/TOqCi3U+9Em0FRH2IUekjBop+a5
/75JDUF89Vzr1IVN2y7UTP7/L4mrO/sNVZ9s0WgRUUwzLGkdovZzK9TPJfws
omK+vqPWi4wapRJ7eCUuSY9Tdgz6cpJgdbx6UvMzNU/JZ+XDYT8zX9Z2ipq/
LzWPU6D7Q5XfKT+xrXzEXIug3rtHA3Wz1LxtVpgoh2KHW+DYPNW/D7XhdNj0
0/Txjn/U/ZvXB9fBF6fi/zu64gs+32DdcAN0TB8/bbUKu+SLN0cTPM4mq+DB
jj2yL3h9M+S3viEQuxZbOBROtkBh9QN/aOux5S1zy9uglMzCmws82J5Gp9Pb
4b4NqKyeD5tTGph2QOXfD6J3bcYOydP73AFPDKq5BQhhW/y5ZNoJT9E5LL9v
x7bfG5LWCY2TW4/oi2LH/6fY2wmt/J5sKxSn6uPQbOuEtteM/vFLYQuwV5d2
QifDLSOustgB/mwPOuHdg8P0t/LYmZGFkp3Qa9vLBBUFbDG7/tcdMHDl5QeJ
B7CVifoNHTB8YtcFtsPU89ImZ9phXMvXY7YEdf5/N361wrS8XLHmo9iRkUdo
LTA34uaq3Sew+9f+7WqCZW4Hx0M1sJXeCDkxYLNaVarxaWzdqyFCNbBH2tun
TB9b8oXzHjoc5j5pu9UIW0XRlvz+Tw+0S32wwKbFyySlwz8obK2aFdXP10tn
ouCKZJOptAtUfOautR7Be23ktYMdVV9sln4mcXDltPzf21Q8+WluLaE6kb/B
8i72/P6nEw2Edsvtn8idui/BwyxM4kze4a4dD6j6M41+txBnI/7le3tT9d90
Ot9OXHGrCZvwwT4usCW3g3A8//imVgB2wb7PnzqJO2paRlnBVD+De1d2Ew+k
1x/Y8BRbW3vlyh7Cn7uL3zkce6qy9kMPETYbPt/7nPJUQlIv8WLA7M3BF9T9
nTQ/3kekoG1lMfFU/d8/VfUR2Unvo/4lYjue9RDqJ0p8U+5ap2Ln2Dwz6Ceq
HOws6tKxfYyXLvcTTQZyRySzqHpFeY37iS6ln1v9c7FjnA5I9RNDW4uWvxZQ
z7fG9PYRH1e4vtMtoXyAfq6P+PbpCD2/HNvqx1hDLzHXzJKwCWELjQRy9hK0
vLr7d6qxZ76I7+kh1kT4Wg/VUfPZsXygm+Bx0zkGGrEVYtR3dBGC5zeIvWzG
DrMq+dFBiKn1sK5qx3Y7oJPWTihyW9Y39WIzCve9YhJgVjhVdoDKt08/jkFo
DIw9DnlLzUdwnEsdYZ5kf9JoDJv7rWd7JdE5+VfA4xNV773/HhUTmnt8J1In
KbeLyOUSh2Dy4z/T1PwIvhoOJfJYFYx3zFD9/c08dQ9KaVWLa81R80O/tCke
bukfrotZojydy10An2y7+qyONoWfn9JqK4UclxYufluJzS1KP4PggwxfBf7V
2PSjHTrV8O8PflYVDsqGH5troZNSSpcNF7YAfd3OBjjprpAYyo09PbzDoBFa
11U7lW2krOhtyIQDa/VUP2zCdnnoKN4C9fXfbeDcgl1SmlDfCpsir44qbMV2
PnB3cztUfbeQYylM7cf2uaAdlu3083wkSj0f2K/QAffaC+hmi2MvBrVHdsD0
vJTt/buwOXfcGumAO/4ofKfJYveLqs50wChQA3fJY6d5LKzshDyP9IL092G3
P66f64B+ze8s7ypiG3Y8aeuAKzY6yCYdxHbz4A7ogK6mi4vNytgzNWOyHfBn
nF/zLKDyN9gXtkO7cYGYbceoeta6ibbD9zKp/6mrYc+fk/zZCs1u7D/seJLa
P/y+QwvsLK3heK5N9Vs9BjKhJk1/oOo0tk2y9MdGeCjQ4c5GI6p/rauq62Be
16KGsinV77kf7jVQaou/wCULbNrQ7e1VcEtqanGRNbbupfh9JfDJ1/2P312i
7pdN6Hce5FCoNWK3xRbOmlDOgH/pI7Om16j4kYQpbzgwsFlh6S6V767sVB6h
L5K2UtwDO2Szo1gJ0XRFsevUAyo/q93hSqJsRt8p3oe6H/cPTjXE3sOjRxv9
qfjD7UV1RPr9axt+BmFrvC4ZbCCi1gXkHHtGna82vYpJ8JzZ4mkfiT3hce9e
C+EXnXb6WTR1vusxG9qIFe8Vt8NYbMd1CkQ74SpZ9208gdqvQGS4nfjpYADX
J1P30/P1SgdhVzgaqJRGuVpwsIN4v3DN8nwG1T906EAnYaq6LOOXha10UsCt
k2Dj4fjzOxdb+7h5ZidRMMpXd6EQW0ZYuaqTsM4VCW0vwY6JlyrvJLjvy1oe
qcBWub0+t5OAugd3pSNqXmdNb3QS9sInZjfVUP27ubi1k9gyrVv1sJ7qx2et
nA6CgSwCpxuxk46FSnUQt4JtTC1bsMP4uwLbCbFzzjub2ql5DF5R3EZ0ynn+
UOym+kczl2olPJb9KxP7qHl6cdWlmZBpjfDlHqQcVJ3YRAy8SDxzb5iqz/BD
NoNQPFL+1egjtf+svGstMcbZUFozQc1fayioJp4MdXrLT1H3/zv+MyK+3p3c
yvELO/7ahntFRFLZ5lOVtK/4PG8Myv0Jfb+dW6RYKZ+75uAEaWZ7xsNXY9OF
3V6GQ/M/Gu6O67CFteNvZUL2RkPNtxuwuQM8QB4sirTapMmH7XhulqsI8ii5
ZIkKYbd3ic1UQPpqL9eQ7dhpcXosdOjQF6y2tANb94jaxSoolBrNYyeObUNo
J1TDxlupw727qHqy5otq4C21/PRjslQ9hoJJtVDsfyWcaTyVXRfGUaQIFaLM
ZUzShFQ7SpGEkOlRkamkQpokCRVCKFNkzjzP43bOMR0zh4SQUpIkU5JSb3u9
H/+/de+117rWtfd9ny+Hv+ZGnuJXeP/U29djxsfmw8J7IF/3WeYG7Fncy+Wv
TFglqtipASs8eD+woEqYnU+2pAEPGk2lWCPCapebuxqw/9Yll051wqasmbUN
WGWe9dDBo4T74m8ENOCx2nUcGVpQ/w+77Q342VPh1/w6hOlnSlPr8WFr2SRv
PcJlL878+z33bdfeq9MGsP+GMfk6HMOivv+MMfRzaPv+WqzN0FnVbAb9RovK
0vBigmm30hnoR2t0kYJTnG3ikiwJe+b4mdVgI3WnSzw2hBX9bIKqMMs6d+W7
9qC/Y2hYOT6b97TD+ArhEfFlxULM6RkXXesM/U2uSsjFFXqZ9orXIR/9RX4a
5vtG+7vaHeKXRiaf4dbtszuq/SCu36aQiD6fpU98C4B6la9npiG24NiXEsGQ
3+0pSy46NKu92Tcc5muxMbgYWWwR762Iguev118qQ7eMfgR/jYF8nLGSlaig
JInNMAlYLmIDBXV8uk19kAL60uL3UNGkgL57WTrwis3//MuuLaX8JQvmpb64
sxZJ3vk9I5xHePr3Uc5/30dZjCz9QvDboHpbHTo7lGbvXfJ/vY661qM7XPck
SsqhnnufmRpQ5KHTQ+NVhBdrX7k0oGKnbZGbKYSDlSabGhAjgdlQtxaeV9Fg
a0RTjNdr7zfA8zaHZBoRx8ocemETzFtVXrERyez18R5rJRxZcVikEWnYmSPB
Tsjn9X22AVlFKP480Q3ztGPKbUAedLYij17Q+422YQN6/nPwSn4/4fEu6kg9
KpUrlP0wSNjyzmnTetTzn98H/hHw4wW+yjo0HXAu7vgo6HNEeU0dWov3mruP
gd9612nWIrlvHHy5n6E+Y+5rNGR9qsyfdxrW9/nEUpCnV9BRzTnQz/XE4RoU
U2jD5LYA50XGflc16uVbd+Ptb6ifXjJS9u/75aJVxuoposdwZEYusuVQExri
JKw2uEE8E3kd4H/NzUOYMsSflIIqY2k61/khPtNWH436OiJXpQkS9mSsNnuK
5pmu0gaEgLs22D1ECtabVdS2QH7jpStO+MSzmVkXKeDm0fMP8YX6xuyXssDi
vQMh2GfhxYU+edjvx0meSJwg7bqFQxHi76aaX2Bsqj18cDfsz3HfKwEP+IlF
OSlB3LF6MAn/qFgwTNoH8V0XZl9i3slWrt4DwH1fqKl4p3BSE7sa1KcWrJ2O
dXVv++w/QthSVTogAzvc0zt05Rjk82Y8yMSP8iSX4o8TFluFlLNw8rtfRd06
hEfWLMVnYcp6xlU2fag3Vb4uCw8dSZPbZwj5Xl1NzMJLrh4fLxnD8yUtB7Mw
nTfvaZAZ4XjXiJhMHF70Tj3fAuq5w0/JwDZGG6a7z0HcIDAjHe+a14hdOA/5
bL+eScNMz27oCNrB87/mh1Jw++60pf0Xob9yE4WXOKa7P+2sI9Q7MWeQhB2u
cZjcvwr16bTrJWCVDQdZk12AbeZOxWK2wiuFDdchn194fRROnO3i5nQHvrRl
QzDud46kh/uCHpR9LS4oZV3zjfLHwHHt37yRa/6vrYNBwPHv7IIQz8zZ++Jh
wJf2OkSh4eDgHRqRUF8Dt3EsylKkDdlFQ39Rnx8nIC0nSdWsBGBrP6YUxM9j
Mt6eDPvzZK5NQx9yfcNnUmH9t9jFdFSgV6HBmwn5Lw/jTOT57cusUg7Ev0uf
zUa6T4QTzPJh/anrPTlIaIeennsRYUVzaZ48NNHuuRxbCvHS9fF5qOxKQSa1
Ava/lSWYjx5yfTD7UE14utrDPR8Z5fCxr6LC+tzH9HwkoatZIlsH80yaWs5H
019v2eg0EnZSZhMuQDgwY/3VZtDfelCyAAVsH6SEtAFzdAsUIPO2tVeLOqF+
UcOFfCRz+ZDw627Cnc821+SjBU7nlp+9MG8nTtd8VJeVeFtoAObFIsGfj0J1
eqQPDUG/dOeUPGQ5ydprNQL1u8hJ5SGFAGUfn1HYr110ey76ve3irtQx4Nyd
s9ko4lJr0OQkrBct2JOJbDj+HOCehvx7t5elo12ZO77snIP+ug7Lp6H2iVDN
mz8hrsc1n4xi/Ou+R/2G+k34TiYhB7mFpKq/kI+JMzkBsTmYMbGwfSP6+kbh
GNSz+nHO1tWE1c4NP41CielVFpqchCkcVM9w5HR8ao0DN2GmI2X+TxH6LFoe
sB7iTlylwYjT75R9Lh/k++HOF4AGZLz5GALA7JO8j1Aavah2fjNwwb4bXujG
hTHnjaKQb7rU1R25hYQJeUgA24ftd0UeFRqNHySBN+2WdUBeo3POJ2SBZV70
/YcecCYJFcgD83CqqiHfvQaNAorAwdloPw44y+xybzewhQhVHwc/yhMaUwI2
rTE1xs/yzjXqqAL3nDA0wZH9XC6FB4Gr5piM/n0fYKFN6sDsVHEtHL/tcqOn
BjDTYPLowSQjIZdPmsB98x/1UMrdFiHdE8ArWMKtUEaKW2OR7v/7+c5wRDkd
si6bDaD/0361rqhgsU/I6zTErwZ23EEl4r6N46b/1+Nj/n1Uoa3somcB/PNK
5gNEjQlrFLIGvXPEJgNRXb2Gi7cdxB/3rg5B9Kk5oYmLhEdoNvxPUaeagUup
E8SHh7+Ho56LzMIirjDf3rCySNQXmtfocxN4rM3gORqsPOfyxQ3q0+iuikZv
P3AJG3jAeo7n32LQ+7W4sew+xL+u/fgCjSlddhF9QDieWzsiFk2cExJ+6As8
/oYpDk35tjROPiYsdvS+cByazXdzMXwC6yVvfo5FCwOywhWhkD+GahWLllb0
N4qFE7ZctdXnBVqW93V5FAXPbz6jF4OYjJWFp2Kgv/OttOdo5b2xRqN4qP8y
89tIxJ4W5lKZBOtjz74MR5xdGsISqZDf203gGeJZmmv0zYC4QdP+EMS7Jcnl
Wzbkn22TDkCbrzPTq4rg+dLj7+8gkdg8ly1lwFttwi4gicZzwv6VwEW/9+tj
OUHsYkKD/f02IG+scPiyMK6H+A5N8QC865IQfWsT5DcyDgjF+6rdhGc7YP/K
0uvR+MCYLN20G9ZbJ7TGYTXufpeaXmD+NUyJWMtKmR4wRDhvV+zHl1jHf8xl
bgTW/x5/mYr1C8OEzT8Q5vELO5iOjQY16JRPwMkvUjOwKeu8i/QXeH739HAm
tlBIEg6aIjzt92U4C1uaGNDnZ2C/Lo2kbGzjyXztv+8wvxtrZXKwfXqeMG2R
sFNOy8UcPLBbrnTqF+jfse5CDtbBSfqb/0L+w/elc7BlMtf3LczT/1j/cGpK
No662KJewUJYUf7EhyzMUPAN0l9J2Cm85W0m5pzXeDPGSjhYLicyAx8tZ5a5
u4pwZ6kGdzr28MCuG1ZDPq2jGqm47MgdavoaWP98UeUlnmFX4VLjJJwXsuNb
IpZrnzfvXUt4OnffxXhs8zQ/1ZGbsFpYq2E0fmF6ZZ5lHeF48cULYbhXeJt6
1HqI837aFYSPpyUP1PNNw3n3/2KMvS5bSVtsBH671vYmqtol4jorQNgzS7nG
HylUR6wVFSJsaXjiZwziZfir3ZKAem23389BJyM0A7m2EvbtYNr3731lsXIg
WRL6KzORLkQ/x+5e65IhrBWxq68E7cpSpdjLEe4T43lWhhydf3D+2Qb5qoJV
KtBLpSKzZ9sJ87wLpVWi4V9OKXI7oH5Nnh3VSIC6fY6iCP1p8t3B6NTDiUMm
uwhHJtGTapD/idSAr7sJ0w9ZGFJQHY9Nv/de0C9ylkJBy6/EpDYpE+YcpApS
kVL0kEueCuxnM2NBRU6Wz2uOqRJeubvej4rSJU04h/YTvtD4Io6K3k9sMLt2
kLCMCVssFQnldb5cfQj6Laz0oaLT1wNn49QI9yimGFJRkKr2IaXDhG0c+tdQ
Ef0vW0DrEcK3JB0zKIi5vrbv/FHCB7an7qIgVX9PyZ/HIL/ojGYNctU76PJE
C/Td17xcjbJ5l7CkNsw/0dG3Co31l3BUnSDMrpr0uQKJxV0zNTgJeohbbSlH
ZjaKL8d1gUe5VEpRqOzXGQ990LvDRK4YtU6lIz4DwmK94ssFCN3e0qd+GvQO
zIrPQrfQyNY+Y8IUFVpOKspf8cL5iinhkaGDUYloaxA/R/R/4J9s3xPBaHXS
ajRvBXGrx7bP8bA8q1+WNdRruGckEReUMPXY2MJ5cRK7kobNm39cfHUB1kfv
987HCkZzRYEOUM/Rrj+FeMXw1N+jjrD/1FbTEtxnP6H95zJhleW1j8tw1szH
sJKroP/FqqcV2PPOu5ErzsD33K5UYSPWoW3S18DPxz9txFjmSd+Nt64wb8XR
gBq8LNBDjbgB/pi3sqVgRmIHp/4t8Cdry6d/v4flW0zY3QhnGQ/qULFbSUMi
5Q7hcVr/UyrWVaN9vXUX6rPSrKJiieZqlZ33CCcf+1JPxQuG5d6fPSG/cH0e
FTcPFbUneBEerFp/l4rj7PMEzX1gfiE626jYdSbTZv1D8PfCTCUFa91JzW1+
BH7+ULaDgoVYk5a8/MCPXBSuGjwdFHt0/2PQV3aFbzWuE3gePBcA811gtFXi
yMSwN5lBcH472EfLsaN8iJRNMMy3TYReitVLApyFQuF8liD3Ysyv5lvV8xT0
n+pdXYgnmrxXBYZBfpH823k4dMjtxXIkrM84ypyC7exvjBc/B6b5HI7HqjPO
u6/EwH5edl3P8OjKi03DcTBfzk+V9qgsyIY3IgHY+EtfIAoQsDynlwT6ySu3
PUd75E2+16TA/bffkDsdsZcYqN1KA/1ERcpy0OAh3ceKGaD/sPzmApTXdLx3
PBP0ODVCKUIPDI+KJ2QTTmMWPF6KzIfUHM1ywf/n/uSWIwX7A6Xr8iE/R+dM
JWKZUWZpLgA/sTJzYNTrtvukVxGcz8ZzizUoY+WOSNUSuC9CQ99QkEeQ3Ohs
KWHemaBEKjIQkFLILIf5OXLq05B0ovht60p4Xpp7lPbve1e4bnM1nG+xavNa
1FkswN2DCW/1OF9Si5IP8ZoHUGD/1qDvtehWE/dLDRrM4zmLQB3SMeSY/l1L
2OJJlHAdEhti219cD3rdtmWrQ/N2LA8vN8K8fiQzalHT9HKnZBP092XUqxbF
uv3cPNxMeF5vZmMtcln53S68FfI1GIbS0LGg6XzddqinomKWijYJTP5m64T+
0RZVKtI0C1Mv7YLzo+B+mYJcn6OH9t2g58bV/DWoXSiEm95LWOBqCG8l+nVG
1ehWH9xXTw4PlyGZuNFImQHoZ90L3xJ0X1xJwm8I+h1zDcxHOeff2u17C37Y
6fc2Gw0k+WZ+HoH7YVWETxraI/Vmj/YH8NcXo03RaFzOU5PjC9wv/Xx8IZjP
UTagchLi/Kad0fhwNqPz0hTw9KRkEo7ZIWneOgP3Adv5Ldm4yak91n0O+pt3
nMjDC/k3R+W/w/Olk1sLsd6eZsfARTj/Jz8plmL369fyDy7B80HWv8twWonQ
wtdfoHehx4sK/OpHvWrsMughl7iuCrPsu3pP9y/o79piXI13uAnU/WGaIfM6
8s4BY4tKKnsuC2FfwyM6Ndjvt8PJcysJe+7w+FmDSw7yhnKzEWYSa1ah4FGP
6t6aVYT7jn8xo2Aeit1mp9WEdWQnzlHwQWYeSzEOwkJ76rQp2OFweXInJ+E9
m7M3UXCE9/nPnlyEFzPWx9fgujoOhZ08hPPKrvZiPM1a7PJuHWFTtmP91VhY
82xpyAbCkcwd6VVY23fVb3U+wgK7nh2vxDea8tRm+QlrqV6uKMdJa8wfJApA
fu3IP6W488SKZoNNhNNicwRK8HJAFtcKIcLjEmYcRf++X04bFgpD3P9Jfz72
0U8b3CBOOP7aq20ZOD/klHidBGF9B2X+l3iYsWTrupWw2kO+tDiscvrktx5p
0Gdpa4o3/mI2yxyuAOs1o6ISkEB09LFjioR5TCPkU5HGoMbjhZ2Ep7vD07JQ
7NkIXpO9hC0f/4opRC1xamarlAkrTv4nWoIWRz6/KFWB+ZhUPChDBtYHpAUO
EHZ6+GqyCim90rbOPAjrOYNpGG3SNItDh2A+Zav2UdCfMvs3XWqE5QW+/qag
UbkbG20Pw3yNJbP+vf9jfAwXjxDW4L+oSUNZXE+fPD4K+iWsbKGhYM+EFhFN
wq2Hf+2rRa6zuasKtAgHxE+F1CJTG3zkqDbox7mxqxYd7G2913eC8GAE9Uct
ktB6U3npJOjt+mhlHWKr+Pzjjy7oU+7yLz6xbXF3qD7U6/21sxa1v2BzkjSA
ehW7gmtRATdfVpkh9Fv3RrkWRdzfMn7iNOFnShsbaMh9bufWt8YwH87F/TRk
aatm6WIK9WW+j6Iijde6MazmhGOsvUcoSOb4mb7I/wjz1nXyUBBn5SVe+TOQ
/9J9E4xm5N30a84SDm78a1OFKngi6B+twJ+pAuvKUKzXy5W3raHfsgPFxchr
vlCN0xY4VPhAITrR11m26wL0JyHzNxMNxq1Jv3cF/OIkuv4hoqwT/LjeCfwS
H5RyCL/0lhZPcYbz2JjD7ouv2GtEtbrCfMTO2CRgg36DV+dugH8qns+lYKUT
VuvmbkI9aQlWWfivgoef4B2oX/HamUL8IT6gPssd4jGeLcWYvj6aWc2DcGf4
W8F/3yc+6Qe778F5Wbf5aAUOXii9bXcf8p/5fLwKu15oKP7pBfUNKkpibDbQ
MxPg8//+1/TUYKQzul3sIeHJ12PpFCyBZy4WPoL+964+RcVsikwpx/wgf865
YSqeSOB63+9PWCWe4xQNt28QFrkcQLjso34aDRc+2GbOFAT9xl0bpeHIH/vC
nz6B9Vd5WWqx+0UthlQIYZnS7hW12PKNMVdFKNRTuXOchjVO2mqffAb1Osrl
0rBMzbWHI2Ggdzq3GQ2v3elFuxZBWOwk+xgVzyYG/2GLgvl+0Dem4l7eONXn
z6F+hwcZFFzxMPvG9hg4fza0hhocu1hZQHkB9WnqrcDYy6F5yjAO/NaXylmF
7Qf75D7Fg/5Bah/L8dh6KduYRDjfVzb9V4rtjl+LO5UM5/OseWwRtilZy1uV
CnxnPcrGo5Pmus7pUF/uutYUfH5Lmq9UJvhhwnBzPLYMPrwcnAP9Jd3Z7Yzf
NjxRPpYHfNZOxAedXR50/pUP/MY+NBKdcbg5ZlsM/vtvsScDmWtkdahWgV49
V/+rRP1uP1dPV0Mcxz/DyDT/mMbLGohfb++moL5PTz3MqaCPjsO/+8BE5F0Z
dy1herxbYi3qNVKYq6uDemXuvq9Dxo/vbHdrgPl48rI2oFdUuv0OOtRzZhN7
IzJa5Ev80ATxiy8+N6JuBevBqBaYb3Z7Kh0Z2Obx67XBfeOzX70JMaKX9Vd2
wH1gnVfUhE4xtB+Xd8L7wFKNuRl1skfWX2GAn0dXSDUj/UMf/27pITwyJyvR
jDqu71LtfwX3DYvO9yakm3XPNeg11OvqHteE2t635hzph3lGqYs3IR3BTZ8X
Bwizr+xzo6NWPfstOYNw376IyGpEJx4WnbEeBr9qu5Y2oOYq5kiBEZh3ZkpM
PdKe02W0vQP/ROSfqUNNsjGc3qOgl6n5bxrSsvx8TOUj1LM60Y2KGsOV7n8d
g3r2PyuuQcfavCsTx8EvsR6oCh1VFVFcOwn+qPtRU4QO8xoKvp8FP+yk5gUj
qna8YcQ86Ksvr3YEq93/GqizAH6/bfU9BB+aesRS+hPy61XuzsB466sDjr+g
3/p2/XyM/pO4Kb4M/t57/UoxPkCv+vKYaZbkk15Wq8aVf1ZLqbMQTjs7dY2C
VfeaWC6sIGzaTZGn4YpLyc8zWQkvDhQ11uJ9iTM9lqsIi61rU6/HZX2Im381
Yf2d+yMbsAp3wPGWNcDCe+mNuPRov7cnJ/ADqw46VnKXwnu5CI9X1mQ24cuj
fd/auAlTrHlPNeNk7cfidusIT9dva2/GA/kHDf+sJ2z58iJ/C14nOO0Tzks4
WDRTrQVreSaWKPAT5olZ/489PhmNN2yEfPJreVtwse6qTecECZcl51Y148ni
8hM/NkH/HXaqzVhC2PHuEyHCWp4CgU3YzEckV1oE1ovwFNNx8JfOkRpRwp1b
NxU24gYD7/Wm4oTV1hz0bcDL5Xs1piUIjwzQ99bjPeLj1323Er71Xau6Fjv4
Pk8VkyIssM9fjIYTvun0l0mDntsCrSi4z/jvmlOyhJ0eq7JWYy6cf+CzHOgl
f5qzHLsH8McLKkD+Yz888rCx7Iid2x6of98+Vm8UGBwauV4J6snuU3+B6n5o
NGcow3z0UUga2tmQvv2NKvQz8X1PCeK0vja/Xx30er0QUYeONEtK9RwGfUrW
tTQgt519Jo4aUG+M30c6yov091t5DPoffj/ajD79PVAZo0m4z/APrRWJ2H+b
3HMc/GMxdq8dGbUniLRpw34fqByd6PFeI31bHdgvMKW2E9Fi2LyWTxK22HbJ
rgv9XFFeGKYH/U10zHYhxUuXPm4/BfnHvtkzkB1DeGODAeGVzF/rGOjFvk6t
s0aE6UcX2btRT7yX28Jp8EdT9O5utIZ9b1aQCWH36Qsa3Uj96qchKTPwc/Ta
/d3oVm8Ud4059FPVJtSNcg/qqJtYEPZd2vCBgcaS/7h8OwP9WNkHMpAQZ37y
o3OEi7L4hBjI8Jp1r6gV4Sx9qZAu5D/Ax152HvJHyHztRBR1+j59G8IfhPsV
O9GPNLdL47bQH/++inakwLP9hac9zJdj6WMrsrn5tl3gIvhhxuBTM4oeDmHK
dyAc7/yeQkfs2QvW7y5DvYoX2OvQId70sNtXwf+O/e5UdOPOf43rnEFfI0ZW
NRo9TpE77Ap6nH0SXIBcLogZM66DP+b7BtMRyyPP++dvgn8mPg/GILE6tT4v
N8Ke+5dMQ3De+/gVG9xhfWOJSjI+xMy8I+ku1L80kZ2LzyLqg1pPmO/ODvZK
/NVCPN/QizC7fZsyBbvfuT846g3nabvwKxrmfP5ulesDqE/0smk9ji5T373y
EfTDvVTdiOVeJ5x95gvrF6RYmnHFd2b/rf5wHvZ4irfi47zni4seQ/28FIF2
3LeLNqIRCPoFDn/owPanJDhfBREWynlC7cQLV72UbYOhPt3rt7rww6D357+H
EPY5Nc/HwHzZh4MePCXs+n4qkoGTWxLL+cIgTrnJ1I33TLB8fBlOeJ7v44lu
XMtuzaMUCfUuVLt1YwPp2v0NUYTzmiTdu/G7o1vsjaPBj9sDnbuxk4136FgM
4Z57ctrdmMl7tPpG7P/nQ2Ptxk8Sjnxmiyccs+9DMgOLUJJ4IxIIJ+/ykGbg
nOEVatJJ4KcKjqAufHDZ+lJpMvj/mXZ/J27dXBeumQL+chFY04n/U91Ke50K
9d1af6QdT5j6fLVPB/2FbdVb8epwDQ3fLODT1aWNOLIo+apADtS7//u/+0qm
e2V0Wi7Me1n03w+KYzz1M/QCyFfp3F6OexUkhc2KwB+T8n2F2PbkA63PxeCH
wTcumdjH/2jc6nLwE8PstAumrmzQ0a4B/wpyWJUh/S1StwYooBd1KR6jEfWH
SQ40uN8vvrSkoT8ex5b86+G+EVqvRkdBL1IkNzcSlrn8lq0FCVexncqkQ36h
5aw2dOBnQ2pLC8SnBDW6UMtG6e7/2ghz7pb4j4HMlR79+dJOeFDkvXk3mjD6
JOveCfnLXqn3oNvXNE9zMqBf1ML1CrGHpnrGdMN98yaQ8gpF5q3Kkn8F92f4
JuNeJN1h/7qql/DvN6XtvajkayPLyT7CB8LiZV+jkU47+b/9MD++nQ6v0Zoi
VuP8N3BfPFn76DXaE5F8z3oI9BqN9HyNzrkdSed7C35NrDV+jfzPvGc0joBf
6f6rX6Mitfu/b7+H/FLcz3vR8BYxKfkPwKXB7L2IfVWN3vBHwioXa0+/Qrsm
ztwO/gR6Uku9epBF2+/Ew59Bj2/vgrvRw7zo1vkJuK/4f91noPynqgspk4Sf
cU2YdKHBG/2iZlNQb+xX3k7EZn7rOMc0+MVv4HobMhcribk6B+8zOo5oRD4r
TjeIfwfOMrhZh3LG5r51L8D7XHfrQSpakb3ziMoS+AWT/yfI2pf9mYl5jvT3
J2p/JO4V0tlQyAK8rHwhHTMxfTlgu5Kw2jWZ3YXYqEEmuGkVYU/1teE12CO9
sfzOasI8zT8KaDgtwG50Owfh6bwdrvV42SBZKZRrDt6vHs7NWEbpiKUGD2Em
8dGXrdhA8L3fwjrgMNXkduz+27MwbQPhqrUtezpxylvRIXM+wnmBBT87cScN
s63dSFg/mB7XhZdenlGsESAcuX+nFANv9ftt5ryJsNafEwEMrOsY7b1FiPDk
ibIuBr6lp5r9SpjwM6GTIwycuKu/95Eo4Z4c5Y8M3Mp3i0lVHPovmGti4B+L
/HKTEpCPPS2IgSUGiw1jtxL+bea4h4F1aozu6ksRZr9VWtmFbyTOpbDIwH7P
DSS7cPyD0M4iWcK+89ddOnHzhZ1LdtsIO6lsON6B5090bhHcTrjMoe92GxbZ
cfVkiwLoldDi1oKPr+e6eVeR8IWcu3pN2PV7VvyOXbCfPt/vBhzbd6L53W7Q
bz3Dpw7PxvoJH1MmHLxUewtjIS8ZzUUV6Gf89XgZPmbb6JShSthSY2pvIY7e
xlrHhWC+cqZKsVijzNPhtQbh+KI7d3KRVKvPY8djMO+Drj+LEPuIbxazFuST
t1pfgVpWhUxtOwH9sZwdoaKszWHcVB3CYlXJW+tQ0I4oRWNdwmk1DdoNyMAk
wcXzFPT789XOZrTn0sunfIaEO2sWv7YgvnvpRRlGhGWsT3m1oYXQ7FeHjCHf
Ru6v7agvJX+hxwT6v2TK34kqKoo3OpgBB47FdaKY9nKVv+aEOUdK1nchj/fV
Zs8soN/n9le60LkFqpvsWfDrRH5BF1Jb0xCNzxHuk9Wd6kISIs1VhlaERzr7
WRho5a72ofHzMM8Na5n/fX8cZfy5a0N48KbzeBeim/WKbrADPx7lL+9C6ZcH
1NLsCcdEVV779/1xf9jq4EXCBz7sFexCjmHvvRgOhAOM36d3It30sSR7R8JC
E1ekOpFi9UTd78vgZ3lH0Q60vmvqY8hV8INPVFsbmvswyybtDPPVw2atqGdx
QbrKhfD4jE5DMyrh/KV1yhXm9WuJrwm57Vnx+M5NOI+jehfrkYXWqiye2+Cn
+iKXWnTQgqPtpRvowXrcgYqYfDZwd94F1rCyrECPurc83eoD+ZTY8hPQhU/S
ReUPwC9VAx9CkPavba90H4H/FiU8jiCuLXs23vaHuK6HRzyeVlJR4QoATn0S
nIa7tA+YJQXCPFadUMjDz1w0otuCQb/06bul+MZDrarzoeCHi8+HK7Dpc52h
H0+h/k7rNRir5uj/CQgDftvsQcGbaUaiEhEwL7vrA1T8+5WpWmkk6Cecz1+L
hz9bWOk8B7+l7ttVhynLll7vomF/z5lt9ThxnW3SjRdQ34ZFlgbsI3mxjiMO
+vkWVdKAbfdd/hgfD/rynTnWiI+ddGZTSgQ9drMUNGIZq+vSLUngT42Sn414
zfXbWpYvwY/0IWE6nvS9e/F7CvhZ8KoIHbfH3Pf3T4N8QZG/GnFu3oNM0QyY
5z3hkkas4RM+MZoJ8ylbVGvEfSapsmnZhBU95ZMasOO2sguOuVCvAvtwPWb6
S09VzAf9uu3n6vAzRv/YfAHkMz3zsRbLpkxIlhdBvzYWJTSMb/+yuVsC9Z59
dYGKDU5yJquXwXkXCPxTg8fEhEdZK6C/Hd8Xq7Db/HaJ5krI71ncUI6TovXi
DWpAH8ft8wV4/nNojHUD1GPGrhiCfauT3kjTIS6nq3IeC4UUbZpsgnzbPDf7
oaMqvZGubXB/xBQ0JaMBjk+vVTpgfk0vmzPRlbc/+Jc7of5bsVr5KPyhYNiD
Htj//bukUiRnLtdzvBfmXxIdWoHw9v0buPrg/WDRf6oaGTDrGDD6ob+M6qEa
9KnHIiT8DehpckOQitzTLneaD0H+8sPSNMTj7sEt+pawaRjrxlqUrPdEd3QE
7oOCuk+1SGVLfGDqe8K3/hZF1qHWhbzWSx9Az6AjsvXIspnKoTgG89wgHFWP
5l8wtOc/wf6PNcbrkZ/zqF/ZZ+jvuPjGBiRydJ7u/gXy+whKNaACAVZ29a+w
/707fA3o2CSfJus3wiqSrz/Wo4EaqYdN03C/TihE1qMrT5XrA2cJL2rTttcj
FnutlQbzoO9/Q6l1KFzV7Aj/Avh/kr6qDm3jcvAa+AH3B7OEXi2ivHOjxv6E
+opT7tGQUfFjJutfcN4PKEX/08ci2+PLH5jfQqBSDeJRxNW5TPMk/1VO9mqU
vKLj9zUWwpSWS5QK1JYx7fablTDTI+qPYiTyc/fNtWsJiz1iX5mGClo1Srq4
CFveMeRNQprxp7+H8RBWy8t2jUFOmjevifBC/jcrE73Rys2+Be/5IN9i1rIe
ipyKnEnZCJwalHwXy9PSFS8JAo8fLg/C1LCKqzs2Qz2GKR3h+H8KsD/d
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{0, 1.2566370614359172`}, {-0.21572461019060252`, 
    5.81796245358035*^-6}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.622659784510152*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"dref", "\[LeftDoubleBracket]", "6", "\[RightDoubleBracket]"}],
        "-", " ", 
       RowBox[{
        RowBox[{
         SubscriptBox["\[Theta]", 
          RowBox[{"2", ",", "2"}]], "'"}], "[", "t", "]"}]}], ")"}], " ", "+", 
     RowBox[{"\[Lambda]", "  ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"ref", "\[LeftDoubleBracket]", "6", "\[RightDoubleBracket]"}],
         "-", " ", 
        RowBox[{
         SubscriptBox["\[Theta]", 
          RowBox[{"2", ",", "2"}]], "[", "t", "]"}]}], ")"}]}]}], "/.", 
    "Sola"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"t", ",", "ti", ",", "tf"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6226597984176807`*^9, 3.6226598059952183`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
djGp+sgOYmZ8uCJM/8WlZAY4gKHs86OfzbGXj2pFcoINn4kbJlbYOx9a/eIE
IoIT+VdssK9efsXCBQ43v3ubeQr7l63kB07g7fFurdse2zzioxcn+I/3HWXd
6d96RC9VcQCiftxI3AVbW2ehlh3MXRj3OHYeu9TtZzAbYOEcTwhyw85R4/zN
AlRrx2qfeWBXMA747gR2LmMzfd7/8qlEAhjADZYxpi0/7AjxbiZakF8xqiR1
BXsudezSlm6/46iNRRC2JJ3WjmXddcbRsNBQbPLF9s1pXeHSkWe54dhUJkPj
TXVe9CMrVFHYJzYuSq3XJb4c3i0b++88fIlfNJA4MbzP+i42J5u/JyPclTcU
V/AQ+3GndSkHVLUYqhhOxL7w/eoHbnh6c3CSJgXbQObvFh/MNx3cY/sU2+31
4qgQfPt7wOJG1r9+29ftp8C19IHAwhxsKY+lG8JQ+MjA07G8f/u9YfRMBB5a
7m+jf4k9uPwqTxR6pvYvKBZj7xdyjRWDiQf6eU6XYXd/+mUoDuGPt7qRFdhh
w8f7xOFs4tuzJdXYZ3im1SQgs8Hb2Ik67CzaBXcJqPy1r2RHA7aqWvllCXgq
vm9U+fW/+fK9zSTgdZ2+bQ6t2CPZaQviMHe2VzKmA7tEIs9RHPbd7TUt78L+
ojv/UAz+Ue/1n+79d39shVJEIfl9T+rOAexwVw8/EWgU09OkNozNtOUsJAw9
lHu+Oo1hH297lEyGCe+62e9MYIsnXOkVhHU3uzUqp7GDiuXZ+OFH+W6HmRns
rkARGm64c6TrFsscNjdN/VM2eFKma+Dsd2zP6NAUKhje/2bj3uI/09v8/FyX
G/xGpGYZW6/jwsMp3d/dnV7s69iiOdesGUGCbwcz3D6LTL2kPU0BtYIdyl8Y
sbcNND8TBTPN7Se5dmHX/3p+WgLs5Wt/fpET+7/C1nBZYNvQ1pPAg6292vVJ
DoRfbFut58eWoroTrwCec7aRvgkihz29WvNYEfTUtu7npWA/1L8SrwT2LOw/
f0sU56dY+YXsBdHCjbG/JLBnBHkPK4NPFnqFZ2WwR6rdl5WB4a3at/1y2JP1
rv4qIL1Sc3WfEvZsQsiACtj6+oq/RAXXl8ryZFYFp0gqusIaOE4bEsitCirN
ih3jtLE1efZtqADu6/I3qPSQiYGpyTIV4FuWn+OxD4+/HbcGVEDvJ6nOiQM4
Xlsr/0wZyPE/+3H0MLJeHT/j9F4QYyzKUXsUx/fnxH5XAnMh6aqyx3D9R88v
jyiC/UUk22QL7GDupf8UwNMPycGMJ7DDl0Yc5cBfLr70KyfxfJTri04y4JRR
QtOcHY7HD3ZzSALugntMLWdxfIfrh3ky8Jlkllc9j+Mc5awy/KCHLcY8yw3b
PG5BFj3v/G/8d90H22xHi+6o7lwOde1Pf2zD3IYD63UHxkKnHK9iG/X8yt0F
qfSuSuhd+3c+240kyfC09+rhlxH/3EmnJwqrMn3dSZHYhl8Sj0tC3x0eZRt3
sDtltjEowF6t+eGL93E9hg9XexWhnPv5jdGHuB9WufX+e2FM2qzQ4f+wg/zU
GVTgXN+ZfZUpePz2emsPVbifbtpFMg1bL1T9lRp8qmYX/SgD93f5t9CYOqS6
MFZA/wybWBft0YCnU070+uXifB0r8n+asKprYHmmAMd7NR2UtSDvtuO8FkXY
u4mkNC3ot7dHq7EUW+ydyjst2Hf2qL1SBV4Pd/Grz1pQPrE9PL0a16ObbXmt
BWPbD2azQuyTL654acHPG01toQ14vB8j9VdNeEDe4Nv313h8gOk3HU2Y4QhZ
7dqQp+TYfp/WgFTx2spvOnG+xKNhc3Vo11xprd2D+9PSYCSkBqt/qwbmvcXj
L1b/qFOBvDKlj/mH8Pj7VFLaytD/tGJD1ChyGqtZ2D0lqIB+nrpO4/xPKpeq
9sDbyzmyQzO43p/9Nwgp+EVc3OzAHHagz0qyGMyMIT8S/YHXr21K28gH+Sy5
xKY3cJxRwqqXFkj++qalR/UJ1dONXjjAAVQfNZs/oUHW0ysJ37UbmI9cDjvN
iG16U+KaOHC4avaohhlZIXReI1IaeAhIvRBgQ6YS9sh0kQOxp0fHRniQA8KZ
bJqVQNJW8U91AeSgV5ouZ5RBzpOYHYkk5NrIjveTKqBcz5m8SkF+Gfvor4Ya
eD2trWYlhixqWc/nqQ76w7lMyiSRfYkBIlQDvBf57swpi/w7yyL4nCZYaGoO
9JFHLkz4ECiuBbbOPrnfp4RsRhaWq9ECO7cHPFdURQ7LcCAktIFAjhlxTwPv
t8BM1FUbSB+SGvqhjcczHRIM1gbqX7Z9N9FD7tkpRntOGxyIGaV9sQ95YVqe
SlwbWMiWCDAfRJ7iXzxcrQWc3sQouR1GvudRQ5HQAl7uzoc6juL5Yu83XtAE
YSw6DtLHcH8+pt67qQHuFHJdjrLA8WIp3iB1kHLs++05a2SyXFPbUTWQ+7M5
8+BJZIfvDlFbKqDiwZPqbDvkNBvqB3HKoEU5oI/OCftD6o3te8GMvxRVkyuu
71QQeVQe/OSh5hFxw874SpMnA7ZVju4J98B+sfTjvQQgrcec1PPHVk1zXBYC
1qHfy2uuY1OtFL/vrnMht7wRuIUdlnDHlRr61j+ZuRqN7Vo+6MgG79EcY9eI
w/7GDQrJ8HGmlFRiPN7PySMht0RhwX5qvdVHOE6jVWgoCdtvlVwqe4z9NKVe
WR4OS8ZGcD7F+UsS/ykrwk9tzsk+WTjOLRlWogR/XdAp7svB8bFRSy5lSLuT
u00x/9/9yg2zVYHsBd8n773E9zFgNChIFZJNWn79KMbx6+P1wWpQ7scTZtNy
HLfv2zipDnXuBYi+qMTnvfRUnUsDGise02KuxfXvBdzN04C2fVLmbgQeT/t7
ebcmdPWhPt/RiPNdE6LOaEJ/zrFQ6RZsljyDEE0YUVaSENWOx3MeYfTUhA+s
Ygvm3mBf7MnU0oRPV52bDvbiel77Jt9rwMJEnbHsfjze69iVsxpwT/LUVMcQ
Xp/SaHynOsxNvT67MIrjVpny7OpQMk18nmsCj9/l8UtTDWY9bVvUnP53X4+m
7leFwlluq/Yz2LDni4IKTHvGshnxCTuSZYRaGSblWzJ0f8Oed95vqQh5Xv5m
Xl7A9bwF1orkYXxRMgff8r/7UaSZKAvvlk+Tzqxhu+jv/SoGI4hLKqv0c8i7
J/00meG2Rlat3YzY5GtUGet1Ia9L9PSZscOM6CMbdK+0/zkSw4GdaGlyjwX8
6kw5VsiNLbsW5MkDfLuB9QAf9v0DvYsk4N5/w0mIjL122aFLHHwdlHQ1FME+
xmRkJg1cRzounRfHTqhoKt4DZsfcfe5IYb8UDriiAM5MsF0pkUUOK788QqcE
pqZKQ4blcVwt9V7gXmD3wTpiUwl7Kj1yRBmMfVyLElbFFjVgE1IFJ+ZS7x7U
wOMVhBj2q4GBL3oP3bRxnG7OxlwdmH/7kBQHcLyhlkdHA/T8uJlWboDj21yD
dmiCoz+lssf2/8u/O1uuCdqXO/OoDmHzq7KqaQGjVY8iMWM83jDFMlsLvP7D
/uqwKY5/W40b0QIGG2U1HuY4LsA1S6UN4NaJhnhLHN86PvVDC2hv22ipPIHj
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
plaN6pW7gX0HbInUSHGZmLV6DJx5dXGVDZHdOWfB7QUe+5lzlBt9VCpa1zoF
/rnMmMSHfIJpnS77g794nEoSROqsOrvzgsAVSTf1hBFV5ZnKprPgJ9lupOe7
xy776FQoOD9OQ0AM5Sz+x0gXDhaS7LcXRwG3KGplI8G7XvrYSyBdRRVf22gw
/zt1GUlE1+XFExILfnOjs0sSDQSmt6TGg88VVZpLoQLmtnOvEnbmu/85QwqF
lP8THroB1lr3qZZC+rYy3Vsp4IhU/FQKMS0cvixwF+zpzREqhb4lJ8sR08FK
v005pFCJfP1XrwzwwCepJEkU1rmUcC0LPKQ58UUCmQSIaJY82jm/RDZyCcTB
5PTzYx6YzaGVRhxNPItPXSgEaxbNTomiCusaItsTcI1dXqkIivr9a1G1dKd/
DrOTMLK6yffIpRzs3PhxUhDxyllbh1eBraXTjgqg6jMVT97VgNUTpQx5URzD
hMvEW3D2p/ZvXMihlJ2G+h24442KHzuanw31tGgGz/+q+0uHapMes/i3gUdY
q7d2o0SZobqUDzvPx7jx9qauuB/i6+sG1z3myWrUXaULbF/r3XlezgUWT9Q2
lORc4B3cWe8d59Jq7S2LHjH0FdxZ8ChuF/aY2d17dAQ8k1RrRo1lE9ViYsbB
PZOjGXR4Q+qUYuEkePotZSMTbmu/P9I6tfO8n7pOx4rTTnfcmJkBn8mI4GDH
nrRb2ozzO/cd4MrOiRWfyP1SWNo5nynXPC5MZn70nsMqOMh4zzA3/jh9y/j8
2s59lnpO8uDM6w0r9zZ29pNz7+Y+7CO5mvtmG2xxfo2SF6u3idkNk/8mOdTt
lzUvpvJxISOnAtd/ETXkxT17EkqF94CLLrH83Idzit+4GdOBlzl4bPbhANO5
vT6MYPI7bbE8WHfqwKtEFnDXRYoobkx3zdb7GTt4cW8d4sKD4lfYu7h2+jvI
NXDgopaq98v7wInXVDjZ8bmTk4GcB8A2P6S1WXFYyl3eCEHwdF0lCzOOqCE2
T4iAtSc/xNLjWLpc3gppMNcRvkoKHK9i18wlvzOvNeufjdrEw7uCIpV2zCxX
vFB7p+xIs4UmuE5SurBDN32AIahSB9xJfWZ6WjeTvJaXRw8ckG/X+0c314E3
6IcxeKhsfIgSFVxq57UyB7MN3tzegx4XhDVXWYHTh7un6FHpJ4mgfXbgiZnP
95hQxd9+3uiD4A2nj4dY0AuB+OafzuD4D86lrKjGTC3I2g28VZj/ig3VBk/y
vjiyk68/FMCO3mXebeY9DhZcPbnJjhoaiUFXvHbmSY/j5kAtc0u806fA1aZD
pHgHZ26zjR+4afbcbXbUSbALehkAvp8S38mGek7t4tsfAg5bs69mRf23yppj
zu/M7yxzkAUNvT4S9CsM/LMxu5QJDU8w8NlFgOWvdAbSozH62ubqy+CTV44u
0KBJVb+gA7FgQvzaHko0F9/ePJMA5j/P+nFBd7E8LMj+Jjg7kty5V3d1UIKv
5haY7JLfylDtpnR80NV7YOWA/Wy7MJmjGt9c5s598PWT0WDKyMlmh+yd5+P8
yF8GTPcfkU+wECztOODMgZnWl5rjH4Ojb1UXcGM2odyg30/BPpeY/+PFXBZ2
fI7lO+fXeO3jAbzv7K6WN1U75y/tbCGA92eVBQlVg38w/kkRxILNR/iuvwZX
JTNVCWHReYaW+dqdeRQOPRPGkty1QU71YAmZrUgRLKvvx1fbCG5+cJZfFCue
5m0RbgXzyluniGLVO+1BCR3gnsjldlGs8TaMb/HTzn28CuwUxdqTEi3O3WD3
UxSZopjAOBCEe8ENY1+lRTFRPZ5PdBBsqcFEWs/kqFpL4lcwjn5ySxhbXJ8M
WhrZ2V+fY7AQtqm8y+c6Ae6YeMEniB2GiC11P8ARpa9S+LHz7uUgsV/g8JUT
D/iwm2wu3425necvN7mCG3s42bUsL4C9Th33ZsfexWV89X93znuxO40aDypJ
vpz7t/P6ETha9K/WojbXZt/2zn0nxPF8rb13ql2vhnwe3m9Hn7zfhSIiakNY
94Cdx4hnDqBqg4vviveCD0cvxguiBRp1BgIduKDpjrUI8rxdXujLCJ4t9SiQ
RA+czyyTM4Ml3P5KyaBePim9eyzgFWSUIoeYxn8kybHNw38fEP/mpzwyLcob
bGQHU9a1LymgaL+jYm6c4MiE+B+K6I3i/pBFLqgPpep+p4RW/gzWxfOAuRZK
opSR7Ns0+gO84PM+loIq6GS0g+tzPqgXtBDNV0GPjJkLzQ+AhSqfUauiQbqP
S6P8kL9XPM1EFbF1XSeECkLc9VqzlyqyTDNOYhDemXft2FFVFOdGOZgnAqb7
mKCmiuoE3olqiZFMmPh+fUoFrU1eCv5PHOIUkhfPqyDFEs06b8l5+P1CpNuo
MvIN/EO3JQWeOJEmpozyVatc7shAfTjVMzMl9O1fQIGkHHiwm91cEXG9k1mq
kwd7nNkWV0C2cdPISRH6pyQ6fJBDDUyeA1dUYF5+K6f9kmjzM78ojxq4Vtp1
UxSpZnwNKlOH/Pa/xhVCqFjEie6rFlj/oqAONxqbZnUJ1gFr/rvWxIx4yzrz
9yBwFOZ0p0Q3NM2Qqj5Y/Lzd6ZXaEGudoJsmYB/d726C+Cnbeq2IGaynap0s
KIonB17QvjGH+AU2pX4J7OIpn//TCuY3ueHnI49vScwuRNjA/p+nE2gUccdc
sS67HcTtOqJvKuHdVV4JT+yh3lvSbE0Z614Q6tc7CPl46LCJKg7VHRHud4T8
DwUCZ9VwOcWDwDPOkO+u2xCmjqdbXGopXcFvQ5rMNbDwDQ7ajENQn6zAw6CJ
3e27nRTcof70l9LnmjiVKzmv+fCOL+aqa+HOrxYL7h5Q77oke10L78ndo7t8
FOKr09WPtfA36d3XSo5D/MVcfZYWrnhB1uN5AvoTKD+d1MJxhI39fN5wHvo2
EmRa2LXtz6nPJ0nOTlmX9NbEsg5LVUk+kD+gF5atgSm+zW0b+kLc7zLrE3Xc
7z1ttuVHMn9dK0pQwyUL3+++8Id47p1efVUcdXF05EwgySPamdz/KWOH3V+l
xIJJ9ojwJ9dUwptcPe/Szu28fthGzOVwV84nOptQmL9JQ/2kFC6QbneiCYP1
fRbJD4phK0L9bOglyK8+eCCMDwu2vVVXiAR7MxensOFV+1dXpqLAM1GWLNT4
oXcZt2sM7H/pkKfXum7IwhNPljiI72Ers2NEJhcLn7Vdhf63g+SfcqH5G1mG
Wgkky0+RRbGJoAau+8lLiTDvxjc9XQmUnnP3y5MbkB+8tGUog3ylU0Q9k0k+
SfaQM1Ee6b1IDOS9RTKTP5OanBLiIMS/6blNcoWnzDCtMppuvUKddJdkz91X
ZGZVUK19pJ1hGsl0I4eyj6mhW1/DHmymkxye5k3Zq468vM/9fH6fZBNHouhD
DaS5EKh0JpPkUPHQNwGaiOGiX4RoFpy/0+n9R7XQOOWp1m8PIV/XM49HG1Xf
8GRLe0RyUdmGkZU2SuTyOGKdS7IN37flcG3kkXPoMXU+1NPsVyvWRsrSTiu4
AM5HgLk6UxvRvLAjhBaRnMyuwOSqjYaQVYL8Y9jfNX3HeS1U1mra+/MJnMc2
8yMnLRRrbyjw6CncX/e9onuayPUrwdflGdx/j51MhQaS9dZ+yVwONs20yVVH
5Atq5G0VkD8S4HZGDfWGKVlGV4HJcrY4VNFjSrl0zRfQf/2RRLYyirghOb74
Ep6vGcFgBiUkliNw4fhriNPmGCjLoQ0pvoZ9b+G+pWSsSd8vOp9zMfbUwn42
JWXuiKHQVsZ8Yj34gJDgwn5kYU87v/EePJyYc5cD8X+l0nreuPN+nbiqQ4da
5zc7RVp33q+FWAQma3m4ZjaoOsETVExdAtjY5a7ey//ABwVoCkRwyH3dOO/u
ndcj+nBYAj/68qON8/PO652fdV4af+RNYWzpBYt8ZxGVx//cNR1C+2F+P7+M
FwpY/OF4uvgg7N+WkVFcCTuMJH7t/wLevqoWpowvC6gKXvsKvidb81gFlx4b
9tIYhn57/ORbVPFgbvyTqRHo94VavFINU39XmL83BnE5XvI4daws+kXZbAL2
a378qLQGPuodc2H9O/SL88x8oYFvFMnUPv4B9T9OX2bVxK+neskPTc3v/PuV
kqUm/ikZZUz7C+KZNOGOmpjdVyLx9QzEA0N6tDWx/tOuztNzsF6m0taaBvaf
u8jOOw/e+E8oVQNnyom4dixA/sDSGxoN3BrwMSt8Cfw6R9xJHa+Wnx+XXoF5
hPZcjVDDgkv84l9XIb7hGX1FFVsrt/km/QUT5+qOq+Dws8HlOuswz9ygjrAy
LnrBuzr7DzzeI9usiMk1/COttiH/OWVakByWC+Nq2CJbIM1zaeUIhzR2e/2O
5hk5uPXi7URx/EKH7RYjFXhCNH2PAB6PeNuLqcGGf1o1eTBTnde+gD1grzNi
mizYR/9VXicdeESYcfdwLZ/x4ZcprOCs2Ksl+5FZPPWGHjuYmdXGWgiday0j
LHKAt+Vb5MVQpzlFmx0P+EWGfrIs2kwsYaDgXYB/n6O5vUsBSX48aF/JB/HO
4PJcReTEuJ12/AD4Bnm7pDKKsSkaYhWA/M8LT++qoPIUW4EGQYjv+SAzqoq+
da2fCBEG/84QpVVHtGx5j4VFwT983jFrIPWDlr97xKDe8PvykgY6kbqqFCsB
HqCQf6aJbvU9DFWRAgdtPzPQQrVcpm+/S0P93/6JUi30y2VxV6osWOPCHOn9
gCsjw8hIHvJHskZotBFxiJiwqgDOaYhd0UKBfHOfCpTApfGm1Voo63Aam5MK
WHT/irUWan9IcKFWg36cHYS3mujvyNSDl+rg40rpuzSRiODtMW9NyP8rrMun
geyOa4txaYMzThVRqiPVz2bHn+iAVVnpsSriMXZ5qIvAkjRp1ipoXPIc5wl9
6CegEKSniFoyY+z/GoDDH9TIKKAShts3EwzBtyz0xmVRyOIz6goT8DGKRF1x
5OxZa2BotpP//sJ5YaTT2xHZbw5mKT6fxo+oaqb+bFmBS4/EvWdCaZeFfpof
BMv+dyGeCYcvKQgPO4J1g7VmubDHCYJHkDOYkHn4Lj8WN3XvTz8EtuLkLxDH
dK9Ps0m7g1V/GEVL4wXpMBt8GPxfRhCfPK5hSmv5fhT258sle0cJZ0XnU144
Dn54qk9SBUcvVxLoTkD+q918harYy6s+/KHXzn1+caFUx+b9ndWKJ8H//Y0k
aGB5s+HlxlM75/2UxU0Ts72ZlXc5DXGar9V2WvivzIbvjC/EY675CWnjoYd7
iyPPgHui6D9p4zpm7u8sAZDv9+a9rQ7OvyImUBAI8cg6xcc6+PqKirtGMMQ7
S2cHdPAZb+K9jhAwy/KFYR1sN2D3+cg5cJkKVY0OVjU/yrx0Hmzf/OeUDuZ5
628ZdwH6TXG5/dbG27IR17gvQtya6GCmjSeyExtLwsGtn15c1MItLBm7CBGQ
P69FjNHEJTHFOt2R4Pvvtzw1cPLqywtelyH/oL79AXUccrLp+Vo0WC21ukoV
uwz2LCTGgK/T9YmqYMHahVOVV8FPhgaKFTCVPFmB0bWd86KnuSyHpx8xjA1c
B99tOHZJClfGSrmS3QAnxYT/EsREyxNmlnfAdYhnu7FWHAfHjdwFE/1Efu9C
9ArR9cFpYIdx6g4W1Mv2UPP+ffBX8WdUQsh7qF/yRzZ431hamyKaZBE9kZkD
bqJ9xamCvEyDH9rmwXwtidfM1dD3yLoBqgJwftJnFw3k+YKe7U3hzvP0W8iQ
9HlhxtUqsBjiV54x7tJBx4SK4kWfQJyBTylTF426rNR/KVmA/76J8f4uAvJI
1t9MLoX8q+e70glouOmmmlEZ5KuQxe3XQ4c3hwL/lZNMcDnBHKeHvilJlpRV
QlwzTe8/PeTuc37yxHPoF3bvw5YeGspu4N/3EvJx9TaDPnLrYz7UWQ1eOHOB
TB99oT9yN7Zm57znd/XoIVdiySfNN1Bfb9SdpIcGwtb2zL+F/IaPx8T1kHO5
ETEf7zxvX3nzCaj/x+0I13cQJ2pH7yYgp/2j1YzvoR/9g113dFGvg+xSQwOY
ec5nUhs5JlyUCWuC+gM2Ryi10Od3Ld5yLWAxN74VdeTwlz1nohVcbJhcpYq6
ZY8P3WsHH+X6ZqaM7E6UcVh/2Hm/8WDApO8/XWYJrzoh3kL59KY4siqJDLnR
B47Kio74qPthrKPUYGDHriF9VNiCm2fq7yCYiunxP05sHlflfvwbWN396AVx
3PZmVzrXCFjuZ90tWWy2ZNX1YRTsqayrr4hNPKaM1L/vvF8xtk2q4eZU1cuz
kzDPm8eX4zSx0Ycrr3N+7syb0LeljZso/ltxmgb/dFizQNhQc788/QzkL/70
qyLghoDTPvWzYLIi42I9TCyszjv/G/Knx9Mv6+P3X3cPSy/AfThPN2gZYH02
e+6xRfC11bk+A/zOLNs+bXnn9bg/y5aICZdnkyxWof6zhPcTIq57qdmy6y/Y
1mvfKBGjuavkL9fAfXGNS0RcK/xZ2/cf1KcpPxojYt1DgucFNsGXzrg9JeK3
Kf7lvVs79z/Vak/E2i1vfiWQLcL9U0b2GuDXW3tE9chJJnzuyVIxwJoqTh6r
FBBXLikI1Mc1p/PuP9lNchTHuawEPayRs9DjQb0If693/W4s6aHs12Xk2AP5
G4RXWBerMyaatu8FJ0VsqGhj1XDRWhUG8Mv/zONVsd94/+8PjOCo+a9ZSjjP
LEHAixn6V3P33ZHHzNzzMalsEC/Pi7cVxjPPX5n/4QFXW13MpkeCfL6XbvKC
eZKNBfmQS8z+Z2L7wbu/BbwVQU12V1icBaAfRZXCqgLafKVCnBcEj4ao+agg
ZYGfZ+OFwY70223q6NFvi4FqMbAunb0yQv2O23ttJcDal/R49BBDbbn2lCSc
T+yISYw+MhTxPHNZGuKlZpf7DFB4Ikc2tyych7X0ErMhqlhq+a9cDuY58oFC
3ghNuV6kMFMAH3S6Km+M+OtlVMYUd+Lbz1hMkKPEiFeYMtSL1uZ2m6Ck5Fvp
LKrgnj2Lgaao4Q+x7bEa5Ivxus2aovXDf/7pa8A84aVURDOk0FQs80UT8mWG
jM6aoZMybkeCtWG+Pg3LKDOUdYchhVYX/PaX9Qkz9PlfXX0ugvyg5VIhM0R3
PHhZSw/6F1LH15gigzYR0R596C82ZiZtisIU+p18iZDPsfHyvAkqS79+jdII
rDf6PtMY/djWfp1pDJZKe/TQCO33/j2jbAr1/MYcEYbI4eOj/R/MIC7YM6RB
RAkqDjYnLCC+tc3dr4/qM6miNy0h/jIj56AeWqN4VXnXGubRHmDzQ0j+9Onv
MrYwP3e3Lpk28uri42yyg/itc22H1dEDjU6Tww5QTxPgdlcZ9WRHh60ehHjw
obwSebSXRqXkhhM43fAHQQLp+f/4KuoCrrULJhdAob33GLEryfzMr6Im9dEz
HQs9JzeIt9xeeDSmO5m3FfTbHfz8gekNJsxLV5539Qi4At/+zY/tg4/3HjgK
80nW3r8lga8PstNUH4N5Vgg+jAq4Tq9Fw8Zz5/mz1yaqYFkmmQdR3rD/hxQM
R3Sw5/nhj1ynSM6ueiqVScAZ31LIyn2g/57cs8H6uMuQqGjqC/VrTQKKREzz
dPX4qB/0j6Me/2yIEVvx3Qv+UP+dNeOQMT538VAzcyDEN8XWsAkuGaNfKw6C
9VhOqJGb4XHTOkn9ENhv0qdhPnMcdJLfsessmKqkjNECk1+NunzsPORbLa32
WuCU/JGSxVDoV800EmaJ+RsI/dFhJHtoGc0sWuKysWwK1nCSR/ZZXNC1wmjX
LrncS9CP+0yxpxX+eOCoq1IkuH000NUKH9Z9F/s+CvYj2mQiYoVn3QTK7aMh
bjHx/L0lDr94eWj8Chgl3lGxxHT3R6lDYmF/CtmB4RY4o1pPifIqrI9aZO6Z
Y8m+R4fvxEO+YepWghmuWdl1Xfg6mP/SvKMpNmU79rwqAc5TvuTPujHuV6wf
ISaBLX76hBlhb1tBus83oN+/Yeo+Il71j1Y7kQz7oRhx5jDA7E/1b8TehvN4
OUHlrYvz2nNesd+F83CmSVTSxMrT5N/zU2E/7+3EB1Swndh7raZ70D+sjeuh
BB41FPJ2zAD/G1Y9zo8DPK/cmszceX89FaNMi28+MpiiygZ/+SJ4hQt17GtI
NS6A9dp1T0looEOawvV9hbAe4yGmKh007Rwz610M8xnpH6XXQ2HnJ7j+Poa4
Cie5tAHak0okxpfA/mVWH8oZovSqPH+uUrA6sxenMRLvpswoegbrqX+qGDZB
Lxc8m9TLYT05Fe84M2TE1LjQUgH9HRpp9ligXlkRPpcqyI9xlDhhiU5YxppM
PYd46kZduhVaPv09+MJLcM7u7UfWKOa64cM9r0i2SZAtRDaItTi/7V4NxC8l
vk2zQTnNu1cl3pDMVLHLuN8GKU6eEKh5C/Pr4JO7bNE7yiYLMwz37Zj4msUW
2QiJhg7WgeXoymlt0YheXK5PPfRnSHg3Y4P8PSY/rr8nOaCsb/W5DdqKMFq/
3gjrvbhe5m2DbjwoENnXTHL/EaW5XTaI7w2V7ZMWOI+ywi+01qhk0Ctcqw28
Xk/70xJprzUVtreTPJ9nJnDPArVzinUf+gD7t7NrEzJHrqpXt359hPUbfR/H
maILwcYH6brg/AZ8XCcNEc2twqjMbpg3UndrwgCll1GXSH+GfOu9nW166MVs
M7llP/TriBN7oIlGOr2ktwdg/XFahTgVtLdqt2P5FzgPda8uR3l0JMygmH0Y
8m9K68twouvuY13NIzs/D5OIb7/qVhEub1wY2/n5W+xrzIppqLH1t+8774dn
AvtkseK0+4XkHzv3Q3n6vjJ2+7CRoz8F856IvJ6rgePKMjqWp2HerkM3z+ri
8tuaqwUzYN0/elf08NC5gQMuc/D6OJfz57EBpnINNaWdh+eddk3ziSGW1+EM
frsA8Qfld24aY1f+F5n+SySrs911NzDFMRQHmwRWSHY2o77x0QyXTi797l6F
8yh2zpOywP2tt7jj/pL818Vqn70lpniqYKC+Dvuhk6+ytMKyyZ2+0/9Ilt9j
p8RsjZ2D/VMzN2G+EJ2sTGsc7chQZ7VNcvVJk+K/1rhE4+kU2a4lRHr7Vgul
s8G9vBasleQkcz2tlCO3wWRkv7RPUJIsf4VK6o01lhy/5sVJRTIvgZeobY0d
msSTW6mhvkq69boVjihufnVxD8nK946/LrDERYle4zK0JCfuPcdw2wJ3+e+m
H6EjOeBoQJuNOd60y1O9xUCyNqZVHjfF4qoGHkQmki1k3qdbmGA77rFrq8wk
T1hZNN00wgXDB766spOs+Ln9fbk+7qyvpaLnJNkqT3wklYDX893lMRfJizSj
Am3a2Mo344oQL8nsJe+mbivhUGvNp5/5SG4YNumMlcE5igO9Vw+QTNjtOu4q
jP/85ZCcESSZbFRVK2G0Njv2VmeVBLiX+JhfEbWdVFj3klqC/9/HM9MrqmjZ
vFOIW2YJPt8V8WJNtF/O37JdluTsZ28/vddFpiwM5y/Jg2n/NBvqoZCVkmw5
RZJDm/z89xqgrH7ztlElkk3ap5sfE1HL6+ml2yokx78aDRIxQotZ1/iM1KC/
wmmzC8aIN1rc+K86yc6nawvyTJDRieaAx5pgdc/CfFMUYOJ1300b5qvd6xxm
hjKkdjcw6ML9RV6pFDBHTQx5s3WI5JMXT9c9MEfzC/qcwXokj3yeDp4yRzyf
RwkiBnAe7o8uk97PiNVRPn1EuC9Nx7J/5ki0IybB1wjiSTF9jeaIZiS+ZJcJ
yWVNfPE+5mh6KfFDqinM+024Y8oMtVOnzEmZk9z58mkz6fNXyb67jO8soN8J
xrZwU3RD7p68oxX0Q4b8d0xQgMED21/WJM+rnf9x3RjZOT0KirKF+YUCpDyN
kPLp/Nvs9rAeseingCFijyyueuxAMlPIpZYGA9RfUL7a4wT9z4qlNhNQTc1z
Th8XkvnrK24c1EWZH1+pb7vCemeu0m9poiOr78IkDsP92FrrbSshwt6mjNoj
ML+2A4FcAQnub3tjf3QJPk+8+fZAAk0adm1d8oTn4Zfa4iY7anHpPcDqBa57
7npyU7fYb5BQ5A2WHTG/9K/W9+5YdJcP9HO/wnZTAFsVT+Z6+0JcY+reJXEs
/3a6YcMP4l1HyaXlMMt/c99T/GG9rpbQFkW8NLFIJRa4c/+eZj0quOfvqtib
IIgrIreX6vgF3T8T25AdP/ztroXT+bdPTZ4F87R+mNbBYcoUCRfPw3r9L0X5
CNjNhLqE6QLEDaknZPWwjhvth/ww6P/pdqWQPt4fwDinGQ7ns3FbeFsfk8Ww
MnZegudDLOV7jQEeS+OUPxEJ9cbFKoeIuOHJPtv1KMinLDz9hYgL8IGgm9EQ
D3oQrWOIr3YL3RaOAc+dz44yxCd/iFW9ioV+J64X5Blis39Sn62uwnxOfzUe
G2JpRvnV8XiIr2WeTjHEDELKnBeuL8G/lxgwHTLE86rq6gyJcJ8D0UHUhvg/
M22X3CSo75AhTyfiisOEMPWbsF7myhgdEd8JImZ8SIZ+lCW0Jw3wuTiTN8du
QfxSw0KxPna+b/H1z22Iz7Fd6tHDmqU2W4l34Xl4eLz1JwHvq3c4IJgG+1u7
w/UfwhufnQkv0+G8VHzFnujgb1NuRy3ug4m0HMe0cA7zidxzD3bOV6UuVBXH
iJxqoH0ILmzgH1HCJzT8vmdnQ7/L5PzKClj86Fmx9lyY38UxM1IMPyuLfXLg
MVh+c+bhWC0xJnV6/AlYlL2liQL1OxVKFD0Fd4vepeBAZNsthfLl4OL5jcei
6E7XwORyBazX0/pcWhpJFEyLvKoCN+pZVMgjO0u6PL1q8DM/06sqaJKfb3x3
DbjWsLZIDYUtywi2vYb9rAR8ytNADC26R2+8BW9qpPhpodwM62w7DPNbCchR
6CB1f49hjncQ1+hjcNdFHfqB+7/UQz/T7BdXEPLgiHZ/2LBzXz+SlAloeepW
5vEmmLdh1e8mAcW/zf0i1gL5yx/luwiIN6WKZ6YV7qOc/dgCAZV5NrqUtUO9
ZUvtOulNQr03PeQDrN/2UG6CgAZpf/Spf4L7UrHJqCSgM8N/ODY7YR4trkpv
AiKvpHF81wX9EgL+7iKg1Djuu7E9EKe0l6ZDSNJVsse0F/oZKQh910G1Mlqs
DP1gGfaSW9rIbpeFXdcAzIs02bm00I8et5TUL1Cfs33+vAYKL/LrdP0K8wvY
Gb5QQ0zhEYwHhsFuwir9KkhdKDupcAzq7Y52dyqgjtWyjtMT4L7210fkkEfb
O1r5SfBYTjO5FLoWOH6temrH81Oygmi/4XJL+C+w75mRgH2ogms3jd4sOIje
MpwFDWLRuNZ5MOGV2oUO3TO31RqTFsHVDs7uW7Xk3iaUdstgSlPTF4w4VdPF
gGMVrK4i9x8nlmLwiR78AyZ94g05gOtGw95lrYEl8REHIezwPIHs+D/w5sh2
lSj+GZ+JxDbBPWLDwxI43O1pxK8tcJpFUrM0ZpKvffuMbBnq/dOOyeE8ik8b
weRgcvmLX+Sxet+wljolyVEOmrqjCvjD4/mwjd3ggYzWWkV8LGJXTR012Euz
P0QJr9qyrMXsASsee0amjK+LCKmb0kK/at6O48p4/5rSeXp6iNe9mcpSxhUd
xBf/MYD3u86VK2Pj7IMrd5kgP33mEik+FOyl7MoC7jd96aGMA4zPB+9nAxOj
a0j9KffFV4yxg6nHGy8q4fS59IUCTvDk1pceRSxdXyx/mht8crSOXhG/u1vj
L7cP1lu8KiWmgP8HW3jiwA==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{0, 1.2566370614359172`}, {-9.430612330238006, 
    0.0011760672115406212`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.622659808135261*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
     "\[DoubleStruckT]2", " ", "\[LeftDoubleBracket]", "2", 
      "\[RightDoubleBracket]"}], "/.", "SDATA"}], "/.", "Sola"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"t", ",", "ti", ",", "tf"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.622658650479773*^9, 3.6226586829366007`*^9}, {
  3.622658870109763*^9, 3.622658870207715*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
aLbcDFUL3Z0+97sRMnyunj6SbYbkdk7c3by2CQrN662vP/g/n7uVyjc1AXXB
e+BQgBnqy82q8JJrAhODU4brnc0QdYTHXUCzCXIWtdIe6f9/XvWP3S2bYLk5
hhb9yxRZXVchczs1wbz9rYhtraYosyi89c2xJuDwEXw9+fL/erDiWbnWBD+n
92rbOP5fPw2XnxY3gVaMLWU00QSpK6iJmVU3gUXdpiSLkyborlNkweTXJiiT
8ku6TTVBJuV7pvRnmiCca177b7MxW89Nbj0KzXAny2OX+k8jxF+j/veaTjMs
qXjK/SgzQj5L9+K2GzXDTvHEfNObRkjB06YlwKUZLL4ya/oEjNj70mIk+qAZ
jk2cOMBQRqhs8oSgMkcLyC8WxeRVGqAJrie0f1wtMGoUxffYwQCJydbmtPK1
wMiv8Kjzo/rogsN2y0sSLZDbubBov0EfqX8cv1FDaQEfT49bB7x1UXKU989j
p1qg41fXxnEPCsry0XhW7dcCgh2SUUx+CiraNW+lGNgC3IkVlJ0fyahpdXD6
yO0WSG39aiIkRUbLF+/be6S0wCYXfcEfEzqIx8FxpeJFC5w1vNxR+0wHiWhL
vNr6ugUuzNp4/HLSQeqT6f8NvW8BMZdtcaZN2sjNvTjv8NcWSJfY825/tRby
3hHk+rm7BY7FHAu5ckcL+W82XidLa4EB6ubirl1a6N63enfaJLs+HQH3LW2a
6OPO7xsPcbVCYqfgm3s0DSStxeXrotsKm0kG3Eklqkh5Q714GbRC0UEX8RlX
VURhRlVJmLdC6NZdr7v+U0XWz8Wleu1aQTVThlNvrwoKFldrcPJpBd5Ho/23
l7ejgVX7lPcnt4I5nT+E+54Setr2jLF3TRvs5g6L8pdh+/NIqUv317dB5d/F
T8N9cijQ4sn6VoE2SFLm/e74RA45lkVr2kq3AU/jN251QTnE/+JqoDXRBlSP
lhae1bLo5iXXDZZebcDK0BVtKpVC3jLiFNPGNsgeD7Z37d6EKL7RtyiPvoK7
BUX8JqZBSbrJUXGLdihbNN1wKEoBnyPZNPjsaYc+M6cHvkMKWLnyIBnbt8Pu
wlvnqYQijh86u/a4ezt4KFMuL/Yr4ktyKa8KLrVDhsvtr+u2bcPUlKUfNtnt
oGfdsLD0WhkXJRTevC3QAX8WvKemr2lgX5XPU92iHeC/zsLvc4MGVixtcFST
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
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{0, 1.2566370614359172`}, {-28.423133572842172`, 
    64.41217129622105}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.622658671555101*^9, 3.6226587363055964`*^9, 
  3.622658918942494*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
     "\[DoubleStruckT]", "\[LeftDoubleBracket]", "2", 
      "\[RightDoubleBracket]"}], "/.", "SDATA"}], "/.", "Sola"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"t", ",", "ti", ",", "tf"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.6226587888651247`*^9, {3.622658864696515*^9, 3.622658864816375*^9}, 
   3.622659863202568*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{0, 1.2566370614359172`}, {-32.01523113846278, 
    57.99969808331656}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.6226587900003853`*^9, 3.622658866099256*^9, 
  3.622659864461706*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Dot", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[DoubleStruckT]2", " ", "-", " ", "\[DoubleStruckT]"}], 
         "}"}], ",", 
        RowBox[{"(", 
         RowBox[{"\[DoubleStruckT]2", " ", "-", " ", "\[DoubleStruckT]"}], 
         ")"}]}], "]"}], "/.", "SDATA"}], "/.", "Sola"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"t", ",", "ti", ",", "tf"}], "}"}]}], "]"}], "*)"}]], "Input",
 CellChangeTimes->{{3.622659203549922*^9, 3.622659234541645*^9}, {
  3.622659749844371*^9, 3.622659752087112*^9}}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.6226597343255377`*^9}]
}, Open  ]]
},
WindowSize->{1366, 709},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"10.0 for Linux x86 (64-bit) (June 27, 2014)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 51, 1, 32, "Input"],
Cell[612, 23, 2881, 83, 297, "Input"],
Cell[3496, 108, 408, 7, 32, "Input"],
Cell[3907, 117, 364, 8, 32, "Input"],
Cell[4274, 127, 1220, 32, 99, "Input"],
Cell[5497, 161, 2062, 53, 100, "Input"],
Cell[7562, 216, 3300, 85, 145, "Input"],
Cell[10865, 303, 1134, 33, 121, "Input"],
Cell[12002, 338, 1972, 56, 165, "Input"],
Cell[13977, 396, 1609, 53, 101, "Input"],
Cell[15589, 451, 5072, 155, 259, "Input"],
Cell[20664, 608, 1783, 47, 41, "Input"],
Cell[22450, 657, 1910, 52, 133, "Input"],
Cell[24363, 711, 1181, 32, 80, "Input"],
Cell[25547, 745, 3891, 102, 179, "Input"],
Cell[29441, 849, 416, 11, 37, "Input"],
Cell[29860, 862, 1740, 49, 89, "Input"],
Cell[31603, 913, 1813, 51, 86, "Input"],
Cell[CellGroupData[{
Cell[33441, 968, 212, 5, 32, "Input"],
Cell[33656, 975, 1904, 45, 135, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[35597, 1025, 212, 5, 32, "Input"],
Cell[35812, 1032, 2034, 42, 134, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[37883, 1079, 206, 5, 32, "Input"],
Cell[38092, 1086, 2932, 73, 138, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[41061, 1164, 277, 6, 32, "Input"],
Cell[41341, 1172, 2135, 51, 132, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[43513, 1228, 194, 5, 32, "Input"],
Cell[43710, 1235, 1622, 33, 60, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[45369, 1273, 210, 5, 32, "Input"],
Cell[45582, 1280, 1564, 39, 101, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[47183, 1324, 205, 5, 32, "Input"],
Cell[47391, 1331, 2292, 59, 98, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[49720, 1395, 191, 4, 32, "Input"],
Cell[49914, 1401, 1164, 26, 60, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[51115, 1432, 164, 3, 32, "Input"],
Cell[51282, 1437, 1254, 29, 35, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[52573, 1471, 740, 18, 32, "Input"],
Cell[53316, 1491, 4450, 118, 149, "Output"]
}, Open  ]],
Cell[57781, 1612, 91, 1, 32, "Input"],
Cell[CellGroupData[{
Cell[57897, 1617, 665, 17, 32, "Input"],
Cell[58565, 1636, 2832, 73, 74, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[61434, 1714, 1502, 35, 32, "Input"],
Cell[62939, 1751, 3071, 73, 72, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[66047, 1829, 583, 15, 32, "Input"],
Cell[66633, 1846, 2216, 53, 69, "Output"]
}, Open  ]],
Cell[68864, 1902, 3493, 97, 321, "Input"],
Cell[72360, 2001, 161, 3, 32, "Input"],
Cell[72524, 2006, 3389, 94, 298, "Input"],
Cell[75916, 2102, 3149, 79, 253, "Input"],
Cell[79068, 2183, 3065, 78, 253, "Input"],
Cell[82136, 2263, 2541, 62, 190, "Input"],
Cell[84680, 2327, 2535, 76, 121, "Input"],
Cell[87218, 2405, 4019, 108, 155, "Input"],
Cell[91240, 2515, 1045, 27, 77, "Input"],
Cell[CellGroupData[{
Cell[92310, 2546, 194, 4, 32, "Input"],
Cell[92507, 2552, 3387, 97, 212, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[95931, 2654, 190, 4, 32, "Input"],
Cell[96124, 2660, 2374, 49, 206, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[98535, 2714, 232, 5, 32, "Input"],
Cell[98770, 2721, 2816, 75, 206, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[101623, 2801, 234, 5, 32, "Input"],
Cell[101860, 2808, 2940, 77, 206, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[104837, 2890, 990, 24, 36, "Input"],
Cell[105830, 2916, 3730, 101, 178, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[109597, 3022, 853, 22, 38, "Input"],
Cell[110453, 3046, 5048, 140, 174, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[115538, 3191, 537, 14, 37, "Input"],
Cell[116078, 3207, 4907, 138, 186, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[121022, 3350, 190, 4, 32, "Input"],
Cell[121215, 3356, 3431, 95, 59, "Output"]
}, Open  ]],
Cell[124661, 3454, 2550, 63, 77, "Input"],
Cell[CellGroupData[{
Cell[127236, 3521, 165, 3, 32, "Input"],
Cell[127404, 3526, 3974, 115, 74, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[131415, 3646, 157, 2, 32, "Input"],
Cell[131575, 3650, 2639, 75, 73, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[134251, 3730, 155, 2, 32, "Input"],
Cell[134409, 3734, 2987, 83, 72, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[137433, 3822, 732, 20, 32, "Input"],
Cell[138168, 3844, 1778, 41, 54, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[139983, 3890, 163, 4, 32, "Input"],
Cell[140149, 3896, 3873, 100, 106, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[144059, 4001, 198, 5, 32, "Input"],
Cell[144260, 4008, 1685, 35, 60, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[145982, 4048, 222, 5, 32, "Input"],
Cell[146207, 4055, 1622, 34, 60, "Output"]
}, Open  ]],
Cell[147844, 4092, 147, 3, 32, "Input"],
Cell[147994, 4097, 93, 2, 32, "Input"],
Cell[148090, 4101, 2844, 84, 279, "Input"],
Cell[150937, 4187, 2650, 74, 276, "Input"],
Cell[153590, 4263, 2577, 73, 276, "Input"],
Cell[156170, 4338, 2261, 57, 187, "Input"],
Cell[CellGroupData[{
Cell[158456, 4399, 213, 4, 32, "Input"],
Cell[158672, 4405, 1345, 34, 68, "Output"]
}, Open  ]],
Cell[160032, 4442, 3305, 99, 187, "Input"],
Cell[163340, 4543, 3996, 104, 153, "Input"],
Cell[167339, 4649, 1125, 29, 77, "Input"],
Cell[CellGroupData[{
Cell[168489, 4682, 254, 5, 32, "Input"],
Cell[168746, 4689, 6020, 168, 226, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[174803, 4862, 273, 6, 32, "Input"],
Cell[175079, 4870, 1301, 32, 128, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[176417, 4907, 249, 5, 32, "Input"],
Cell[176669, 4914, 1414, 35, 131, "Output"]
}, Open  ]],
Cell[178098, 4952, 1224, 31, 36, "Input"],
Cell[179325, 4985, 1866, 47, 36, "Input"],
Cell[CellGroupData[{
Cell[181216, 5036, 261, 5, 32, "Input"],
Cell[181480, 5043, 7071, 201, 196, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[188588, 5249, 708, 16, 35, "Input"],
Cell[189299, 5267, 4944, 140, 102, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[194280, 5412, 542, 14, 32, "Input"],
Cell[194825, 5428, 6152, 170, 114, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[201014, 5603, 177, 4, 32, "Input"],
Cell[201194, 5609, 1951, 56, 148, "Output"]
}, Open  ]],
Cell[203160, 5668, 2364, 60, 144, "Input"],
Cell[205527, 5730, 416, 12, 32, "Input"],
Cell[205946, 5744, 2390, 67, 301, "Input"],
Cell[208339, 5813, 1562, 41, 300, "Input"],
Cell[209904, 5856, 2989, 92, 236, "Input"],
Cell[212896, 5950, 6604, 189, 569, "Input"],
Cell[219503, 6141, 4504, 133, 413, "Input"],
Cell[224010, 6276, 1371, 40, 96, "Input"],
Cell[225384, 6318, 2235, 67, 77, "Input"],
Cell[227622, 6387, 917, 25, 99, "Input"],
Cell[228542, 6414, 233, 5, 55, "Input"],
Cell[228778, 6421, 1193, 26, 121, "Input"],
Cell[229974, 6449, 232, 6, 32, "Input"],
Cell[CellGroupData[{
Cell[230231, 6459, 210, 4, 32, "Input"],
Cell[230444, 6465, 1619, 37, 243, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[232100, 6507, 133, 2, 32, "Input"],
Cell[232236, 6511, 208, 4, 32, "Output"]
}, Open  ]],
Cell[232459, 6518, 919, 24, 32, "Input"],
Cell[CellGroupData[{
Cell[233403, 6546, 278, 6, 32, "Input"],
Cell[233684, 6554, 1459, 40, 55, "Output"]
}, Open  ]],
Cell[235158, 6597, 3333, 103, 143, "Input"],
Cell[CellGroupData[{
Cell[238516, 6704, 500, 9, 32, "Input"],
Cell[239019, 6715, 23160, 389, 221, "Output"]
}, Open  ]],
Cell[262194, 7107, 613, 16, 77, "Input"],
Cell[262810, 7125, 2416, 63, 148, "Input"],
Cell[265229, 7190, 1210, 28, 32, "Input"],
Cell[CellGroupData[{
Cell[266464, 7222, 593, 12, 34, "Input"],
Cell[267060, 7236, 22585, 381, 221, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[289682, 7622, 499, 13, 34, "Input"],
Cell[290184, 7637, 39208, 654, 217, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[329429, 8296, 749, 22, 34, "Input"],
Cell[330181, 8320, 40113, 671, 221, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[370331, 8996, 271, 8, 34, "Input"],
Cell[370605, 9006, 22558, 381, 242, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[393200, 9392, 451, 12, 34, "Input"],
Cell[393654, 9406, 36429, 608, 229, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[430120, 10019, 748, 22, 34, "Input"],
Cell[430871, 10043, 40559, 676, 236, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[471467, 10724, 333, 9, 32, "Input"],
Cell[471803, 10735, 22001, 372, 246, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[493841, 11112, 490, 14, 32, "Input"],
Cell[494334, 11128, 28498, 478, 225, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[522869, 11611, 924, 26, 32, "Input"],
Cell[523796, 11639, 38956, 649, 230, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[562789, 12293, 307, 9, 32, "Input"],
Cell[563099, 12304, 21645, 366, 237, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[584781, 12675, 441, 13, 32, "Input"],
Cell[585225, 12690, 36680, 612, 233, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[621942, 13307, 869, 25, 32, "Input"],
Cell[622814, 13334, 37939, 633, 239, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[660790, 13972, 329, 9, 32, "Input"],
Cell[661122, 13983, 22227, 375, 244, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[683386, 14363, 441, 13, 32, "Input"],
Cell[683830, 14378, 27414, 460, 233, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[711281, 14843, 822, 24, 32, "Input"],
Cell[712106, 14869, 36929, 616, 242, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[749072, 15490, 307, 9, 32, "Input"],
Cell[749382, 15501, 21575, 365, 240, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[770994, 15871, 441, 13, 32, "Input"],
Cell[771438, 15886, 36321, 606, 221, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[807796, 16497, 824, 24, 32, "Input"],
Cell[808623, 16523, 42205, 703, 230, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[850865, 17231, 425, 11, 32, "Input"],
Cell[851293, 17244, 25569, 430, 227, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[876899, 17679, 421, 12, 32, "Input"],
Cell[877323, 17693, 45685, 760, 260, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[923045, 18458, 631, 17, 32, "Input"],
Cell[923679, 18477, 79, 1, 32, "Output"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
